<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="14509"><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::instance_create_surface (2 samples, 0.01%)</title><rect x="0.0069%" y="517" width="0.0138%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.2569%" y="527.50"></text></g><g><title>minecraft`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::instance_create_surface (2 samples, 0.01%)</title><rect x="0.0069%" y="501" width="0.0138%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2569%" y="511.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Instance as wgpu_hal::Instance&lt;wgpu_hal::metal::Api&gt;&gt;::create_surface (2 samples, 0.01%)</title><rect x="0.0069%" y="485" width="0.0138%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2569%" y="495.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::metal::Surface&gt;::from_view (2 samples, 0.01%)</title><rect x="0.0069%" y="469" width="0.0138%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2569%" y="479.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::metal::Surface&gt;::get_metal_layer (2 samples, 0.01%)</title><rect x="0.0069%" y="453" width="0.0138%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2569%" y="463.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (2 samples, 0.01%)</title><rect x="0.0069%" y="437" width="0.0138%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="0.2569%" y="447.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (2 samples, 0.01%)</title><rect x="0.0069%" y="421" width="0.0138%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="2"/><text x="0.2569%" y="431.50"></text></g><g><title>Metal`MTLCopyAllDevices (2 samples, 0.01%)</title><rect x="0.0069%" y="405" width="0.0138%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="2"/><text x="0.2569%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.0069%" y="389" width="0.0138%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="2"/><text x="0.2569%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.0069%" y="373" width="0.0138%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="2"/><text x="0.2569%" y="383.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (2 samples, 0.01%)</title><rect x="0.0069%" y="357" width="0.0138%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="2"/><text x="0.2569%" y="367.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::new (4 samples, 0.03%)</title><rect x="0.0069%" y="533" width="0.0276%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="4"/><text x="0.2569%" y="543.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (2 samples, 0.01%)</title><rect x="0.0551%" y="277" width="0.0138%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="2"/><text x="0.3051%" y="287.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (2 samples, 0.01%)</title><rect x="0.0551%" y="261" width="0.0138%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="2"/><text x="0.3051%" y="271.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (2 samples, 0.01%)</title><rect x="0.0551%" y="245" width="0.0138%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.3051%" y="255.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (2 samples, 0.01%)</title><rect x="0.0551%" y="229" width="0.0138%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="2"/><text x="0.3051%" y="239.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (2 samples, 0.01%)</title><rect x="0.0551%" y="213" width="0.0138%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="2"/><text x="0.3051%" y="223.50"></text></g><g><title>AppKit`-[NSButtonCell init] (2 samples, 0.01%)</title><rect x="0.0551%" y="197" width="0.0138%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="2"/><text x="0.3051%" y="207.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (4 samples, 0.03%)</title><rect x="0.0482%" y="405" width="0.0276%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="4"/><text x="0.2982%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (4 samples, 0.03%)</title><rect x="0.0482%" y="389" width="0.0276%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="4"/><text x="0.2982%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.03%)</title><rect x="0.0482%" y="373" width="0.0276%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="4"/><text x="0.2982%" y="383.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (4 samples, 0.03%)</title><rect x="0.0482%" y="357" width="0.0276%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="4"/><text x="0.2982%" y="367.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (4 samples, 0.03%)</title><rect x="0.0482%" y="341" width="0.0276%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="4"/><text x="0.2982%" y="351.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (4 samples, 0.03%)</title><rect x="0.0482%" y="325" width="0.0276%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="4"/><text x="0.2982%" y="335.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (4 samples, 0.03%)</title><rect x="0.0482%" y="309" width="0.0276%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="4"/><text x="0.2982%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (4 samples, 0.03%)</title><rect x="0.0482%" y="293" width="0.0276%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="4"/><text x="0.2982%" y="303.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.04%)</title><rect x="0.0482%" y="421" width="0.0414%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="6"/><text x="0.2982%" y="431.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (2 samples, 0.01%)</title><rect x="0.0758%" y="405" width="0.0138%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="2"/><text x="0.3258%" y="415.50"></text></g><g><title>AppKit`-[NSResponder init] (2 samples, 0.01%)</title><rect x="0.0758%" y="389" width="0.0138%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="2"/><text x="0.3258%" y="399.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (2 samples, 0.01%)</title><rect x="0.0758%" y="373" width="0.0138%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="2"/><text x="0.3258%" y="383.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.0758%" y="357" width="0.0138%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="2"/><text x="0.3258%" y="367.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.0758%" y="341" width="0.0138%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="2"/><text x="0.3258%" y="351.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.0758%" y="325" width="0.0138%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="2"/><text x="0.3258%" y="335.50"></text></g><g><title>AppKit`lockedClassInfoForClass (2 samples, 0.01%)</title><rect x="0.0758%" y="309" width="0.0138%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="2"/><text x="0.3258%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (9 samples, 0.06%)</title><rect x="0.0482%" y="437" width="0.0620%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="9"/><text x="0.2982%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (3 samples, 0.02%)</title><rect x="0.0896%" y="421" width="0.0207%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="3"/><text x="0.3396%" y="431.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (3 samples, 0.02%)</title><rect x="0.0896%" y="405" width="0.0207%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="3"/><text x="0.3396%" y="415.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (2 samples, 0.01%)</title><rect x="0.0965%" y="389" width="0.0138%" height="15" fill="rgb(245,192,40)" fg:x="14" fg:w="2"/><text x="0.3465%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (10 samples, 0.07%)</title><rect x="0.0482%" y="453" width="0.0689%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="10"/><text x="0.2982%" y="463.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (12 samples, 0.08%)</title><rect x="0.0414%" y="501" width="0.0827%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="12"/><text x="0.2914%" y="511.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (12 samples, 0.08%)</title><rect x="0.0414%" y="485" width="0.0827%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="12"/><text x="0.2914%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (12 samples, 0.08%)</title><rect x="0.0414%" y="469" width="0.0827%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="12"/><text x="0.2914%" y="479.50"></text></g><g><title>minecraft`winit::platform_impl::platform::Window::new (14 samples, 0.10%)</title><rect x="0.0345%" y="533" width="0.0965%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="14"/><text x="0.2845%" y="543.50"></text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::new (14 samples, 0.10%)</title><rect x="0.0345%" y="517" width="0.0965%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="14"/><text x="0.2845%" y="527.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (2 samples, 0.01%)</title><rect x="0.1447%" y="485" width="0.0138%" height="15" fill="rgb(222,207,29)" fg:x="21" fg:w="2"/><text x="0.3947%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.1447%" y="469" width="0.0138%" height="15" fill="rgb(206,96,30)" fg:x="21" fg:w="2"/><text x="0.3947%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.1447%" y="453" width="0.0138%" height="15" fill="rgb(218,138,4)" fg:x="21" fg:w="2"/><text x="0.3947%" y="463.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (2 samples, 0.01%)</title><rect x="0.1447%" y="437" width="0.0138%" height="15" fill="rgb(250,191,14)" fg:x="21" fg:w="2"/><text x="0.3947%" y="447.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (2 samples, 0.01%)</title><rect x="0.1447%" y="421" width="0.0138%" height="15" fill="rgb(239,60,40)" fg:x="21" fg:w="2"/><text x="0.3947%" y="431.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (2 samples, 0.01%)</title><rect x="0.1447%" y="405" width="0.0138%" height="15" fill="rgb(206,27,48)" fg:x="21" fg:w="2"/><text x="0.3947%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="0.1447%" y="389" width="0.0138%" height="15" fill="rgb(225,35,8)" fg:x="21" fg:w="2"/><text x="0.3947%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="0.1447%" y="373" width="0.0138%" height="15" fill="rgb(250,213,24)" fg:x="21" fg:w="2"/><text x="0.3947%" y="383.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (2 samples, 0.01%)</title><rect x="0.1447%" y="357" width="0.0138%" height="15" fill="rgb(247,123,22)" fg:x="21" fg:w="2"/><text x="0.3947%" y="367.50"></text></g><g><title>AppKit`_NSCGSCreateArrayUsingBlock (2 samples, 0.01%)</title><rect x="0.1447%" y="341" width="0.0138%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="2"/><text x="0.3947%" y="351.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (2 samples, 0.01%)</title><rect x="0.1447%" y="325" width="0.0138%" height="15" fill="rgb(231,145,46)" fg:x="21" fg:w="2"/><text x="0.3947%" y="335.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (2 samples, 0.01%)</title><rect x="0.1447%" y="309" width="0.0138%" height="15" fill="rgb(251,118,11)" fg:x="21" fg:w="2"/><text x="0.3947%" y="319.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.06%)</title><rect x="0.1310%" y="501" width="0.0551%" height="15" fill="rgb(217,147,25)" fg:x="19" fg:w="8"/><text x="0.3810%" y="511.50"></text></g><g><title>AppKit`_NSInitializeAppContext (3 samples, 0.02%)</title><rect x="0.1654%" y="485" width="0.0207%" height="15" fill="rgb(247,81,37)" fg:x="24" fg:w="3"/><text x="0.4154%" y="495.50"></text></g><g><title>HIToolbox`MenuBarInstance::IsVisible (2 samples, 0.01%)</title><rect x="0.1723%" y="469" width="0.0138%" height="15" fill="rgb(209,12,38)" fg:x="25" fg:w="2"/><text x="0.4223%" y="479.50"></text></g><g><title>HIToolbox`MenuBarInstance::GetAggregateUIMode (2 samples, 0.01%)</title><rect x="0.1723%" y="453" width="0.0138%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="2"/><text x="0.4223%" y="463.50"></text></g><g><title>HIServices`GetCurrentProcess (2 samples, 0.01%)</title><rect x="0.1723%" y="437" width="0.0138%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="2"/><text x="0.4223%" y="447.50"></text></g><g><title>HIServices`_RegisterApplication (2 samples, 0.01%)</title><rect x="0.1723%" y="421" width="0.0138%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="2"/><text x="0.4223%" y="431.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (9 samples, 0.06%)</title><rect x="0.1310%" y="517" width="0.0620%" height="15" fill="rgb(210,229,1)" fg:x="19" fg:w="9"/><text x="0.3810%" y="527.50"></text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (10 samples, 0.07%)</title><rect x="0.1310%" y="533" width="0.0689%" height="15" fill="rgb(222,148,37)" fg:x="19" fg:w="10"/><text x="0.3810%" y="543.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (2 samples, 0.01%)</title><rect x="0.2068%" y="421" width="0.0138%" height="15" fill="rgb(234,67,33)" fg:x="30" fg:w="2"/><text x="0.4568%" y="431.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (3 samples, 0.02%)</title><rect x="0.2068%" y="453" width="0.0207%" height="15" fill="rgb(247,98,35)" fg:x="30" fg:w="3"/><text x="0.4568%" y="463.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (3 samples, 0.02%)</title><rect x="0.2068%" y="437" width="0.0207%" height="15" fill="rgb(247,138,52)" fg:x="30" fg:w="3"/><text x="0.4568%" y="447.50"></text></g><g><title>AppKit`+[NSTextInputContext processInputKeyBindings:] (2 samples, 0.01%)</title><rect x="0.2343%" y="421" width="0.0138%" height="15" fill="rgb(213,79,30)" fg:x="34" fg:w="2"/><text x="0.4843%" y="431.50"></text></g><g><title>HIToolbox`ProcessInputSourceSwitchEventCandidate (2 samples, 0.01%)</title><rect x="0.2343%" y="405" width="0.0138%" height="15" fill="rgb(246,177,23)" fg:x="34" fg:w="2"/><text x="0.4843%" y="415.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKViewHelper trackingAreas] (2 samples, 0.01%)</title><rect x="0.2895%" y="357" width="0.0138%" height="15" fill="rgb(230,62,27)" fg:x="42" fg:w="2"/><text x="0.5395%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSOrderedSetM insertObject:atIndex:] (2 samples, 0.01%)</title><rect x="0.3239%" y="357" width="0.0138%" height="15" fill="rgb(216,154,8)" fg:x="47" fg:w="2"/><text x="0.5739%" y="367.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:] (11 samples, 0.08%)</title><rect x="0.2826%" y="373" width="0.0758%" height="15" fill="rgb(244,35,45)" fg:x="41" fg:w="11"/><text x="0.5326%" y="383.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager mouseMoved:] (17 samples, 0.12%)</title><rect x="0.2688%" y="389" width="0.1172%" height="15" fill="rgb(251,115,12)" fg:x="39" fg:w="17"/><text x="0.5188%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.02%)</title><rect x="0.3653%" y="373" width="0.0207%" height="15" fill="rgb(240,54,50)" fg:x="53" fg:w="3"/><text x="0.6153%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (20 samples, 0.14%)</title><rect x="0.2619%" y="421" width="0.1378%" height="15" fill="rgb(233,84,52)" fg:x="38" fg:w="20"/><text x="0.5119%" y="431.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (20 samples, 0.14%)</title><rect x="0.2619%" y="405" width="0.1378%" height="15" fill="rgb(207,117,47)" fg:x="38" fg:w="20"/><text x="0.5119%" y="415.50"></text></g><g><title>minecraft`winit::platform_impl::platform::view::key_down (2 samples, 0.01%)</title><rect x="0.3860%" y="389" width="0.0138%" height="15" fill="rgb(249,43,39)" fg:x="56" fg:w="2"/><text x="0.6360%" y="399.50"></text></g><g><title>minecraft`winit::platform_impl::platform::event::char_to_keycode (2 samples, 0.01%)</title><rect x="0.3860%" y="373" width="0.0138%" height="15" fill="rgb(209,38,44)" fg:x="56" fg:w="2"/><text x="0.6360%" y="383.50"></text></g><g><title>HIToolbox`TISKeyboardLayoutCapsLockIsRomanPlane (3 samples, 0.02%)</title><rect x="0.4066%" y="325" width="0.0207%" height="15" fill="rgb(236,212,23)" fg:x="59" fg:w="3"/><text x="0.6566%" y="335.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (2 samples, 0.01%)</title><rect x="0.4135%" y="309" width="0.0138%" height="15" fill="rgb(242,79,21)" fg:x="60" fg:w="2"/><text x="0.6635%" y="319.50"></text></g><g><title>AppKit`_NSKeyboardUIHandleSymbolicHotKey (4 samples, 0.03%)</title><rect x="0.4066%" y="421" width="0.0276%" height="15" fill="rgb(211,96,35)" fg:x="59" fg:w="4"/><text x="0.6566%" y="431.50"></text></g><g><title>HIToolbox`_IsSymbolicHotKeyEvent (4 samples, 0.03%)</title><rect x="0.4066%" y="405" width="0.0276%" height="15" fill="rgb(253,215,40)" fg:x="59" fg:w="4"/><text x="0.6566%" y="415.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (4 samples, 0.03%)</title><rect x="0.4066%" y="389" width="0.0276%" height="15" fill="rgb(211,81,21)" fg:x="59" fg:w="4"/><text x="0.6566%" y="399.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (4 samples, 0.03%)</title><rect x="0.4066%" y="373" width="0.0276%" height="15" fill="rgb(208,190,38)" fg:x="59" fg:w="4"/><text x="0.6566%" y="383.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (4 samples, 0.03%)</title><rect x="0.4066%" y="357" width="0.0276%" height="15" fill="rgb(235,213,38)" fg:x="59" fg:w="4"/><text x="0.6566%" y="367.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (4 samples, 0.03%)</title><rect x="0.4066%" y="341" width="0.0276%" height="15" fill="rgb(237,122,38)" fg:x="59" fg:w="4"/><text x="0.6566%" y="351.50"></text></g><g><title>AppKit`-[NSMenu _performActionForItem:atIndex:fromEvent:] (2 samples, 0.01%)</title><rect x="0.4342%" y="389" width="0.0138%" height="15" fill="rgb(244,218,35)" fg:x="63" fg:w="2"/><text x="0.6842%" y="399.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] (2 samples, 0.01%)</title><rect x="0.4342%" y="373" width="0.0138%" height="15" fill="rgb(240,68,47)" fg:x="63" fg:w="2"/><text x="0.6842%" y="383.50"></text></g><g><title>AppKit`-[NSMenuItem _corePerformAction] (2 samples, 0.01%)</title><rect x="0.4342%" y="357" width="0.0138%" height="15" fill="rgb(210,16,53)" fg:x="63" fg:w="2"/><text x="0.6842%" y="367.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (2 samples, 0.01%)</title><rect x="0.4342%" y="341" width="0.0138%" height="15" fill="rgb(235,124,12)" fg:x="63" fg:w="2"/><text x="0.6842%" y="351.50"></text></g><g><title>AppKit`-[NSApplication terminate:] (2 samples, 0.01%)</title><rect x="0.4342%" y="325" width="0.0138%" height="15" fill="rgb(224,169,11)" fg:x="63" fg:w="2"/><text x="0.6842%" y="335.50"></text></g><g><title>AppKit`routeKeyEquivalent (3 samples, 0.02%)</title><rect x="0.4342%" y="421" width="0.0207%" height="15" fill="rgb(250,166,2)" fg:x="63" fg:w="3"/><text x="0.6842%" y="431.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (3 samples, 0.02%)</title><rect x="0.4342%" y="405" width="0.0207%" height="15" fill="rgb(242,216,29)" fg:x="63" fg:w="3"/><text x="0.6842%" y="415.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (33 samples, 0.23%)</title><rect x="0.2343%" y="437" width="0.2274%" height="15" fill="rgb(230,116,27)" fg:x="34" fg:w="33"/><text x="0.4843%" y="447.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (41 samples, 0.28%)</title><rect x="0.2068%" y="469" width="0.2826%" height="15" fill="rgb(228,99,48)" fg:x="30" fg:w="41"/><text x="0.4568%" y="479.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app::send_event (38 samples, 0.26%)</title><rect x="0.2274%" y="453" width="0.2619%" height="15" fill="rgb(253,11,6)" fg:x="33" fg:w="38"/><text x="0.4774%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.01%)</title><rect x="0.4756%" y="437" width="0.0138%" height="15" fill="rgb(247,143,39)" fg:x="69" fg:w="2"/><text x="0.7256%" y="447.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (2 samples, 0.01%)</title><rect x="0.5100%" y="309" width="0.0138%" height="15" fill="rgb(236,97,10)" fg:x="74" fg:w="2"/><text x="0.7600%" y="319.50"></text></g><g><title>HIToolbox`AppleMenuHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (4 samples, 0.03%)</title><rect x="0.5238%" y="229" width="0.0276%" height="15" fill="rgb(233,208,19)" fg:x="76" fg:w="4"/><text x="0.7738%" y="239.50"></text></g><g><title>HIToolbox`HLTBGetPreferredUILocalization (2 samples, 0.01%)</title><rect x="0.5376%" y="213" width="0.0138%" height="15" fill="rgb(216,164,2)" fg:x="78" fg:w="2"/><text x="0.7876%" y="223.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (8 samples, 0.06%)</title><rect x="0.5031%" y="325" width="0.0551%" height="15" fill="rgb(220,129,5)" fg:x="73" fg:w="8"/><text x="0.7531%" y="335.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (5 samples, 0.03%)</title><rect x="0.5238%" y="309" width="0.0345%" height="15" fill="rgb(242,17,10)" fg:x="76" fg:w="5"/><text x="0.7738%" y="319.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (5 samples, 0.03%)</title><rect x="0.5238%" y="293" width="0.0345%" height="15" fill="rgb(242,107,0)" fg:x="76" fg:w="5"/><text x="0.7738%" y="303.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (5 samples, 0.03%)</title><rect x="0.5238%" y="277" width="0.0345%" height="15" fill="rgb(251,28,31)" fg:x="76" fg:w="5"/><text x="0.7738%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (5 samples, 0.03%)</title><rect x="0.5238%" y="261" width="0.0345%" height="15" fill="rgb(233,223,10)" fg:x="76" fg:w="5"/><text x="0.7738%" y="271.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (5 samples, 0.03%)</title><rect x="0.5238%" y="245" width="0.0345%" height="15" fill="rgb(215,21,27)" fg:x="76" fg:w="5"/><text x="0.7738%" y="255.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (3 samples, 0.02%)</title><rect x="0.5652%" y="325" width="0.0207%" height="15" fill="rgb(232,23,21)" fg:x="82" fg:w="3"/><text x="0.8152%" y="335.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (3 samples, 0.02%)</title><rect x="0.5652%" y="309" width="0.0207%" height="15" fill="rgb(244,5,23)" fg:x="82" fg:w="3"/><text x="0.8152%" y="319.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (3 samples, 0.02%)</title><rect x="0.5652%" y="293" width="0.0207%" height="15" fill="rgb(226,81,46)" fg:x="82" fg:w="3"/><text x="0.8152%" y="303.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (3 samples, 0.02%)</title><rect x="0.5652%" y="277" width="0.0207%" height="15" fill="rgb(247,70,30)" fg:x="82" fg:w="3"/><text x="0.8152%" y="287.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (13 samples, 0.09%)</title><rect x="0.5031%" y="437" width="0.0896%" height="15" fill="rgb(212,68,19)" fg:x="73" fg:w="13"/><text x="0.7531%" y="447.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (13 samples, 0.09%)</title><rect x="0.5031%" y="421" width="0.0896%" height="15" fill="rgb(240,187,13)" fg:x="73" fg:w="13"/><text x="0.7531%" y="431.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (13 samples, 0.09%)</title><rect x="0.5031%" y="405" width="0.0896%" height="15" fill="rgb(223,113,26)" fg:x="73" fg:w="13"/><text x="0.7531%" y="415.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (13 samples, 0.09%)</title><rect x="0.5031%" y="389" width="0.0896%" height="15" fill="rgb(206,192,2)" fg:x="73" fg:w="13"/><text x="0.7531%" y="399.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (13 samples, 0.09%)</title><rect x="0.5031%" y="373" width="0.0896%" height="15" fill="rgb(241,108,4)" fg:x="73" fg:w="13"/><text x="0.7531%" y="383.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (13 samples, 0.09%)</title><rect x="0.5031%" y="357" width="0.0896%" height="15" fill="rgb(247,173,49)" fg:x="73" fg:w="13"/><text x="0.7531%" y="367.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (13 samples, 0.09%)</title><rect x="0.5031%" y="341" width="0.0896%" height="15" fill="rgb(224,114,35)" fg:x="73" fg:w="13"/><text x="0.7531%" y="351.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (14 samples, 0.10%)</title><rect x="0.5031%" y="453" width="0.0965%" height="15" fill="rgb(245,159,27)" fg:x="73" fg:w="14"/><text x="0.7531%" y="463.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (2 samples, 0.01%)</title><rect x="0.6203%" y="357" width="0.0138%" height="15" fill="rgb(245,172,44)" fg:x="90" fg:w="2"/><text x="0.8703%" y="367.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (2 samples, 0.01%)</title><rect x="0.6203%" y="341" width="0.0138%" height="15" fill="rgb(236,23,11)" fg:x="90" fg:w="2"/><text x="0.8703%" y="351.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (2 samples, 0.01%)</title><rect x="0.6203%" y="325" width="0.0138%" height="15" fill="rgb(205,117,38)" fg:x="90" fg:w="2"/><text x="0.8703%" y="335.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (2 samples, 0.01%)</title><rect x="0.6203%" y="309" width="0.0138%" height="15" fill="rgb(237,72,25)" fg:x="90" fg:w="2"/><text x="0.8703%" y="319.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (2 samples, 0.01%)</title><rect x="0.6203%" y="293" width="0.0138%" height="15" fill="rgb(244,70,9)" fg:x="90" fg:w="2"/><text x="0.8703%" y="303.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (2 samples, 0.01%)</title><rect x="0.6203%" y="277" width="0.0138%" height="15" fill="rgb(217,125,39)" fg:x="90" fg:w="2"/><text x="0.8703%" y="287.50"></text></g><g><title>HIToolbox`ShowHide (2 samples, 0.01%)</title><rect x="0.6203%" y="261" width="0.0138%" height="15" fill="rgb(235,36,10)" fg:x="90" fg:w="2"/><text x="0.8703%" y="271.50"></text></g><g><title>HIToolbox`_ShowHideWindows (2 samples, 0.01%)</title><rect x="0.6203%" y="245" width="0.0138%" height="15" fill="rgb(251,123,47)" fg:x="90" fg:w="2"/><text x="0.8703%" y="255.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (2 samples, 0.01%)</title><rect x="0.6203%" y="229" width="0.0138%" height="15" fill="rgb(221,13,13)" fg:x="90" fg:w="2"/><text x="0.8703%" y="239.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (2 samples, 0.01%)</title><rect x="0.6203%" y="213" width="0.0138%" height="15" fill="rgb(238,131,9)" fg:x="90" fg:w="2"/><text x="0.8703%" y="223.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (2 samples, 0.01%)</title><rect x="0.6203%" y="197" width="0.0138%" height="15" fill="rgb(211,50,8)" fg:x="90" fg:w="2"/><text x="0.8703%" y="207.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (2 samples, 0.01%)</title><rect x="0.6203%" y="181" width="0.0138%" height="15" fill="rgb(245,182,24)" fg:x="90" fg:w="2"/><text x="0.8703%" y="191.50"></text></g><g><title>HIToolbox`HIView::SendDraw (2 samples, 0.01%)</title><rect x="0.6203%" y="165" width="0.0138%" height="15" fill="rgb(242,14,37)" fg:x="90" fg:w="2"/><text x="0.8703%" y="175.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (2 samples, 0.01%)</title><rect x="0.6203%" y="149" width="0.0138%" height="15" fill="rgb(246,228,12)" fg:x="90" fg:w="2"/><text x="0.8703%" y="159.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (2 samples, 0.01%)</title><rect x="0.6203%" y="133" width="0.0138%" height="15" fill="rgb(213,55,15)" fg:x="90" fg:w="2"/><text x="0.8703%" y="143.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (2 samples, 0.01%)</title><rect x="0.6203%" y="117" width="0.0138%" height="15" fill="rgb(209,9,3)" fg:x="90" fg:w="2"/><text x="0.8703%" y="127.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (2 samples, 0.01%)</title><rect x="0.6203%" y="101" width="0.0138%" height="15" fill="rgb(230,59,30)" fg:x="90" fg:w="2"/><text x="0.8703%" y="111.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (2 samples, 0.01%)</title><rect x="0.6203%" y="85" width="0.0138%" height="15" fill="rgb(209,121,21)" fg:x="90" fg:w="2"/><text x="0.8703%" y="95.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (2 samples, 0.01%)</title><rect x="0.6203%" y="69" width="0.0138%" height="15" fill="rgb(220,109,13)" fg:x="90" fg:w="2"/><text x="0.8703%" y="79.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (2 samples, 0.01%)</title><rect x="0.6203%" y="53" width="0.0138%" height="15" fill="rgb(232,18,1)" fg:x="90" fg:w="2"/><text x="0.8703%" y="63.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (2 samples, 0.01%)</title><rect x="0.6203%" y="37" width="0.0138%" height="15" fill="rgb(215,41,42)" fg:x="90" fg:w="2"/><text x="0.8703%" y="47.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (4 samples, 0.03%)</title><rect x="0.6134%" y="405" width="0.0276%" height="15" fill="rgb(224,123,36)" fg:x="89" fg:w="4"/><text x="0.8634%" y="415.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (3 samples, 0.02%)</title><rect x="0.6203%" y="389" width="0.0207%" height="15" fill="rgb(240,125,3)" fg:x="90" fg:w="3"/><text x="0.8703%" y="399.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (3 samples, 0.02%)</title><rect x="0.6203%" y="373" width="0.0207%" height="15" fill="rgb(205,98,50)" fg:x="90" fg:w="3"/><text x="0.8703%" y="383.50"></text></g><g><title>HIToolbox`DYLD-STUB$$_CFRunLoopSetCurrent (2 samples, 0.01%)</title><rect x="0.6410%" y="405" width="0.0138%" height="15" fill="rgb(205,185,37)" fg:x="93" fg:w="2"/><text x="0.8910%" y="415.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (4 samples, 0.03%)</title><rect x="0.6548%" y="373" width="0.0276%" height="15" fill="rgb(238,207,15)" fg:x="95" fg:w="4"/><text x="0.9048%" y="383.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$kdebug_trace (5 samples, 0.03%)</title><rect x="0.6892%" y="373" width="0.0345%" height="15" fill="rgb(213,199,42)" fg:x="100" fg:w="5"/><text x="0.9392%" y="383.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_release (2 samples, 0.01%)</title><rect x="0.7375%" y="373" width="0.0138%" height="15" fill="rgb(235,201,11)" fg:x="107" fg:w="2"/><text x="0.9875%" y="383.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_lock (3 samples, 0.02%)</title><rect x="0.7513%" y="373" width="0.0207%" height="15" fill="rgb(207,46,11)" fg:x="109" fg:w="3"/><text x="1.0013%" y="383.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="0.7719%" y="373" width="0.0138%" height="15" fill="rgb(241,35,35)" fg:x="112" fg:w="2"/><text x="1.0219%" y="383.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (7 samples, 0.05%)</title><rect x="0.8409%" y="293" width="0.0482%" height="15" fill="rgb(243,32,47)" fg:x="122" fg:w="7"/><text x="1.0909%" y="303.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (7 samples, 0.05%)</title><rect x="0.8409%" y="277" width="0.0482%" height="15" fill="rgb(247,202,23)" fg:x="122" fg:w="7"/><text x="1.0909%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (7 samples, 0.05%)</title><rect x="0.8409%" y="261" width="0.0482%" height="15" fill="rgb(219,102,11)" fg:x="122" fg:w="7"/><text x="1.0909%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (7 samples, 0.05%)</title><rect x="0.8409%" y="245" width="0.0482%" height="15" fill="rgb(243,110,44)" fg:x="122" fg:w="7"/><text x="1.0909%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (7 samples, 0.05%)</title><rect x="0.8409%" y="229" width="0.0482%" height="15" fill="rgb(222,74,54)" fg:x="122" fg:w="7"/><text x="1.0909%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.03%)</title><rect x="0.8960%" y="293" width="0.0345%" height="15" fill="rgb(216,99,12)" fg:x="130" fg:w="5"/><text x="1.1460%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.03%)</title><rect x="0.8960%" y="277" width="0.0345%" height="15" fill="rgb(226,22,26)" fg:x="130" fg:w="5"/><text x="1.1460%" y="287.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (16 samples, 0.11%)</title><rect x="0.8271%" y="309" width="0.1103%" height="15" fill="rgb(217,163,10)" fg:x="120" fg:w="16"/><text x="1.0771%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (19 samples, 0.13%)</title><rect x="0.8202%" y="341" width="0.1310%" height="15" fill="rgb(213,25,53)" fg:x="119" fg:w="19"/><text x="1.0702%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (18 samples, 0.12%)</title><rect x="0.8271%" y="325" width="0.1241%" height="15" fill="rgb(252,105,26)" fg:x="120" fg:w="18"/><text x="1.0771%" y="335.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (20 samples, 0.14%)</title><rect x="0.8202%" y="357" width="0.1378%" height="15" fill="rgb(220,39,43)" fg:x="119" fg:w="20"/><text x="1.0702%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (26 samples, 0.18%)</title><rect x="0.7857%" y="373" width="0.1792%" height="15" fill="rgb(229,68,48)" fg:x="114" fg:w="26"/><text x="1.0357%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (4 samples, 0.03%)</title><rect x="0.9649%" y="373" width="0.0276%" height="15" fill="rgb(252,8,32)" fg:x="140" fg:w="4"/><text x="1.2149%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (3 samples, 0.02%)</title><rect x="0.9925%" y="373" width="0.0207%" height="15" fill="rgb(223,20,43)" fg:x="144" fg:w="3"/><text x="1.2425%" y="383.50"></text></g><g><title>CoreFoundation`-[__NSArrayM addObject:] (2 samples, 0.01%)</title><rect x="1.2544%" y="357" width="0.0138%" height="15" fill="rgb(229,81,49)" fg:x="182" fg:w="2"/><text x="1.5044%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (7 samples, 0.05%)</title><rect x="1.2682%" y="357" width="0.0482%" height="15" fill="rgb(236,28,36)" fg:x="184" fg:w="7"/><text x="1.5182%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (11 samples, 0.08%)</title><rect x="1.3302%" y="357" width="0.0758%" height="15" fill="rgb(249,185,26)" fg:x="193" fg:w="11"/><text x="1.5802%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSCFTimer retain] (5 samples, 0.03%)</title><rect x="1.4129%" y="357" width="0.0345%" height="15" fill="rgb(249,174,33)" fg:x="205" fg:w="5"/><text x="1.6629%" y="367.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (2 samples, 0.01%)</title><rect x="1.4681%" y="341" width="0.0138%" height="15" fill="rgb(233,201,37)" fg:x="213" fg:w="2"/><text x="1.7181%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (4 samples, 0.03%)</title><rect x="1.5025%" y="325" width="0.0276%" height="15" fill="rgb(221,78,26)" fg:x="218" fg:w="4"/><text x="1.7525%" y="335.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (83 samples, 0.57%)</title><rect x="1.4818%" y="341" width="0.5721%" height="15" fill="rgb(250,127,30)" fg:x="215" fg:w="83"/><text x="1.7318%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (76 samples, 0.52%)</title><rect x="1.5301%" y="325" width="0.5238%" height="15" fill="rgb(230,49,44)" fg:x="222" fg:w="76"/><text x="1.7801%" y="335.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (91 samples, 0.63%)</title><rect x="1.4474%" y="357" width="0.6272%" height="15" fill="rgb(229,67,23)" fg:x="210" fg:w="91"/><text x="1.6974%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (2 samples, 0.01%)</title><rect x="2.0608%" y="341" width="0.0138%" height="15" fill="rgb(249,83,47)" fg:x="299" fg:w="2"/><text x="2.3108%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayCreateMutable (2 samples, 0.01%)</title><rect x="2.0746%" y="357" width="0.0138%" height="15" fill="rgb(215,43,3)" fg:x="301" fg:w="2"/><text x="2.3246%" y="367.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (25 samples, 0.17%)</title><rect x="2.0884%" y="357" width="0.1723%" height="15" fill="rgb(238,154,13)" fg:x="303" fg:w="25"/><text x="2.3384%" y="367.50"></text></g><g><title>CoreFoundation`CFRelease (4 samples, 0.03%)</title><rect x="2.2607%" y="357" width="0.0276%" height="15" fill="rgb(219,56,2)" fg:x="328" fg:w="4"/><text x="2.5107%" y="367.50"></text></g><g><title>CoreFoundation`CFRetain (3 samples, 0.02%)</title><rect x="2.2882%" y="357" width="0.0207%" height="15" fill="rgb(233,0,4)" fg:x="332" fg:w="3"/><text x="2.5382%" y="367.50"></text></g><g><title>CoreFoundation`CFSetGetCount (7 samples, 0.05%)</title><rect x="2.3158%" y="357" width="0.0482%" height="15" fill="rgb(235,30,7)" fg:x="336" fg:w="7"/><text x="2.5658%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$bzero (6 samples, 0.04%)</title><rect x="2.3640%" y="357" width="0.0414%" height="15" fill="rgb(250,79,13)" fg:x="343" fg:w="6"/><text x="2.6140%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$gettimeofday (2 samples, 0.01%)</title><rect x="2.4054%" y="357" width="0.0138%" height="15" fill="rgb(211,146,34)" fg:x="349" fg:w="2"/><text x="2.6554%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$kdebug_trace (5 samples, 0.03%)</title><rect x="2.4261%" y="357" width="0.0345%" height="15" fill="rgb(228,22,38)" fg:x="352" fg:w="5"/><text x="2.6761%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_lock (3 samples, 0.02%)</title><rect x="2.4743%" y="357" width="0.0207%" height="15" fill="rgb(235,168,5)" fg:x="359" fg:w="3"/><text x="2.7243%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="2.4950%" y="357" width="0.0345%" height="15" fill="rgb(221,155,16)" fg:x="362" fg:w="5"/><text x="2.7450%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$voucher_mach_msg_adopt (4 samples, 0.03%)</title><rect x="2.5295%" y="357" width="0.0276%" height="15" fill="rgb(215,215,53)" fg:x="367" fg:w="4"/><text x="2.7795%" y="367.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$voucher_mach_msg_revert (4 samples, 0.03%)</title><rect x="2.5570%" y="357" width="0.0276%" height="15" fill="rgb(223,4,10)" fg:x="371" fg:w="4"/><text x="2.8070%" y="367.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (4 samples, 0.03%)</title><rect x="2.5846%" y="357" width="0.0276%" height="15" fill="rgb(234,103,6)" fg:x="375" fg:w="4"/><text x="2.8346%" y="367.50"></text></g><g><title>CoreFoundation`_CFRetain (5 samples, 0.03%)</title><rect x="2.6122%" y="357" width="0.0345%" height="15" fill="rgb(227,97,0)" fg:x="379" fg:w="5"/><text x="2.8622%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (4 samples, 0.03%)</title><rect x="2.6466%" y="357" width="0.0276%" height="15" fill="rgb(234,150,53)" fg:x="384" fg:w="4"/><text x="2.8966%" y="367.50"></text></g><g><title>AppKit`__35-[_NSMenuShortcutUpdater schedule:]_block_invoke (2 samples, 0.01%)</title><rect x="2.6880%" y="325" width="0.0138%" height="15" fill="rgb(228,201,54)" fg:x="390" fg:w="2"/><text x="2.9380%" y="335.50"></text></g><g><title>AppKit`UpdateKeyboardAwareShortcutsForCurrentInputSource (2 samples, 0.01%)</title><rect x="2.6880%" y="309" width="0.0138%" height="15" fill="rgb(222,22,37)" fg:x="390" fg:w="2"/><text x="2.9380%" y="319.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (4 samples, 0.03%)</title><rect x="2.6880%" y="341" width="0.0276%" height="15" fill="rgb(237,53,32)" fg:x="390" fg:w="4"/><text x="2.9380%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (10 samples, 0.07%)</title><rect x="2.6742%" y="357" width="0.0689%" height="15" fill="rgb(233,25,53)" fg:x="388" fg:w="10"/><text x="2.9242%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (4 samples, 0.03%)</title><rect x="2.7156%" y="341" width="0.0276%" height="15" fill="rgb(210,40,34)" fg:x="394" fg:w="4"/><text x="2.9656%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="2.7293%" y="325" width="0.0138%" height="15" fill="rgb(241,220,44)" fg:x="396" fg:w="2"/><text x="2.9793%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (3 samples, 0.02%)</title><rect x="3.1360%" y="341" width="0.0207%" height="15" fill="rgb(235,28,35)" fg:x="455" fg:w="3"/><text x="3.3860%" y="351.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (15 samples, 0.10%)</title><rect x="3.1567%" y="341" width="0.1034%" height="15" fill="rgb(210,56,17)" fg:x="458" fg:w="15"/><text x="3.4067%" y="351.50"></text></g><g><title>CoreFoundation`CFRelease (15 samples, 0.10%)</title><rect x="3.2600%" y="341" width="0.1034%" height="15" fill="rgb(224,130,29)" fg:x="473" fg:w="15"/><text x="3.5100%" y="351.50"></text></g><g><title>CoreFoundation`CFRetain (19 samples, 0.13%)</title><rect x="3.3634%" y="341" width="0.1310%" height="15" fill="rgb(235,212,8)" fg:x="488" fg:w="19"/><text x="3.6134%" y="351.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (4 samples, 0.03%)</title><rect x="3.5013%" y="341" width="0.0276%" height="15" fill="rgb(223,33,50)" fg:x="508" fg:w="4"/><text x="3.7513%" y="351.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (13 samples, 0.09%)</title><rect x="3.5288%" y="341" width="0.0896%" height="15" fill="rgb(219,149,13)" fg:x="512" fg:w="13"/><text x="3.7788%" y="351.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (13 samples, 0.09%)</title><rect x="3.5288%" y="325" width="0.0896%" height="15" fill="rgb(250,156,29)" fg:x="512" fg:w="13"/><text x="3.7788%" y="335.50"></text></g><g><title>CoreFoundation`_CFRelease (9 samples, 0.06%)</title><rect x="3.6184%" y="341" width="0.0620%" height="15" fill="rgb(216,193,19)" fg:x="525" fg:w="9"/><text x="3.8684%" y="351.50"></text></g><g><title>CoreFoundation`_CFRetain (10 samples, 0.07%)</title><rect x="3.6805%" y="341" width="0.0689%" height="15" fill="rgb(216,135,14)" fg:x="534" fg:w="10"/><text x="3.9305%" y="351.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (3 samples, 0.02%)</title><rect x="3.7839%" y="261" width="0.0207%" height="15" fill="rgb(241,47,5)" fg:x="549" fg:w="3"/><text x="4.0339%" y="271.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (3 samples, 0.02%)</title><rect x="3.7839%" y="245" width="0.0207%" height="15" fill="rgb(233,42,35)" fg:x="549" fg:w="3"/><text x="4.0339%" y="255.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (4 samples, 0.03%)</title><rect x="3.7839%" y="277" width="0.0276%" height="15" fill="rgb(231,13,6)" fg:x="549" fg:w="4"/><text x="4.0339%" y="287.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (2 samples, 0.01%)</title><rect x="3.8114%" y="261" width="0.0138%" height="15" fill="rgb(207,181,40)" fg:x="553" fg:w="2"/><text x="4.0614%" y="271.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (2 samples, 0.01%)</title><rect x="3.8114%" y="245" width="0.0138%" height="15" fill="rgb(254,173,49)" fg:x="553" fg:w="2"/><text x="4.0614%" y="255.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (2 samples, 0.01%)</title><rect x="3.8114%" y="229" width="0.0138%" height="15" fill="rgb(221,1,38)" fg:x="553" fg:w="2"/><text x="4.0614%" y="239.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (4 samples, 0.03%)</title><rect x="3.8114%" y="277" width="0.0276%" height="15" fill="rgb(206,124,46)" fg:x="553" fg:w="4"/><text x="4.0614%" y="287.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (3 samples, 0.02%)</title><rect x="3.8459%" y="277" width="0.0207%" height="15" fill="rgb(249,21,11)" fg:x="558" fg:w="3"/><text x="4.0959%" y="287.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (13 samples, 0.09%)</title><rect x="3.7839%" y="293" width="0.0896%" height="15" fill="rgb(222,201,40)" fg:x="549" fg:w="13"/><text x="4.0339%" y="303.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (15 samples, 0.10%)</title><rect x="3.7839%" y="309" width="0.1034%" height="15" fill="rgb(235,61,29)" fg:x="549" fg:w="15"/><text x="4.0339%" y="319.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (3 samples, 0.02%)</title><rect x="3.8872%" y="261" width="0.0207%" height="15" fill="rgb(219,207,3)" fg:x="564" fg:w="3"/><text x="4.1372%" y="271.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (2 samples, 0.01%)</title><rect x="3.8941%" y="245" width="0.0138%" height="15" fill="rgb(222,56,46)" fg:x="565" fg:w="2"/><text x="4.1441%" y="255.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (2 samples, 0.01%)</title><rect x="3.8941%" y="229" width="0.0138%" height="15" fill="rgb(239,76,54)" fg:x="565" fg:w="2"/><text x="4.1441%" y="239.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (2 samples, 0.01%)</title><rect x="3.8941%" y="213" width="0.0138%" height="15" fill="rgb(231,124,27)" fg:x="565" fg:w="2"/><text x="4.1441%" y="223.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (2 samples, 0.01%)</title><rect x="3.8941%" y="197" width="0.0138%" height="15" fill="rgb(249,195,6)" fg:x="565" fg:w="2"/><text x="4.1441%" y="207.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (2 samples, 0.01%)</title><rect x="3.8941%" y="181" width="0.0138%" height="15" fill="rgb(237,174,47)" fg:x="565" fg:w="2"/><text x="4.1441%" y="191.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (4 samples, 0.03%)</title><rect x="3.8872%" y="277" width="0.0276%" height="15" fill="rgb(206,201,31)" fg:x="564" fg:w="4"/><text x="4.1372%" y="287.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (23 samples, 0.16%)</title><rect x="3.7839%" y="325" width="0.1585%" height="15" fill="rgb(231,57,52)" fg:x="549" fg:w="23"/><text x="4.0339%" y="335.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (8 samples, 0.06%)</title><rect x="3.8872%" y="309" width="0.0551%" height="15" fill="rgb(248,177,22)" fg:x="564" fg:w="8"/><text x="4.1372%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (8 samples, 0.06%)</title><rect x="3.8872%" y="293" width="0.0551%" height="15" fill="rgb(215,211,37)" fg:x="564" fg:w="8"/><text x="4.1372%" y="303.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (3 samples, 0.02%)</title><rect x="3.9217%" y="277" width="0.0207%" height="15" fill="rgb(241,128,51)" fg:x="569" fg:w="3"/><text x="4.1717%" y="287.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (3 samples, 0.02%)</title><rect x="3.9217%" y="261" width="0.0207%" height="15" fill="rgb(227,165,31)" fg:x="569" fg:w="3"/><text x="4.1717%" y="271.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (3 samples, 0.02%)</title><rect x="3.9217%" y="245" width="0.0207%" height="15" fill="rgb(228,167,24)" fg:x="569" fg:w="3"/><text x="4.1717%" y="255.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (2 samples, 0.01%)</title><rect x="3.9424%" y="325" width="0.0138%" height="15" fill="rgb(228,143,12)" fg:x="572" fg:w="2"/><text x="4.1924%" y="335.50"></text></g><g><title>QuartzCore`DYLD-STUB$$os_unfair_lock_lock (4 samples, 0.03%)</title><rect x="3.9562%" y="325" width="0.0276%" height="15" fill="rgb(249,149,8)" fg:x="574" fg:w="4"/><text x="4.2062%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (3 samples, 0.02%)</title><rect x="3.9906%" y="325" width="0.0207%" height="15" fill="rgb(243,35,44)" fg:x="579" fg:w="3"/><text x="4.2406%" y="335.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::cleared (3 samples, 0.02%)</title><rect x="4.0113%" y="325" width="0.0207%" height="15" fill="rgb(246,89,9)" fg:x="582" fg:w="3"/><text x="4.2613%" y="335.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::wakeup (4 samples, 0.03%)</title><rect x="4.0320%" y="325" width="0.0276%" height="15" fill="rgb(233,213,13)" fg:x="585" fg:w="4"/><text x="4.2820%" y="335.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_lock (4 samples, 0.03%)</title><rect x="4.1147%" y="309" width="0.0276%" height="15" fill="rgb(233,141,41)" fg:x="597" fg:w="4"/><text x="4.3647%" y="319.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="4.1423%" y="309" width="0.0207%" height="15" fill="rgb(239,167,4)" fg:x="601" fg:w="3"/><text x="4.3923%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (21 samples, 0.14%)</title><rect x="4.3490%" y="293" width="0.1447%" height="15" fill="rgb(209,217,16)" fg:x="631" fg:w="21"/><text x="4.5990%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (12 samples, 0.08%)</title><rect x="4.4938%" y="293" width="0.0827%" height="15" fill="rgb(219,88,35)" fg:x="652" fg:w="12"/><text x="4.7438%" y="303.50"></text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (5 samples, 0.03%)</title><rect x="4.5765%" y="293" width="0.0345%" height="15" fill="rgb(220,193,23)" fg:x="664" fg:w="5"/><text x="4.8265%" y="303.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_lock (3 samples, 0.02%)</title><rect x="4.6109%" y="293" width="0.0207%" height="15" fill="rgb(230,90,52)" fg:x="669" fg:w="3"/><text x="4.8609%" y="303.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="4.6316%" y="293" width="0.0345%" height="15" fill="rgb(252,106,19)" fg:x="672" fg:w="5"/><text x="4.8816%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (20 samples, 0.14%)</title><rect x="4.7419%" y="277" width="0.1378%" height="15" fill="rgb(206,74,20)" fg:x="688" fg:w="20"/><text x="4.9919%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (12 samples, 0.08%)</title><rect x="4.8797%" y="277" width="0.0827%" height="15" fill="rgb(230,138,44)" fg:x="708" fg:w="12"/><text x="5.1297%" y="287.50"></text></g><g><title>minecraft`minecraft::main::_{{closure}} (8 samples, 0.06%)</title><rect x="5.0383%" y="261" width="0.0551%" height="15" fill="rgb(235,182,43)" fg:x="731" fg:w="8"/><text x="5.2883%" y="271.50"></text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (26 samples, 0.18%)</title><rect x="4.9624%" y="277" width="0.1792%" height="15" fill="rgb(242,16,51)" fg:x="720" fg:w="26"/><text x="5.2124%" y="287.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (7 samples, 0.05%)</title><rect x="5.0934%" y="261" width="0.0482%" height="15" fill="rgb(248,9,4)" fg:x="739" fg:w="7"/><text x="5.3434%" y="271.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::wakeup (150 samples, 1.03%)</title><rect x="4.1629%" y="309" width="1.0338%" height="15" fill="rgb(210,31,22)" fg:x="604" fg:w="150"/><text x="4.4129%" y="319.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (77 samples, 0.53%)</title><rect x="4.6661%" y="293" width="0.5307%" height="15" fill="rgb(239,54,39)" fg:x="677" fg:w="77"/><text x="4.9161%" y="303.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (7 samples, 0.05%)</title><rect x="5.1485%" y="277" width="0.0482%" height="15" fill="rgb(230,99,41)" fg:x="747" fg:w="7"/><text x="5.3985%" y="287.50"></text></g><g><title>minecraft`winit::platform_impl::platform::observer::control_flow_begin_handler (168 samples, 1.16%)</title><rect x="4.0595%" y="325" width="1.1579%" height="15" fill="rgb(253,106,12)" fg:x="589" fg:w="168"/><text x="4.3095%" y="335.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (3 samples, 0.02%)</title><rect x="5.1968%" y="309" width="0.0207%" height="15" fill="rgb(213,46,41)" fg:x="754" fg:w="3"/><text x="5.4468%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (27 samples, 0.19%)</title><rect x="5.2175%" y="309" width="0.1861%" height="15" fill="rgb(215,133,35)" fg:x="757" fg:w="27"/><text x="5.4675%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.04%)</title><rect x="5.4035%" y="309" width="0.0414%" height="15" fill="rgb(213,28,5)" fg:x="784" fg:w="6"/><text x="5.6535%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.02%)</title><rect x="5.4518%" y="309" width="0.0207%" height="15" fill="rgb(215,77,49)" fg:x="791" fg:w="3"/><text x="5.7018%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="5.4725%" y="309" width="0.0207%" height="15" fill="rgb(248,100,22)" fg:x="794" fg:w="3"/><text x="5.7225%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (2 samples, 0.01%)</title><rect x="5.5000%" y="309" width="0.0138%" height="15" fill="rgb(208,67,9)" fg:x="798" fg:w="2"/><text x="5.7500%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="5.5138%" y="309" width="0.0138%" height="15" fill="rgb(219,133,21)" fg:x="800" fg:w="2"/><text x="5.7638%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="5.5276%" y="309" width="0.0138%" height="15" fill="rgb(246,46,29)" fg:x="802" fg:w="2"/><text x="5.7776%" y="319.50"></text></g><g><title>minecraft`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="5.5414%" y="309" width="0.0207%" height="15" fill="rgb(246,185,52)" fg:x="804" fg:w="3"/><text x="5.7914%" y="319.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_lock (7 samples, 0.05%)</title><rect x="5.5690%" y="309" width="0.0482%" height="15" fill="rgb(252,136,11)" fg:x="808" fg:w="7"/><text x="5.8190%" y="319.50"></text></g><g><title>minecraft`DYLD-STUB$$pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="5.6172%" y="309" width="0.0345%" height="15" fill="rgb(219,138,53)" fg:x="815" fg:w="5"/><text x="5.8672%" y="319.50"></text></g><g><title>minecraft`__rdl_alloc (4 samples, 0.03%)</title><rect x="5.6517%" y="309" width="0.0276%" height="15" fill="rgb(211,51,23)" fg:x="820" fg:w="4"/><text x="5.9017%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (2 samples, 0.01%)</title><rect x="5.8309%" y="293" width="0.0138%" height="15" fill="rgb(247,221,28)" fg:x="846" fg:w="2"/><text x="6.0809%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.03%)</title><rect x="5.8446%" y="293" width="0.0276%" height="15" fill="rgb(251,222,45)" fg:x="848" fg:w="4"/><text x="6.0946%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (6 samples, 0.04%)</title><rect x="5.9205%" y="277" width="0.0414%" height="15" fill="rgb(217,162,53)" fg:x="859" fg:w="6"/><text x="6.1705%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.05%)</title><rect x="6.1134%" y="261" width="0.0482%" height="15" fill="rgb(229,93,14)" fg:x="887" fg:w="7"/><text x="6.3634%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.32%)</title><rect x="5.8722%" y="293" width="0.3170%" height="15" fill="rgb(209,67,49)" fg:x="852" fg:w="46"/><text x="6.1222%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.22%)</title><rect x="5.9687%" y="277" width="0.2206%" height="15" fill="rgb(213,87,29)" fg:x="866" fg:w="32"/><text x="6.2187%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.03%)</title><rect x="6.1617%" y="261" width="0.0276%" height="15" fill="rgb(205,151,52)" fg:x="894" fg:w="4"/><text x="6.4117%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (5 samples, 0.03%)</title><rect x="6.2720%" y="261" width="0.0345%" height="15" fill="rgb(253,215,39)" fg:x="910" fg:w="5"/><text x="6.5220%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.01%)</title><rect x="6.4305%" y="245" width="0.0138%" height="15" fill="rgb(221,220,41)" fg:x="933" fg:w="2"/><text x="6.6805%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.32%)</title><rect x="6.1893%" y="293" width="0.3170%" height="15" fill="rgb(218,133,21)" fg:x="898" fg:w="46"/><text x="6.4393%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (44 samples, 0.30%)</title><rect x="6.2030%" y="277" width="0.3033%" height="15" fill="rgb(221,193,43)" fg:x="900" fg:w="44"/><text x="6.4530%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (28 samples, 0.19%)</title><rect x="6.3133%" y="261" width="0.1930%" height="15" fill="rgb(240,128,52)" fg:x="916" fg:w="28"/><text x="6.5633%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.06%)</title><rect x="6.4443%" y="245" width="0.0620%" height="15" fill="rgb(253,114,12)" fg:x="935" fg:w="9"/><text x="6.6943%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="6.5132%" y="293" width="0.0138%" height="15" fill="rgb(215,223,47)" fg:x="945" fg:w="2"/><text x="6.7632%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.03%)</title><rect x="6.5270%" y="293" width="0.0276%" height="15" fill="rgb(248,225,23)" fg:x="947" fg:w="4"/><text x="6.7770%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (25 samples, 0.17%)</title><rect x="6.5546%" y="293" width="0.1723%" height="15" fill="rgb(250,108,0)" fg:x="951" fg:w="25"/><text x="6.8046%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (13 samples, 0.09%)</title><rect x="6.7269%" y="293" width="0.0896%" height="15" fill="rgb(228,208,7)" fg:x="976" fg:w="13"/><text x="6.9769%" y="303.50"></text></g><g><title>minecraft`&lt;std::sync::mpsc::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.03%)</title><rect x="6.8165%" y="293" width="0.0276%" height="15" fill="rgb(244,45,10)" fg:x="989" fg:w="4"/><text x="7.0665%" y="303.50"></text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (3 samples, 0.02%)</title><rect x="6.8440%" y="293" width="0.0207%" height="15" fill="rgb(207,125,25)" fg:x="993" fg:w="3"/><text x="7.0940%" y="303.50"></text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (12 samples, 0.08%)</title><rect x="6.8647%" y="293" width="0.0827%" height="15" fill="rgb(210,195,18)" fg:x="996" fg:w="12"/><text x="7.1147%" y="303.50"></text></g><g><title>minecraft`&lt;std::sync::mpsc::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="6.9130%" y="277" width="0.0345%" height="15" fill="rgb(249,80,12)" fg:x="1003" fg:w="5"/><text x="7.1630%" y="287.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (5 samples, 0.03%)</title><rect x="6.9543%" y="293" width="0.0345%" height="15" fill="rgb(221,65,9)" fg:x="1009" fg:w="5"/><text x="7.2043%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="6.9750%" y="277" width="0.0138%" height="15" fill="rgb(235,49,36)" fg:x="1012" fg:w="2"/><text x="7.2250%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.09%)</title><rect x="7.0232%" y="277" width="0.0896%" height="15" fill="rgb(225,32,20)" fg:x="1019" fg:w="13"/><text x="7.2732%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.06%)</title><rect x="7.1128%" y="277" width="0.0551%" height="15" fill="rgb(215,141,46)" fg:x="1032" fg:w="8"/><text x="7.3628%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (16 samples, 0.11%)</title><rect x="7.2782%" y="245" width="0.1103%" height="15" fill="rgb(250,160,47)" fg:x="1056" fg:w="16"/><text x="7.5282%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.10%)</title><rect x="7.3954%" y="245" width="0.0965%" height="15" fill="rgb(216,222,40)" fg:x="1073" fg:w="14"/><text x="7.6454%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.06%)</title><rect x="7.4919%" y="245" width="0.0551%" height="15" fill="rgb(234,217,39)" fg:x="1087" fg:w="8"/><text x="7.7419%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.01%)</title><rect x="7.5470%" y="245" width="0.0138%" height="15" fill="rgb(207,178,40)" fg:x="1095" fg:w="2"/><text x="7.7970%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.21%)</title><rect x="7.5608%" y="245" width="0.2137%" height="15" fill="rgb(221,136,13)" fg:x="1097" fg:w="31"/><text x="7.8108%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.14%)</title><rect x="7.7745%" y="245" width="0.1447%" height="15" fill="rgb(249,199,10)" fg:x="1128" fg:w="21"/><text x="8.0245%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.18%)</title><rect x="7.9261%" y="245" width="0.1792%" height="15" fill="rgb(249,222,13)" fg:x="1150" fg:w="26"/><text x="8.1761%" y="255.50"></text></g><g><title>minecraft`&lt;minecraft::world::Block as minecraft::renderer::Drawable&gt;::instance (4 samples, 0.03%)</title><rect x="8.1053%" y="245" width="0.0276%" height="15" fill="rgb(244,185,38)" fg:x="1176" fg:w="4"/><text x="8.3553%" y="255.50"></text></g><g><title>AGXMetal13_3`0x00000001d6055ca4 (2 samples, 0.01%)</title><rect x="8.1605%" y="133" width="0.0138%" height="15" fill="rgb(236,202,9)" fg:x="1184" fg:w="2"/><text x="8.4105%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (2 samples, 0.01%)</title><rect x="8.1605%" y="117" width="0.0138%" height="15" fill="rgb(250,229,37)" fg:x="1184" fg:w="2"/><text x="8.4105%" y="127.50"></text></g><g><title>AGXMetal13_3`0x00000001d6057fd0 (4 samples, 0.03%)</title><rect x="8.1605%" y="149" width="0.0276%" height="15" fill="rgb(206,174,23)" fg:x="1184" fg:w="4"/><text x="8.4105%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.01%)</title><rect x="8.1742%" y="133" width="0.0138%" height="15" fill="rgb(211,33,43)" fg:x="1186" fg:w="2"/><text x="8.4242%" y="143.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (7 samples, 0.05%)</title><rect x="8.1467%" y="213" width="0.0482%" height="15" fill="rgb(245,58,50)" fg:x="1182" fg:w="7"/><text x="8.3967%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (5 samples, 0.03%)</title><rect x="8.1605%" y="197" width="0.0345%" height="15" fill="rgb(244,68,36)" fg:x="1184" fg:w="5"/><text x="8.4105%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.03%)</title><rect x="8.1605%" y="181" width="0.0345%" height="15" fill="rgb(232,229,15)" fg:x="1184" fg:w="5"/><text x="8.4105%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="8.1605%" y="165" width="0.0345%" height="15" fill="rgb(254,30,23)" fg:x="1184" fg:w="5"/><text x="8.4105%" y="175.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.06%)</title><rect x="8.2018%" y="85" width="0.0620%" height="15" fill="rgb(235,160,14)" fg:x="1190" fg:w="9"/><text x="8.4518%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.06%)</title><rect x="8.2018%" y="69" width="0.0620%" height="15" fill="rgb(212,155,44)" fg:x="1190" fg:w="9"/><text x="8.4518%" y="79.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (10 samples, 0.07%)</title><rect x="8.2018%" y="117" width="0.0689%" height="15" fill="rgb(226,2,50)" fg:x="1190" fg:w="10"/><text x="8.4518%" y="127.50"></text></g><g><title>IOKit`IOConnectCallMethod (10 samples, 0.07%)</title><rect x="8.2018%" y="101" width="0.0689%" height="15" fill="rgb(234,177,6)" fg:x="1190" fg:w="10"/><text x="8.4518%" y="111.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (11 samples, 0.08%)</title><rect x="8.2018%" y="133" width="0.0758%" height="15" fill="rgb(217,24,9)" fg:x="1190" fg:w="11"/><text x="8.4518%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001d601aefc (12 samples, 0.08%)</title><rect x="8.2018%" y="165" width="0.0827%" height="15" fill="rgb(220,13,46)" fg:x="1190" fg:w="12"/><text x="8.4518%" y="175.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (12 samples, 0.08%)</title><rect x="8.2018%" y="149" width="0.0827%" height="15" fill="rgb(239,221,27)" fg:x="1190" fg:w="12"/><text x="8.4518%" y="159.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (23 samples, 0.16%)</title><rect x="8.1329%" y="229" width="0.1585%" height="15" fill="rgb(222,198,25)" fg:x="1180" fg:w="23"/><text x="8.3829%" y="239.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (14 samples, 0.10%)</title><rect x="8.1949%" y="213" width="0.0965%" height="15" fill="rgb(211,99,13)" fg:x="1189" fg:w="14"/><text x="8.4449%" y="223.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (13 samples, 0.09%)</title><rect x="8.2018%" y="197" width="0.0896%" height="15" fill="rgb(232,111,31)" fg:x="1190" fg:w="13"/><text x="8.4518%" y="207.50"></text></g><g><title>AGXMetal13_3`0x00000001d601ad9c (13 samples, 0.09%)</title><rect x="8.2018%" y="181" width="0.0896%" height="15" fill="rgb(245,82,37)" fg:x="1190" fg:w="13"/><text x="8.4518%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (24 samples, 0.17%)</title><rect x="8.1329%" y="245" width="0.1654%" height="15" fill="rgb(227,149,46)" fg:x="1180" fg:w="24"/><text x="8.3829%" y="255.50"></text></g><g><title>minecraft`DYLD-STUB$$free (8 samples, 0.06%)</title><rect x="8.2983%" y="245" width="0.0551%" height="15" fill="rgb(218,36,50)" fg:x="1204" fg:w="8"/><text x="8.5483%" y="255.50"></text></g><g><title>minecraft`DYLD-STUB$$memcpy (2 samples, 0.01%)</title><rect x="8.3603%" y="245" width="0.0138%" height="15" fill="rgb(226,80,48)" fg:x="1213" fg:w="2"/><text x="8.6103%" y="255.50"></text></g><g><title>minecraft`__rdl_alloc (4 samples, 0.03%)</title><rect x="8.3741%" y="245" width="0.0276%" height="15" fill="rgb(238,224,15)" fg:x="1215" fg:w="4"/><text x="8.6241%" y="255.50"></text></g><g><title>minecraft`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.07%)</title><rect x="8.4017%" y="245" width="0.0689%" height="15" fill="rgb(241,136,10)" fg:x="1219" fg:w="10"/><text x="8.6517%" y="255.50"></text></g><g><title>minecraft`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.04%)</title><rect x="8.4706%" y="245" width="0.0414%" height="15" fill="rgb(208,32,45)" fg:x="1229" fg:w="6"/><text x="8.7206%" y="255.50"></text></g><g><title>AGXMetal13_3`0x00000001d6125280 (4 samples, 0.03%)</title><rect x="8.5120%" y="197" width="0.0276%" height="15" fill="rgb(207,135,9)" fg:x="1235" fg:w="4"/><text x="8.7620%" y="207.50"></text></g><g><title>AGXMetal13_3`0x00000001d611f468 (3 samples, 0.02%)</title><rect x="8.5189%" y="181" width="0.0207%" height="15" fill="rgb(206,86,44)" fg:x="1236" fg:w="3"/><text x="8.7689%" y="191.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (2 samples, 0.01%)</title><rect x="8.6360%" y="85" width="0.0138%" height="15" fill="rgb(245,177,15)" fg:x="1253" fg:w="2"/><text x="8.8860%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.01%)</title><rect x="8.6360%" y="69" width="0.0138%" height="15" fill="rgb(206,64,50)" fg:x="1253" fg:w="2"/><text x="8.8860%" y="79.50"></text></g><g><title>AGXMetal13_3`0x00000001d60675a4 (4 samples, 0.03%)</title><rect x="8.6291%" y="101" width="0.0276%" height="15" fill="rgb(234,36,40)" fg:x="1252" fg:w="4"/><text x="8.8791%" y="111.50"></text></g><g><title>AGXMetal13_3`0x00000001d6132344 (9 samples, 0.06%)</title><rect x="8.6016%" y="133" width="0.0620%" height="15" fill="rgb(213,64,8)" fg:x="1248" fg:w="9"/><text x="8.8516%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001d611a59c (5 samples, 0.03%)</title><rect x="8.6291%" y="117" width="0.0345%" height="15" fill="rgb(210,75,36)" fg:x="1252" fg:w="5"/><text x="8.8791%" y="127.50"></text></g><g><title>AGXMetal13_3`0x00000001d60554bc (14 samples, 0.10%)</title><rect x="8.6016%" y="149" width="0.0965%" height="15" fill="rgb(229,88,21)" fg:x="1248" fg:w="14"/><text x="8.8516%" y="159.50"></text></g><g><title>minecraft`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (19 samples, 0.13%)</title><rect x="8.5740%" y="197" width="0.1310%" height="15" fill="rgb(252,204,47)" fg:x="1244" fg:w="19"/><text x="8.8240%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (17 samples, 0.12%)</title><rect x="8.5878%" y="181" width="0.1172%" height="15" fill="rgb(208,77,27)" fg:x="1246" fg:w="17"/><text x="8.8378%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (15 samples, 0.10%)</title><rect x="8.6016%" y="165" width="0.1034%" height="15" fill="rgb(221,76,26)" fg:x="1248" fg:w="15"/><text x="8.8516%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001d6057fd0 (7 samples, 0.05%)</title><rect x="8.7187%" y="165" width="0.0482%" height="15" fill="rgb(225,139,18)" fg:x="1265" fg:w="7"/><text x="8.9687%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.04%)</title><rect x="8.7256%" y="149" width="0.0414%" height="15" fill="rgb(230,137,11)" fg:x="1266" fg:w="6"/><text x="8.9756%" y="159.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (8 samples, 0.06%)</title><rect x="8.7187%" y="197" width="0.0551%" height="15" fill="rgb(212,28,1)" fg:x="1265" fg:w="8"/><text x="8.9687%" y="207.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (8 samples, 0.06%)</title><rect x="8.7187%" y="181" width="0.0551%" height="15" fill="rgb(248,164,17)" fg:x="1265" fg:w="8"/><text x="8.9687%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (39 samples, 0.27%)</title><rect x="8.5120%" y="229" width="0.2688%" height="15" fill="rgb(222,171,42)" fg:x="1235" fg:w="39"/><text x="8.7620%" y="239.50"></text></g><g><title>minecraft`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (39 samples, 0.27%)</title><rect x="8.5120%" y="213" width="0.2688%" height="15" fill="rgb(243,84,45)" fg:x="1235" fg:w="39"/><text x="8.7620%" y="223.50"></text></g><g><title>AGXMetal13_3`0x00000001d6043a84 (3 samples, 0.02%)</title><rect x="8.8014%" y="133" width="0.0207%" height="15" fill="rgb(252,49,23)" fg:x="1277" fg:w="3"/><text x="9.0514%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="8.8014%" y="117" width="0.0207%" height="15" fill="rgb(215,19,7)" fg:x="1277" fg:w="3"/><text x="9.0514%" y="127.50"></text></g><g><title>AGXMetal13_3`0x00000001d61308ac (2 samples, 0.01%)</title><rect x="8.8221%" y="133" width="0.0138%" height="15" fill="rgb(238,81,41)" fg:x="1280" fg:w="2"/><text x="9.0721%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001d605428c (7 samples, 0.05%)</title><rect x="8.8014%" y="149" width="0.0482%" height="15" fill="rgb(210,199,37)" fg:x="1277" fg:w="7"/><text x="9.0514%" y="159.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (2 samples, 0.01%)</title><rect x="8.8566%" y="133" width="0.0138%" height="15" fill="rgb(244,192,49)" fg:x="1285" fg:w="2"/><text x="9.1066%" y="143.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="8.8566%" y="117" width="0.0138%" height="15" fill="rgb(226,211,11)" fg:x="1285" fg:w="2"/><text x="9.1066%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="8.8566%" y="101" width="0.0138%" height="15" fill="rgb(236,162,54)" fg:x="1285" fg:w="2"/><text x="9.1066%" y="111.50"></text></g><g><title>AGXMetal13_3`0x00000001d6056e04 (11 samples, 0.08%)</title><rect x="8.8014%" y="165" width="0.0758%" height="15" fill="rgb(220,229,9)" fg:x="1277" fg:w="11"/><text x="9.0514%" y="175.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (4 samples, 0.03%)</title><rect x="8.8497%" y="149" width="0.0276%" height="15" fill="rgb(250,87,22)" fg:x="1284" fg:w="4"/><text x="9.0997%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (14 samples, 0.10%)</title><rect x="8.8014%" y="197" width="0.0965%" height="15" fill="rgb(239,43,17)" fg:x="1277" fg:w="14"/><text x="9.0514%" y="207.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (14 samples, 0.10%)</title><rect x="8.8014%" y="181" width="0.0965%" height="15" fill="rgb(231,177,25)" fg:x="1277" fg:w="14"/><text x="9.0514%" y="191.50"></text></g><g><title>minecraft`wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (2 samples, 0.01%)</title><rect x="8.9255%" y="197" width="0.0138%" height="15" fill="rgb(219,179,1)" fg:x="1295" fg:w="2"/><text x="9.1755%" y="207.50"></text></g><g><title>CoreFoundation`_CFRelease (17 samples, 0.12%)</title><rect x="8.9531%" y="117" width="0.1172%" height="15" fill="rgb(238,219,53)" fg:x="1299" fg:w="17"/><text x="9.2031%" y="127.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (17 samples, 0.12%)</title><rect x="8.9531%" y="101" width="0.1172%" height="15" fill="rgb(232,167,36)" fg:x="1299" fg:w="17"/><text x="9.2031%" y="111.50"></text></g><g><title>IOKit`IOConnectCallMethod (17 samples, 0.12%)</title><rect x="8.9531%" y="85" width="0.1172%" height="15" fill="rgb(244,19,51)" fg:x="1299" fg:w="17"/><text x="9.2031%" y="95.50"></text></g><g><title>IOKit`io_connect_method (17 samples, 0.12%)</title><rect x="8.9531%" y="69" width="0.1172%" height="15" fill="rgb(224,6,22)" fg:x="1299" fg:w="17"/><text x="9.2031%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (17 samples, 0.12%)</title><rect x="8.9531%" y="53" width="0.1172%" height="15" fill="rgb(224,145,5)" fg:x="1299" fg:w="17"/><text x="9.2031%" y="63.50"></text></g><g><title>AGXMetal13_3`0x00000001d6052144 (18 samples, 0.12%)</title><rect x="8.9531%" y="165" width="0.1241%" height="15" fill="rgb(234,130,49)" fg:x="1299" fg:w="18"/><text x="9.2031%" y="175.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (18 samples, 0.12%)</title><rect x="8.9531%" y="149" width="0.1241%" height="15" fill="rgb(254,6,2)" fg:x="1299" fg:w="18"/><text x="9.2031%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (18 samples, 0.12%)</title><rect x="8.9531%" y="133" width="0.1241%" height="15" fill="rgb(208,96,46)" fg:x="1299" fg:w="18"/><text x="9.2031%" y="143.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (20 samples, 0.14%)</title><rect x="8.9462%" y="181" width="0.1378%" height="15" fill="rgb(239,3,39)" fg:x="1298" fg:w="20"/><text x="9.1962%" y="191.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (2 samples, 0.01%)</title><rect x="9.0909%" y="133" width="0.0138%" height="15" fill="rgb(233,210,1)" fg:x="1319" fg:w="2"/><text x="9.3409%" y="143.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.01%)</title><rect x="9.0909%" y="117" width="0.0138%" height="15" fill="rgb(244,137,37)" fg:x="1319" fg:w="2"/><text x="9.3409%" y="127.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (3 samples, 0.02%)</title><rect x="9.0909%" y="181" width="0.0207%" height="15" fill="rgb(240,136,2)" fg:x="1319" fg:w="3"/><text x="9.3409%" y="191.50"></text></g><g><title>minecraft`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="9.0909%" y="165" width="0.0207%" height="15" fill="rgb(239,18,37)" fg:x="1319" fg:w="3"/><text x="9.3409%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001d60575c8 (3 samples, 0.02%)</title><rect x="9.0909%" y="149" width="0.0207%" height="15" fill="rgb(218,185,22)" fg:x="1319" fg:w="3"/><text x="9.3409%" y="159.50"></text></g><g><title>minecraft`wgpu_core::device::Device&lt;A&gt;::maintain (26 samples, 0.18%)</title><rect x="8.9393%" y="197" width="0.1792%" height="15" fill="rgb(225,218,4)" fg:x="1297" fg:w="26"/><text x="9.1893%" y="207.50"></text></g><g><title>AGXMetal13_3`0x00000001d6057fd0 (4 samples, 0.03%)</title><rect x="9.1185%" y="165" width="0.0276%" height="15" fill="rgb(230,182,32)" fg:x="1323" fg:w="4"/><text x="9.3685%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.03%)</title><rect x="9.1185%" y="149" width="0.0276%" height="15" fill="rgb(242,56,43)" fg:x="1323" fg:w="4"/><text x="9.3685%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (54 samples, 0.37%)</title><rect x="8.7808%" y="229" width="0.3722%" height="15" fill="rgb(233,99,24)" fg:x="1274" fg:w="54"/><text x="9.0308%" y="239.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (54 samples, 0.37%)</title><rect x="8.7808%" y="213" width="0.3722%" height="15" fill="rgb(234,209,42)" fg:x="1274" fg:w="54"/><text x="9.0308%" y="223.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.03%)</title><rect x="9.1185%" y="197" width="0.0345%" height="15" fill="rgb(227,7,12)" fg:x="1323" fg:w="5"/><text x="9.3685%" y="207.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (5 samples, 0.03%)</title><rect x="9.1185%" y="181" width="0.0345%" height="15" fill="rgb(245,203,43)" fg:x="1323" fg:w="5"/><text x="9.3685%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.21%)</title><rect x="9.1529%" y="213" width="0.2068%" height="15" fill="rgb(238,205,33)" fg:x="1328" fg:w="30"/><text x="9.4029%" y="223.50"></text></g><g><title>AGXMetal13_3`0x00000001d601ad9c (5 samples, 0.03%)</title><rect x="9.3735%" y="165" width="0.0345%" height="15" fill="rgb(231,56,7)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001d601aefc (5 samples, 0.03%)</title><rect x="9.3735%" y="149" width="0.0345%" height="15" fill="rgb(244,186,29)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (5 samples, 0.03%)</title><rect x="9.3735%" y="133" width="0.0345%" height="15" fill="rgb(234,111,31)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (5 samples, 0.03%)</title><rect x="9.3735%" y="117" width="0.0345%" height="15" fill="rgb(241,149,10)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="127.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (5 samples, 0.03%)</title><rect x="9.3735%" y="101" width="0.0345%" height="15" fill="rgb(249,206,44)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="111.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.03%)</title><rect x="9.3735%" y="85" width="0.0345%" height="15" fill="rgb(251,153,30)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="95.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.03%)</title><rect x="9.3735%" y="69" width="0.0345%" height="15" fill="rgb(239,152,38)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.03%)</title><rect x="9.3735%" y="53" width="0.0345%" height="15" fill="rgb(249,139,47)" fg:x="1360" fg:w="5"/><text x="9.6235%" y="63.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (38 samples, 0.26%)</title><rect x="9.1529%" y="229" width="0.2619%" height="15" fill="rgb(244,64,35)" fg:x="1328" fg:w="38"/><text x="9.4029%" y="239.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.06%)</title><rect x="9.3597%" y="213" width="0.0551%" height="15" fill="rgb(216,46,15)" fg:x="1358" fg:w="8"/><text x="9.6097%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (7 samples, 0.05%)</title><rect x="9.3666%" y="197" width="0.0482%" height="15" fill="rgb(250,74,19)" fg:x="1359" fg:w="7"/><text x="9.6166%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (6 samples, 0.04%)</title><rect x="9.3735%" y="181" width="0.0414%" height="15" fill="rgb(249,42,33)" fg:x="1360" fg:w="6"/><text x="9.6235%" y="191.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (10 samples, 0.07%)</title><rect x="9.4148%" y="101" width="0.0689%" height="15" fill="rgb(242,149,17)" fg:x="1366" fg:w="10"/><text x="9.6648%" y="111.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (10 samples, 0.07%)</title><rect x="9.4148%" y="85" width="0.0689%" height="15" fill="rgb(244,29,21)" fg:x="1366" fg:w="10"/><text x="9.6648%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (10 samples, 0.07%)</title><rect x="9.4148%" y="69" width="0.0689%" height="15" fill="rgb(220,130,37)" fg:x="1366" fg:w="10"/><text x="9.6648%" y="79.50"></text></g><g><title>IOKit`io_connect_method (10 samples, 0.07%)</title><rect x="9.4148%" y="53" width="0.0689%" height="15" fill="rgb(211,67,2)" fg:x="1366" fg:w="10"/><text x="9.6648%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.07%)</title><rect x="9.4148%" y="37" width="0.0689%" height="15" fill="rgb(235,68,52)" fg:x="1366" fg:w="10"/><text x="9.6648%" y="47.50"></text></g><g><title>minecraft`wgpu_core::device::Device&lt;A&gt;::create_buffer (11 samples, 0.08%)</title><rect x="9.4148%" y="181" width="0.0758%" height="15" fill="rgb(246,142,3)" fg:x="1366" fg:w="11"/><text x="9.6648%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (11 samples, 0.08%)</title><rect x="9.4148%" y="165" width="0.0758%" height="15" fill="rgb(241,25,7)" fg:x="1366" fg:w="11"/><text x="9.6648%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001d601ad9c (11 samples, 0.08%)</title><rect x="9.4148%" y="149" width="0.0758%" height="15" fill="rgb(242,119,39)" fg:x="1366" fg:w="11"/><text x="9.6648%" y="159.50"></text></g><g><title>AGXMetal13_3`0x00000001d601aefc (11 samples, 0.08%)</title><rect x="9.4148%" y="133" width="0.0758%" height="15" fill="rgb(241,98,45)" fg:x="1366" fg:w="11"/><text x="9.6648%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (11 samples, 0.08%)</title><rect x="9.4148%" y="117" width="0.0758%" height="15" fill="rgb(254,28,30)" fg:x="1366" fg:w="11"/><text x="9.6648%" y="127.50"></text></g><g><title>minecraft`wgpu::Device::create_buffer (12 samples, 0.08%)</title><rect x="9.4148%" y="229" width="0.0827%" height="15" fill="rgb(241,142,54)" fg:x="1366" fg:w="12"/><text x="9.6648%" y="239.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (12 samples, 0.08%)</title><rect x="9.4148%" y="213" width="0.0827%" height="15" fill="rgb(222,85,15)" fg:x="1366" fg:w="12"/><text x="9.6648%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (12 samples, 0.08%)</title><rect x="9.4148%" y="197" width="0.0827%" height="15" fill="rgb(210,85,47)" fg:x="1366" fg:w="12"/><text x="9.6648%" y="207.50"></text></g><g><title>minecraft`wgpu::Device::create_command_encoder (2 samples, 0.01%)</title><rect x="9.4976%" y="229" width="0.0138%" height="15" fill="rgb(224,206,25)" fg:x="1378" fg:w="2"/><text x="9.7476%" y="239.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (2 samples, 0.01%)</title><rect x="9.4976%" y="213" width="0.0138%" height="15" fill="rgb(243,201,19)" fg:x="1378" fg:w="2"/><text x="9.7476%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (2 samples, 0.01%)</title><rect x="9.4976%" y="197" width="0.0138%" height="15" fill="rgb(236,59,4)" fg:x="1378" fg:w="2"/><text x="9.7476%" y="207.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (4 samples, 0.03%)</title><rect x="9.5320%" y="149" width="0.0276%" height="15" fill="rgb(254,179,45)" fg:x="1383" fg:w="4"/><text x="9.7820%" y="159.50"></text></g><g><title>minecraft`wgpu::Surface::get_current_texture (9 samples, 0.06%)</title><rect x="9.5113%" y="229" width="0.0620%" height="15" fill="rgb(226,14,10)" fg:x="1380" fg:w="9"/><text x="9.7613%" y="239.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (9 samples, 0.06%)</title><rect x="9.5113%" y="213" width="0.0620%" height="15" fill="rgb(244,27,41)" fg:x="1380" fg:w="9"/><text x="9.7613%" y="223.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (9 samples, 0.06%)</title><rect x="9.5113%" y="197" width="0.0620%" height="15" fill="rgb(235,35,32)" fg:x="1380" fg:w="9"/><text x="9.7613%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (6 samples, 0.04%)</title><rect x="9.5320%" y="181" width="0.0414%" height="15" fill="rgb(218,68,31)" fg:x="1383" fg:w="6"/><text x="9.7820%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (6 samples, 0.04%)</title><rect x="9.5320%" y="165" width="0.0414%" height="15" fill="rgb(207,120,37)" fg:x="1383" fg:w="6"/><text x="9.7820%" y="175.50"></text></g><g><title>minecraft`wgpu::SurfaceTexture::present (2 samples, 0.01%)</title><rect x="9.5734%" y="229" width="0.0138%" height="15" fill="rgb(227,98,0)" fg:x="1389" fg:w="2"/><text x="9.8234%" y="239.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (2 samples, 0.01%)</title><rect x="9.5734%" y="213" width="0.0138%" height="15" fill="rgb(207,7,3)" fg:x="1389" fg:w="2"/><text x="9.8234%" y="223.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (2 samples, 0.01%)</title><rect x="9.5734%" y="197" width="0.0138%" height="15" fill="rgb(206,98,19)" fg:x="1389" fg:w="2"/><text x="9.8234%" y="207.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (2 samples, 0.01%)</title><rect x="9.5734%" y="181" width="0.0138%" height="15" fill="rgb(217,5,26)" fg:x="1389" fg:w="2"/><text x="9.8234%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (2 samples, 0.01%)</title><rect x="9.5734%" y="165" width="0.0138%" height="15" fill="rgb(235,190,38)" fg:x="1389" fg:w="2"/><text x="9.8234%" y="175.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::draw (157 samples, 1.08%)</title><rect x="8.5120%" y="245" width="1.0821%" height="15" fill="rgb(247,86,24)" fg:x="1235" fg:w="157"/><text x="8.7620%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (7 samples, 0.05%)</title><rect x="9.8835%" y="229" width="0.0482%" height="15" fill="rgb(205,101,16)" fg:x="1434" fg:w="7"/><text x="10.1335%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (2 samples, 0.01%)</title><rect x="9.9318%" y="229" width="0.0138%" height="15" fill="rgb(246,168,33)" fg:x="1441" fg:w="2"/><text x="10.1818%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.17%)</title><rect x="9.9456%" y="229" width="0.1654%" height="15" fill="rgb(231,114,1)" fg:x="1443" fg:w="24"/><text x="10.1956%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (50 samples, 0.34%)</title><rect x="10.1110%" y="229" width="0.3446%" height="15" fill="rgb(207,184,53)" fg:x="1467" fg:w="50"/><text x="10.3610%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.03%)</title><rect x="10.4556%" y="229" width="0.0276%" height="15" fill="rgb(224,95,51)" fg:x="1517" fg:w="4"/><text x="10.7056%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.19%)</title><rect x="10.4831%" y="229" width="0.1930%" height="15" fill="rgb(212,188,45)" fg:x="1521" fg:w="28"/><text x="10.7331%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (4 samples, 0.03%)</title><rect x="10.8829%" y="213" width="0.0276%" height="15" fill="rgb(223,154,38)" fg:x="1579" fg:w="4"/><text x="11.1329%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.07%)</title><rect x="11.0207%" y="197" width="0.0689%" height="15" fill="rgb(251,22,52)" fg:x="1599" fg:w="10"/><text x="11.2707%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.42%)</title><rect x="10.6761%" y="229" width="0.4204%" height="15" fill="rgb(229,209,22)" fg:x="1549" fg:w="61"/><text x="10.9261%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.19%)</title><rect x="10.9105%" y="213" width="0.1861%" height="15" fill="rgb(234,138,34)" fg:x="1583" fg:w="27"/><text x="11.1605%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.15%)</title><rect x="11.0966%" y="229" width="0.1516%" height="15" fill="rgb(212,95,11)" fg:x="1610" fg:w="22"/><text x="11.3466%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="11.2895%" y="213" width="0.0207%" height="15" fill="rgb(240,179,47)" fg:x="1638" fg:w="3"/><text x="11.5395%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.09%)</title><rect x="11.4550%" y="197" width="0.0896%" height="15" fill="rgb(240,163,11)" fg:x="1662" fg:w="13"/><text x="11.7050%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.03%)</title><rect x="11.6479%" y="181" width="0.0345%" height="15" fill="rgb(236,37,12)" fg:x="1690" fg:w="5"/><text x="11.8979%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.47%)</title><rect x="11.2482%" y="229" width="0.4687%" height="15" fill="rgb(232,164,16)" fg:x="1632" fg:w="68"/><text x="11.4982%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (59 samples, 0.41%)</title><rect x="11.3102%" y="213" width="0.4066%" height="15" fill="rgb(244,205,15)" fg:x="1641" fg:w="59"/><text x="11.5602%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.17%)</title><rect x="11.5446%" y="197" width="0.1723%" height="15" fill="rgb(223,117,47)" fg:x="1675" fg:w="25"/><text x="11.7946%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.03%)</title><rect x="11.6824%" y="181" width="0.0345%" height="15" fill="rgb(244,107,35)" fg:x="1695" fg:w="5"/><text x="11.9324%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="11.7169%" y="229" width="0.0207%" height="15" fill="rgb(205,140,8)" fg:x="1700" fg:w="3"/><text x="11.9669%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (3 samples, 0.02%)</title><rect x="11.7444%" y="229" width="0.0207%" height="15" fill="rgb(228,84,46)" fg:x="1704" fg:w="3"/><text x="11.9944%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (562 samples, 3.87%)</title><rect x="11.7651%" y="229" width="3.8735%" height="15" fill="rgb(254,188,9)" fg:x="1707" fg:w="562"/><text x="12.0151%" y="239.50">libs..</text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.03%)</title><rect x="15.6386%" y="229" width="0.0276%" height="15" fill="rgb(206,112,54)" fg:x="2269" fg:w="4"/><text x="15.8886%" y="239.50"></text></g><g><title>minecraft`&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (170 samples, 1.17%)</title><rect x="15.6661%" y="229" width="1.1717%" height="15" fill="rgb(216,84,49)" fg:x="2273" fg:w="170"/><text x="15.9161%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$malloc (9 samples, 0.06%)</title><rect x="16.8447%" y="229" width="0.0620%" height="15" fill="rgb(214,194,35)" fg:x="2444" fg:w="9"/><text x="17.0947%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$memcmp (20 samples, 0.14%)</title><rect x="16.9067%" y="229" width="0.1378%" height="15" fill="rgb(249,28,3)" fg:x="2453" fg:w="20"/><text x="17.1567%" y="239.50"></text></g><g><title>minecraft`__rdl_alloc (3 samples, 0.02%)</title><rect x="17.0446%" y="229" width="0.0207%" height="15" fill="rgb(222,56,52)" fg:x="2473" fg:w="3"/><text x="17.2946%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.01%)</title><rect x="17.0928%" y="213" width="0.0138%" height="15" fill="rgb(245,217,50)" fg:x="2480" fg:w="2"/><text x="17.3428%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.11%)</title><rect x="17.1066%" y="213" width="0.1103%" height="15" fill="rgb(213,201,24)" fg:x="2482" fg:w="16"/><text x="17.3566%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (3 samples, 0.02%)</title><rect x="17.4030%" y="197" width="0.0207%" height="15" fill="rgb(248,116,28)" fg:x="2525" fg:w="3"/><text x="17.6530%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.09%)</title><rect x="17.6373%" y="181" width="0.0896%" height="15" fill="rgb(219,72,43)" fg:x="2559" fg:w="13"/><text x="17.8873%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (78 samples, 0.54%)</title><rect x="17.2238%" y="213" width="0.5376%" height="15" fill="rgb(209,138,14)" fg:x="2499" fg:w="78"/><text x="17.4738%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.34%)</title><rect x="17.4237%" y="197" width="0.3377%" height="15" fill="rgb(222,18,33)" fg:x="2528" fg:w="49"/><text x="17.6737%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.03%)</title><rect x="17.7269%" y="181" width="0.0345%" height="15" fill="rgb(213,199,7)" fg:x="2572" fg:w="5"/><text x="17.9769%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.02%)</title><rect x="17.7614%" y="213" width="0.0207%" height="15" fill="rgb(250,110,10)" fg:x="2577" fg:w="3"/><text x="18.0114%" y="223.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.01%)</title><rect x="17.7821%" y="213" width="0.0138%" height="15" fill="rgb(248,123,6)" fg:x="2580" fg:w="2"/><text x="18.0321%" y="223.50"></text></g><g><title>minecraft`core::ptr::drop_in_place&lt;minecraft::renderer::Object&gt; (122 samples, 0.84%)</title><rect x="17.0653%" y="229" width="0.8409%" height="15" fill="rgb(206,91,31)" fg:x="2476" fg:w="122"/><text x="17.3153%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (16 samples, 0.11%)</title><rect x="17.7959%" y="213" width="0.1103%" height="15" fill="rgb(211,154,13)" fg:x="2582" fg:w="16"/><text x="18.0459%" y="223.50"></text></g><g><title>minecraft`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (19 samples, 0.13%)</title><rect x="17.9061%" y="229" width="0.1310%" height="15" fill="rgb(225,148,7)" fg:x="2598" fg:w="19"/><text x="18.1561%" y="239.50"></text></g><g><title>minecraft`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (23 samples, 0.16%)</title><rect x="18.0371%" y="229" width="0.1585%" height="15" fill="rgb(220,160,43)" fg:x="2617" fg:w="23"/><text x="18.2871%" y="239.50"></text></g><g><title>minecraft`minecraft::world::cube_indices (6 samples, 0.04%)</title><rect x="18.1956%" y="229" width="0.0414%" height="15" fill="rgb(213,52,39)" fg:x="2640" fg:w="6"/><text x="18.4456%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.02%)</title><rect x="18.4024%" y="197" width="0.0207%" height="15" fill="rgb(243,137,7)" fg:x="2670" fg:w="3"/><text x="18.6524%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (7 samples, 0.05%)</title><rect x="18.5954%" y="181" width="0.0482%" height="15" fill="rgb(230,79,13)" fg:x="2698" fg:w="7"/><text x="18.8454%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (5 samples, 0.03%)</title><rect x="18.7401%" y="165" width="0.0345%" height="15" fill="rgb(247,105,23)" fg:x="2719" fg:w="5"/><text x="18.9901%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (57 samples, 0.39%)</title><rect x="18.3886%" y="213" width="0.3929%" height="15" fill="rgb(223,179,41)" fg:x="2668" fg:w="57"/><text x="18.6386%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (52 samples, 0.36%)</title><rect x="18.4230%" y="197" width="0.3584%" height="15" fill="rgb(218,9,34)" fg:x="2673" fg:w="52"/><text x="18.6730%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.14%)</title><rect x="18.6436%" y="181" width="0.1378%" height="15" fill="rgb(222,106,8)" fg:x="2705" fg:w="20"/><text x="18.8936%" y="191.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::queue_draw (1,335 samples, 9.20%)</title><rect x="9.5940%" y="245" width="9.2012%" height="15" fill="rgb(211,220,0)" fg:x="1392" fg:w="1335"/><text x="9.8440%" y="255.50">minecraft`min..</text></g><g><title>minecraft`minecraft::world::cube_vertices (81 samples, 0.56%)</title><rect x="18.2370%" y="229" width="0.5583%" height="15" fill="rgb(229,52,16)" fg:x="2646" fg:w="81"/><text x="18.4870%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.01%)</title><rect x="18.7814%" y="213" width="0.0138%" height="15" fill="rgb(212,155,18)" fg:x="2725" fg:w="2"/><text x="19.0314%" y="223.50"></text></g><g><title>minecraft`minecraft::world::cube_indices (4 samples, 0.03%)</title><rect x="18.7952%" y="245" width="0.0276%" height="15" fill="rgb(242,21,14)" fg:x="2727" fg:w="4"/><text x="19.0452%" y="255.50"></text></g><g><title>minecraft`minecraft::world::cube_vertices (2 samples, 0.01%)</title><rect x="18.8228%" y="245" width="0.0138%" height="15" fill="rgb(222,19,48)" fg:x="2731" fg:w="2"/><text x="19.0728%" y="255.50"></text></g><g><title>minecraft`minecraft::main::_{{closure}} (1,682 samples, 11.59%)</title><rect x="7.2645%" y="261" width="11.5928%" height="15" fill="rgb(232,45,27)" fg:x="1054" fg:w="1682"/><text x="7.5145%" y="271.50">minecraft`minecra..</text></g><g><title>minecraft`std::time::Instant::elapsed (2 samples, 0.01%)</title><rect x="18.8435%" y="245" width="0.0138%" height="15" fill="rgb(249,103,42)" fg:x="2734" fg:w="2"/><text x="19.0935%" y="255.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::queue_draw (9 samples, 0.06%)</title><rect x="18.8573%" y="261" width="0.0620%" height="15" fill="rgb(246,81,33)" fg:x="2736" fg:w="9"/><text x="19.1073%" y="271.50"></text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1,730 samples, 11.92%)</title><rect x="7.1680%" y="277" width="11.9236%" height="15" fill="rgb(252,33,42)" fg:x="1040" fg:w="1730"/><text x="7.4180%" y="287.50">minecraft`&lt;winit::..</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (25 samples, 0.17%)</title><rect x="18.9193%" y="261" width="0.1723%" height="15" fill="rgb(209,212,41)" fg:x="2745" fg:w="25"/><text x="19.1693%" y="271.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::cleared (1,950 samples, 13.44%)</title><rect x="5.6792%" y="309" width="13.4399%" height="15" fill="rgb(207,154,6)" fg:x="824" fg:w="1950"/><text x="5.9292%" y="319.50">minecraft`winit::pla..</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (1,760 samples, 12.13%)</title><rect x="6.9888%" y="293" width="12.1304%" height="15" fill="rgb(223,64,47)" fg:x="1014" fg:w="1760"/><text x="7.2388%" y="303.50">minecraft`winit::p..</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (3 samples, 0.02%)</title><rect x="19.0985%" y="277" width="0.0207%" height="15" fill="rgb(211,161,38)" fg:x="2771" fg:w="3"/><text x="19.3485%" y="287.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,231 samples, 15.38%)</title><rect x="3.7494%" y="341" width="15.3767%" height="15" fill="rgb(219,138,40)" fg:x="544" fg:w="2231"/><text x="3.9994%" y="351.50">CoreFoundation`__CFRUNLO..</text></g><g><title>minecraft`winit::platform_impl::platform::observer::control_flow_end_handler (2,018 samples, 13.91%)</title><rect x="5.2175%" y="325" width="13.9086%" height="15" fill="rgb(241,228,46)" fg:x="757" fg:w="2018"/><text x="5.4675%" y="335.50">minecraft`winit::plat..</text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (2 samples, 0.01%)</title><rect x="19.1812%" y="309" width="0.0138%" height="15" fill="rgb(223,209,38)" fg:x="2783" fg:w="2"/><text x="19.4312%" y="319.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (27 samples, 0.19%)</title><rect x="19.1812%" y="325" width="0.1861%" height="15" fill="rgb(236,164,45)" fg:x="2783" fg:w="27"/><text x="19.4312%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (25 samples, 0.17%)</title><rect x="19.1950%" y="309" width="0.1723%" height="15" fill="rgb(231,15,5)" fg:x="2785" fg:w="25"/><text x="19.4450%" y="319.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (19 samples, 0.13%)</title><rect x="19.2363%" y="293" width="0.1310%" height="15" fill="rgb(252,35,15)" fg:x="2791" fg:w="19"/><text x="19.4863%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (36 samples, 0.25%)</title><rect x="19.1261%" y="341" width="0.2481%" height="15" fill="rgb(248,181,18)" fg:x="2775" fg:w="36"/><text x="19.3761%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (3 samples, 0.02%)</title><rect x="19.3742%" y="341" width="0.0207%" height="15" fill="rgb(233,39,42)" fg:x="2811" fg:w="3"/><text x="19.6242%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (7 samples, 0.05%)</title><rect x="19.3949%" y="341" width="0.0482%" height="15" fill="rgb(238,110,33)" fg:x="2814" fg:w="7"/><text x="19.6449%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (5 samples, 0.03%)</title><rect x="19.4569%" y="341" width="0.0345%" height="15" fill="rgb(233,195,10)" fg:x="2823" fg:w="5"/><text x="19.7069%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (19 samples, 0.13%)</title><rect x="19.4914%" y="341" width="0.1310%" height="15" fill="rgb(254,105,3)" fg:x="2828" fg:w="19"/><text x="19.7414%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (10 samples, 0.07%)</title><rect x="19.5534%" y="325" width="0.0689%" height="15" fill="rgb(221,225,9)" fg:x="2837" fg:w="10"/><text x="19.8034%" y="335.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (2 samples, 0.01%)</title><rect x="19.6223%" y="341" width="0.0138%" height="15" fill="rgb(224,227,45)" fg:x="2847" fg:w="2"/><text x="19.8723%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (47 samples, 0.32%)</title><rect x="19.6361%" y="341" width="0.3239%" height="15" fill="rgb(229,198,43)" fg:x="2849" fg:w="47"/><text x="19.8861%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (63 samples, 0.43%)</title><rect x="19.9600%" y="341" width="0.4342%" height="15" fill="rgb(206,209,35)" fg:x="2896" fg:w="63"/><text x="20.2100%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (4 samples, 0.03%)</title><rect x="20.3667%" y="325" width="0.0276%" height="15" fill="rgb(245,195,53)" fg:x="2955" fg:w="4"/><text x="20.6167%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (21 samples, 0.14%)</title><rect x="20.3942%" y="341" width="0.1447%" height="15" fill="rgb(240,92,26)" fg:x="2959" fg:w="21"/><text x="20.6442%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (19 samples, 0.13%)</title><rect x="20.5390%" y="341" width="0.1310%" height="15" fill="rgb(207,40,23)" fg:x="2980" fg:w="19"/><text x="20.7890%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (17 samples, 0.12%)</title><rect x="20.6699%" y="341" width="0.1172%" height="15" fill="rgb(223,111,35)" fg:x="2999" fg:w="17"/><text x="20.9199%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (17 samples, 0.12%)</title><rect x="20.7871%" y="341" width="0.1172%" height="15" fill="rgb(229,147,28)" fg:x="3016" fg:w="17"/><text x="21.0371%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,636 samples, 18.17%)</title><rect x="2.7431%" y="357" width="18.1680%" height="15" fill="rgb(211,29,28)" fg:x="398" fg:w="2636"/><text x="2.9931%" y="367.50">CoreFoundation`__CFRunLoopDo..</text></g><g><title>CoreFoundation`CFBasicHashGetBucket (9 samples, 0.06%)</title><rect x="21.1041%" y="309" width="0.0620%" height="15" fill="rgb(228,72,33)" fg:x="3062" fg:w="9"/><text x="21.3541%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (31 samples, 0.21%)</title><rect x="21.0008%" y="325" width="0.2137%" height="15" fill="rgb(205,214,31)" fg:x="3047" fg:w="31"/><text x="21.2508%" y="335.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (7 samples, 0.05%)</title><rect x="21.1662%" y="309" width="0.0482%" height="15" fill="rgb(224,111,15)" fg:x="3071" fg:w="7"/><text x="21.4162%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (3 samples, 0.02%)</title><rect x="21.1937%" y="293" width="0.0207%" height="15" fill="rgb(253,21,26)" fg:x="3075" fg:w="3"/><text x="21.4437%" y="303.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (40 samples, 0.28%)</title><rect x="20.9456%" y="341" width="0.2757%" height="15" fill="rgb(245,139,43)" fg:x="3039" fg:w="40"/><text x="21.1956%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (50 samples, 0.34%)</title><rect x="20.9112%" y="357" width="0.3446%" height="15" fill="rgb(252,170,7)" fg:x="3034" fg:w="50"/><text x="21.1612%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (5 samples, 0.03%)</title><rect x="21.2213%" y="341" width="0.0345%" height="15" fill="rgb(231,118,14)" fg:x="3079" fg:w="5"/><text x="21.4713%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (4 samples, 0.03%)</title><rect x="21.2282%" y="325" width="0.0276%" height="15" fill="rgb(238,83,0)" fg:x="3080" fg:w="4"/><text x="21.4782%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (2 samples, 0.01%)</title><rect x="21.2558%" y="357" width="0.0138%" height="15" fill="rgb(221,39,39)" fg:x="3084" fg:w="2"/><text x="21.5058%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (2 samples, 0.01%)</title><rect x="21.2902%" y="341" width="0.0138%" height="15" fill="rgb(222,119,46)" fg:x="3089" fg:w="2"/><text x="21.5402%" y="351.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.02%)</title><rect x="21.3316%" y="325" width="0.0207%" height="15" fill="rgb(222,165,49)" fg:x="3095" fg:w="3"/><text x="21.5816%" y="335.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (9 samples, 0.06%)</title><rect x="21.3523%" y="325" width="0.0620%" height="15" fill="rgb(219,113,52)" fg:x="3098" fg:w="9"/><text x="21.6023%" y="335.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.03%)</title><rect x="21.3798%" y="309" width="0.0345%" height="15" fill="rgb(214,7,15)" fg:x="3102" fg:w="5"/><text x="21.6298%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.01%)</title><rect x="21.4143%" y="325" width="0.0138%" height="15" fill="rgb(235,32,4)" fg:x="3107" fg:w="2"/><text x="21.6643%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.02%)</title><rect x="21.4350%" y="325" width="0.0207%" height="15" fill="rgb(238,90,54)" fg:x="3110" fg:w="3"/><text x="21.6850%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (17 samples, 0.12%)</title><rect x="21.4556%" y="325" width="0.1172%" height="15" fill="rgb(213,208,19)" fg:x="3113" fg:w="17"/><text x="21.7056%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (46 samples, 0.32%)</title><rect x="21.3040%" y="341" width="0.3170%" height="15" fill="rgb(233,156,4)" fg:x="3091" fg:w="46"/><text x="21.5540%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.04%)</title><rect x="21.5797%" y="325" width="0.0414%" height="15" fill="rgb(207,194,5)" fg:x="3131" fg:w="6"/><text x="21.8297%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (9 samples, 0.06%)</title><rect x="21.6831%" y="325" width="0.0620%" height="15" fill="rgb(206,111,30)" fg:x="3146" fg:w="9"/><text x="21.9331%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (23 samples, 0.16%)</title><rect x="21.6211%" y="341" width="0.1585%" height="15" fill="rgb(243,70,54)" fg:x="3137" fg:w="23"/><text x="21.8711%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="21.7451%" y="325" width="0.0345%" height="15" fill="rgb(242,28,8)" fg:x="3155" fg:w="5"/><text x="21.9951%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (2 samples, 0.01%)</title><rect x="21.7796%" y="341" width="0.0138%" height="15" fill="rgb(219,106,18)" fg:x="3160" fg:w="2"/><text x="22.0296%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayAppendValue (5 samples, 0.03%)</title><rect x="21.8003%" y="341" width="0.0345%" height="15" fill="rgb(244,222,10)" fg:x="3163" fg:w="5"/><text x="22.0503%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayCreateMutable (6 samples, 0.04%)</title><rect x="21.8347%" y="341" width="0.0414%" height="15" fill="rgb(236,179,52)" fg:x="3168" fg:w="6"/><text x="22.0847%" y="351.50"></text></g><g><title>CoreFoundation`+[NSArray allocWithZone:] (4 samples, 0.03%)</title><rect x="21.8485%" y="325" width="0.0276%" height="15" fill="rgb(213,23,39)" fg:x="3170" fg:w="4"/><text x="22.0985%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCount (4 samples, 0.03%)</title><rect x="21.8761%" y="341" width="0.0276%" height="15" fill="rgb(238,48,10)" fg:x="3174" fg:w="4"/><text x="22.1261%" y="351.50"></text></g><g><title>CoreFoundation`CFRelease (10 samples, 0.07%)</title><rect x="21.9105%" y="341" width="0.0689%" height="15" fill="rgb(251,196,23)" fg:x="3179" fg:w="10"/><text x="22.1605%" y="351.50"></text></g><g><title>CoreFoundation`CFRetain (4 samples, 0.03%)</title><rect x="21.9795%" y="341" width="0.0276%" height="15" fill="rgb(250,152,24)" fg:x="3189" fg:w="4"/><text x="22.2295%" y="351.50"></text></g><g><title>CoreFoundation`CFSetGetCount (7 samples, 0.05%)</title><rect x="22.0070%" y="341" width="0.0482%" height="15" fill="rgb(209,150,17)" fg:x="3193" fg:w="7"/><text x="22.2570%" y="351.50"></text></g><g><title>CoreFoundation`CFSetGetValues (2 samples, 0.01%)</title><rect x="22.0553%" y="341" width="0.0138%" height="15" fill="rgb(234,202,34)" fg:x="3200" fg:w="2"/><text x="22.3053%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$bzero (2 samples, 0.01%)</title><rect x="22.0691%" y="341" width="0.0138%" height="15" fill="rgb(253,148,53)" fg:x="3202" fg:w="2"/><text x="22.3191%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="22.0828%" y="341" width="0.0138%" height="15" fill="rgb(218,129,16)" fg:x="3204" fg:w="2"/><text x="22.3328%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$memmove (2 samples, 0.01%)</title><rect x="22.1173%" y="341" width="0.0138%" height="15" fill="rgb(216,85,19)" fg:x="3209" fg:w="2"/><text x="22.3673%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_lock (4 samples, 0.03%)</title><rect x="22.1518%" y="341" width="0.0276%" height="15" fill="rgb(235,228,7)" fg:x="3214" fg:w="4"/><text x="22.4018%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="22.1793%" y="341" width="0.0207%" height="15" fill="rgb(245,175,0)" fg:x="3218" fg:w="3"/><text x="22.4293%" y="351.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (2 samples, 0.01%)</title><rect x="22.2069%" y="341" width="0.0138%" height="15" fill="rgb(208,168,36)" fg:x="3222" fg:w="2"/><text x="22.4569%" y="351.50"></text></g><g><title>CoreFoundation`_CFRetain (8 samples, 0.06%)</title><rect x="22.2276%" y="341" width="0.0551%" height="15" fill="rgb(246,171,24)" fg:x="3225" fg:w="8"/><text x="22.4776%" y="351.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (2 samples, 0.01%)</title><rect x="22.2827%" y="341" width="0.0138%" height="15" fill="rgb(215,142,24)" fg:x="3233" fg:w="2"/><text x="22.5327%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (2 samples, 0.01%)</title><rect x="22.3172%" y="341" width="0.0138%" height="15" fill="rgb(250,187,7)" fg:x="3238" fg:w="2"/><text x="22.5672%" y="351.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (2 samples, 0.01%)</title><rect x="22.8755%" y="325" width="0.0138%" height="15" fill="rgb(228,66,33)" fg:x="3319" fg:w="2"/><text x="23.1255%" y="335.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (41 samples, 0.28%)</title><rect x="22.9030%" y="309" width="0.2826%" height="15" fill="rgb(234,215,21)" fg:x="3323" fg:w="41"/><text x="23.1530%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (40 samples, 0.28%)</title><rect x="22.9099%" y="293" width="0.2757%" height="15" fill="rgb(222,191,20)" fg:x="3324" fg:w="40"/><text x="23.1599%" y="303.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (46 samples, 0.32%)</title><rect x="22.8892%" y="325" width="0.3170%" height="15" fill="rgb(245,79,54)" fg:x="3321" fg:w="46"/><text x="23.1392%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (3 samples, 0.02%)</title><rect x="23.1856%" y="309" width="0.0207%" height="15" fill="rgb(240,10,37)" fg:x="3364" fg:w="3"/><text x="23.4356%" y="319.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (18 samples, 0.12%)</title><rect x="23.2063%" y="325" width="0.1241%" height="15" fill="rgb(214,192,32)" fg:x="3367" fg:w="18"/><text x="23.4563%" y="335.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (7 samples, 0.05%)</title><rect x="23.3303%" y="325" width="0.0482%" height="15" fill="rgb(209,36,54)" fg:x="3385" fg:w="7"/><text x="23.5803%" y="335.50"></text></g><g><title>CoreFoundation`CFArrayGetValueAtIndex (2 samples, 0.01%)</title><rect x="23.3786%" y="325" width="0.0138%" height="15" fill="rgb(220,10,11)" fg:x="3392" fg:w="2"/><text x="23.6286%" y="335.50"></text></g><g><title>CoreFoundation`CFArrayRemoveValueAtIndex (12 samples, 0.08%)</title><rect x="23.3924%" y="325" width="0.0827%" height="15" fill="rgb(221,106,17)" fg:x="3394" fg:w="12"/><text x="23.6424%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashGetElements (22 samples, 0.15%)</title><rect x="23.4820%" y="325" width="0.1516%" height="15" fill="rgb(251,142,44)" fg:x="3407" fg:w="22"/><text x="23.7320%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashGetBucket (14 samples, 0.10%)</title><rect x="23.5371%" y="309" width="0.0965%" height="15" fill="rgb(238,13,15)" fg:x="3415" fg:w="14"/><text x="23.7871%" y="319.50"></text></g><g><title>CoreFoundation`CFRelease (61 samples, 0.42%)</title><rect x="23.6336%" y="325" width="0.4204%" height="15" fill="rgb(208,107,27)" fg:x="3429" fg:w="61"/><text x="23.8836%" y="335.50"></text></g><g><title>CoreFoundation`CFRetain (22 samples, 0.15%)</title><rect x="24.0540%" y="325" width="0.1516%" height="15" fill="rgb(205,136,37)" fg:x="3490" fg:w="22"/><text x="24.3040%" y="335.50"></text></g><g><title>CoreFoundation`CFSetGetValue (7 samples, 0.05%)</title><rect x="24.2126%" y="325" width="0.0482%" height="15" fill="rgb(250,205,27)" fg:x="3513" fg:w="7"/><text x="24.4626%" y="335.50"></text></g><g><title>CoreFoundation`CFSetGetValues (13 samples, 0.09%)</title><rect x="24.2608%" y="325" width="0.0896%" height="15" fill="rgb(210,80,43)" fg:x="3520" fg:w="13"/><text x="24.5108%" y="335.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$object_setClass (4 samples, 0.03%)</title><rect x="24.3711%" y="325" width="0.0276%" height="15" fill="rgb(247,160,36)" fg:x="3536" fg:w="4"/><text x="24.6211%" y="335.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (6 samples, 0.04%)</title><rect x="24.3986%" y="325" width="0.0414%" height="15" fill="rgb(234,13,49)" fg:x="3540" fg:w="6"/><text x="24.6486%" y="335.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (7 samples, 0.05%)</title><rect x="24.4400%" y="325" width="0.0482%" height="15" fill="rgb(234,122,0)" fg:x="3546" fg:w="7"/><text x="24.6900%" y="335.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (7 samples, 0.05%)</title><rect x="24.4400%" y="309" width="0.0482%" height="15" fill="rgb(207,146,38)" fg:x="3546" fg:w="7"/><text x="24.6900%" y="319.50"></text></g><g><title>CoreFoundation`_CFRelease (54 samples, 0.37%)</title><rect x="24.4882%" y="325" width="0.3722%" height="15" fill="rgb(207,177,25)" fg:x="3553" fg:w="54"/><text x="24.7382%" y="335.50"></text></g><g><title>CoreFoundation`_CFRetain (18 samples, 0.12%)</title><rect x="24.8604%" y="325" width="0.1241%" height="15" fill="rgb(211,178,42)" fg:x="3607" fg:w="18"/><text x="25.1104%" y="335.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (5 samples, 0.03%)</title><rect x="24.9845%" y="325" width="0.0345%" height="15" fill="rgb(230,69,54)" fg:x="3625" fg:w="5"/><text x="25.2345%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (6 samples, 0.04%)</title><rect x="25.0534%" y="309" width="0.0414%" height="15" fill="rgb(214,135,41)" fg:x="3635" fg:w="6"/><text x="25.3034%" y="319.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (2 samples, 0.01%)</title><rect x="25.0948%" y="309" width="0.0138%" height="15" fill="rgb(237,67,25)" fg:x="3641" fg:w="2"/><text x="25.3448%" y="319.50"></text></g><g><title>libdispatch.dylib`dispatch_time (2 samples, 0.01%)</title><rect x="25.1086%" y="309" width="0.0138%" height="15" fill="rgb(222,189,50)" fg:x="3643" fg:w="2"/><text x="25.3586%" y="319.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (17 samples, 0.12%)</title><rect x="25.0190%" y="325" width="0.1172%" height="15" fill="rgb(245,148,34)" fg:x="3630" fg:w="17"/><text x="25.2690%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="25.1223%" y="309" width="0.0138%" height="15" fill="rgb(222,29,6)" fg:x="3645" fg:w="2"/><text x="25.3723%" y="319.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ (2 samples, 0.01%)</title><rect x="25.1361%" y="325" width="0.0138%" height="15" fill="rgb(221,189,43)" fg:x="3647" fg:w="2"/><text x="25.3861%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (15 samples, 0.10%)</title><rect x="25.1913%" y="309" width="0.1034%" height="15" fill="rgb(207,36,27)" fg:x="3655" fg:w="15"/><text x="25.4413%" y="319.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (25 samples, 0.17%)</title><rect x="25.2946%" y="309" width="0.1723%" height="15" fill="rgb(217,90,24)" fg:x="3670" fg:w="25"/><text x="25.5446%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (3 samples, 0.02%)</title><rect x="25.5910%" y="293" width="0.0207%" height="15" fill="rgb(224,66,35)" fg:x="3713" fg:w="3"/><text x="25.8410%" y="303.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (26 samples, 0.18%)</title><rect x="25.4670%" y="309" width="0.1792%" height="15" fill="rgb(221,13,50)" fg:x="3695" fg:w="26"/><text x="25.7170%" y="319.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (5 samples, 0.03%)</title><rect x="25.6117%" y="293" width="0.0345%" height="15" fill="rgb(236,68,49)" fg:x="3716" fg:w="5"/><text x="25.8617%" y="303.50"></text></g><g><title>CoreFoundation`CFRetain (2 samples, 0.01%)</title><rect x="25.7564%" y="293" width="0.0138%" height="15" fill="rgb(229,146,28)" fg:x="3737" fg:w="2"/><text x="26.0064%" y="303.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$memmove (3 samples, 0.02%)</title><rect x="25.7702%" y="293" width="0.0207%" height="15" fill="rgb(225,31,38)" fg:x="3739" fg:w="3"/><text x="26.0202%" y="303.50"></text></g><g><title>CoreFoundation`CFRetain (16 samples, 0.11%)</title><rect x="26.1424%" y="277" width="0.1103%" height="15" fill="rgb(250,208,3)" fg:x="3793" fg:w="16"/><text x="26.3924%" y="287.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (72 samples, 0.50%)</title><rect x="25.7909%" y="293" width="0.4962%" height="15" fill="rgb(246,54,23)" fg:x="3742" fg:w="72"/><text x="26.0409%" y="303.50"></text></g><g><title>CoreFoundation`_CFRetain (5 samples, 0.03%)</title><rect x="26.2527%" y="277" width="0.0345%" height="15" fill="rgb(243,76,11)" fg:x="3809" fg:w="5"/><text x="26.5027%" y="287.50"></text></g><g><title>CoreFoundation`_CFRetain (3 samples, 0.02%)</title><rect x="26.2871%" y="293" width="0.0207%" height="15" fill="rgb(245,21,50)" fg:x="3814" fg:w="3"/><text x="26.5371%" y="303.50"></text></g><g><title>CoreFoundation`CFArrayInsertValueAtIndex (106 samples, 0.73%)</title><rect x="25.6462%" y="309" width="0.7306%" height="15" fill="rgb(228,9,43)" fg:x="3721" fg:w="106"/><text x="25.8962%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (9 samples, 0.06%)</title><rect x="26.3147%" y="293" width="0.0620%" height="15" fill="rgb(208,100,47)" fg:x="3818" fg:w="9"/><text x="26.5647%" y="303.50"></text></g><g><title>CoreFoundation`CFRetain (20 samples, 0.14%)</title><rect x="26.3767%" y="309" width="0.1378%" height="15" fill="rgb(232,26,8)" fg:x="3827" fg:w="20"/><text x="26.6267%" y="319.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$bzero (5 samples, 0.03%)</title><rect x="26.5146%" y="309" width="0.0345%" height="15" fill="rgb(216,166,38)" fg:x="3847" fg:w="5"/><text x="26.7646%" y="319.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$flsl (5 samples, 0.03%)</title><rect x="26.5559%" y="309" width="0.0345%" height="15" fill="rgb(251,202,51)" fg:x="3853" fg:w="5"/><text x="26.8059%" y="319.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$mach_absolute_time (2 samples, 0.01%)</title><rect x="26.5904%" y="309" width="0.0138%" height="15" fill="rgb(254,216,34)" fg:x="3858" fg:w="2"/><text x="26.8404%" y="319.50"></text></g><g><title>CoreFoundation`CFRelease (2 samples, 0.01%)</title><rect x="26.9281%" y="293" width="0.0138%" height="15" fill="rgb(251,32,27)" fg:x="3907" fg:w="2"/><text x="27.1781%" y="303.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$bzero (5 samples, 0.03%)</title><rect x="26.9419%" y="293" width="0.0345%" height="15" fill="rgb(208,127,28)" fg:x="3909" fg:w="5"/><text x="27.1919%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.02%)</title><rect x="26.9764%" y="293" width="0.0207%" height="15" fill="rgb(224,137,22)" fg:x="3914" fg:w="3"/><text x="27.2264%" y="303.50"></text></g><g><title>CoreFoundation`CFRelease (19 samples, 0.13%)</title><rect x="27.1693%" y="277" width="0.1310%" height="15" fill="rgb(254,70,32)" fg:x="3942" fg:w="19"/><text x="27.4193%" y="287.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (66 samples, 0.45%)</title><rect x="26.9970%" y="293" width="0.4549%" height="15" fill="rgb(229,75,37)" fg:x="3917" fg:w="66"/><text x="27.2470%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (22 samples, 0.15%)</title><rect x="27.3003%" y="277" width="0.1516%" height="15" fill="rgb(252,64,23)" fg:x="3961" fg:w="22"/><text x="27.5503%" y="287.50"></text></g><g><title>CoreFoundation`__CFTypeCollectionRelease (5 samples, 0.03%)</title><rect x="27.4519%" y="293" width="0.0345%" height="15" fill="rgb(232,162,48)" fg:x="3983" fg:w="5"/><text x="27.7019%" y="303.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (133 samples, 0.92%)</title><rect x="26.6111%" y="309" width="0.9167%" height="15" fill="rgb(246,160,12)" fg:x="3861" fg:w="133"/><text x="26.8611%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.04%)</title><rect x="27.4864%" y="293" width="0.0414%" height="15" fill="rgb(247,166,0)" fg:x="3988" fg:w="6"/><text x="27.7364%" y="303.50"></text></g><g><title>CoreFoundation`_CFRetain (7 samples, 0.05%)</title><rect x="27.5277%" y="309" width="0.0482%" height="15" fill="rgb(249,219,21)" fg:x="3994" fg:w="7"/><text x="27.7777%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (13 samples, 0.09%)</title><rect x="27.7552%" y="293" width="0.0896%" height="15" fill="rgb(205,209,3)" fg:x="4027" fg:w="13"/><text x="28.0052%" y="303.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (7 samples, 0.05%)</title><rect x="27.8448%" y="293" width="0.0482%" height="15" fill="rgb(243,44,1)" fg:x="4040" fg:w="7"/><text x="28.0948%" y="303.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalToTSR (3 samples, 0.02%)</title><rect x="27.8930%" y="293" width="0.0207%" height="15" fill="rgb(206,159,16)" fg:x="4047" fg:w="3"/><text x="28.1430%" y="303.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (53 samples, 0.37%)</title><rect x="27.5760%" y="309" width="0.3653%" height="15" fill="rgb(244,77,30)" fg:x="4001" fg:w="53"/><text x="27.8260%" y="319.50"></text></g><g><title>libdispatch.dylib`dispatch_time (4 samples, 0.03%)</title><rect x="27.9137%" y="293" width="0.0276%" height="15" fill="rgb(218,69,12)" fg:x="4050" fg:w="4"/><text x="28.1637%" y="303.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (5 samples, 0.03%)</title><rect x="27.9413%" y="309" width="0.0345%" height="15" fill="rgb(212,87,7)" fg:x="4054" fg:w="5"/><text x="28.1913%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSCFArray objectAtIndex:] (17 samples, 0.12%)</title><rect x="28.1480%" y="293" width="0.1172%" height="15" fill="rgb(245,114,25)" fg:x="4084" fg:w="17"/><text x="28.3980%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopInsertionIndexInTimerArray (52 samples, 0.36%)</title><rect x="27.9757%" y="309" width="0.3584%" height="15" fill="rgb(210,61,42)" fg:x="4059" fg:w="52"/><text x="28.2257%" y="319.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (10 samples, 0.07%)</title><rect x="28.2652%" y="293" width="0.0689%" height="15" fill="rgb(211,52,33)" fg:x="4101" fg:w="10"/><text x="28.5152%" y="303.50"></text></g><g><title>CoreFoundation`__CFTSRToNanoseconds (2 samples, 0.01%)</title><rect x="28.3341%" y="309" width="0.0138%" height="15" fill="rgb(234,58,33)" fg:x="4111" fg:w="2"/><text x="28.5841%" y="319.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalToTSR (5 samples, 0.03%)</title><rect x="28.3479%" y="309" width="0.0345%" height="15" fill="rgb(220,115,36)" fg:x="4113" fg:w="5"/><text x="28.5979%" y="319.50"></text></g><g><title>CoreFoundation`objc_msgSend$objectAtIndex: (15 samples, 0.10%)</title><rect x="28.3824%" y="309" width="0.1034%" height="15" fill="rgb(243,153,54)" fg:x="4118" fg:w="15"/><text x="28.6324%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (32 samples, 0.22%)</title><rect x="28.4858%" y="309" width="0.2206%" height="15" fill="rgb(251,47,18)" fg:x="4133" fg:w="32"/><text x="28.7358%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (125 samples, 0.86%)</title><rect x="28.7132%" y="309" width="0.8615%" height="15" fill="rgb(242,102,42)" fg:x="4166" fg:w="125"/><text x="28.9632%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (2,590 samples, 17.85%)</title><rect x="29.5747%" y="309" width="17.8510%" height="15" fill="rgb(234,31,38)" fg:x="4291" fg:w="2590"/><text x="29.8247%" y="319.50">libsystem_kernel.dylib`mk_ti..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.04%)</title><rect x="47.4257%" y="309" width="0.0414%" height="15" fill="rgb(221,117,51)" fg:x="6881" fg:w="6"/><text x="47.6757%" y="319.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (3,241 samples, 22.34%)</title><rect x="25.1499%" y="325" width="22.3379%" height="15" fill="rgb(212,20,18)" fg:x="3649" fg:w="3241"/><text x="25.3999%" y="335.50">CoreFoundation`__CFRepositionTimerI..</text></g><g><title>libsystem_platform.dylib`flsl (3 samples, 0.02%)</title><rect x="47.4671%" y="309" width="0.0207%" height="15" fill="rgb(245,133,36)" fg:x="6887" fg:w="3"/><text x="47.7171%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (5 samples, 0.03%)</title><rect x="47.5980%" y="309" width="0.0345%" height="15" fill="rgb(212,6,19)" fg:x="6906" fg:w="5"/><text x="47.8480%" y="319.50"></text></g><g><title>CoreFoundation`CFRetain (28 samples, 0.19%)</title><rect x="47.6325%" y="309" width="0.1930%" height="15" fill="rgb(218,1,36)" fg:x="6911" fg:w="28"/><text x="47.8825%" y="319.50"></text></g><g><title>CoreFoundation`CFEqual (53 samples, 0.37%)</title><rect x="48.4182%" y="277" width="0.3653%" height="15" fill="rgb(246,84,54)" fg:x="7025" fg:w="53"/><text x="48.6682%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (149 samples, 1.03%)</title><rect x="48.0736%" y="293" width="1.0269%" height="15" fill="rgb(242,110,6)" fg:x="6975" fg:w="149"/><text x="48.3236%" y="303.50"></text></g><g><title>CoreFoundation`CFHash (46 samples, 0.32%)</title><rect x="48.7835%" y="277" width="0.3170%" height="15" fill="rgb(214,47,5)" fg:x="7078" fg:w="46"/><text x="49.0335%" y="287.50"></text></g><g><title>CoreFoundation`CFEqual (13 samples, 0.09%)</title><rect x="49.1006%" y="293" width="0.0896%" height="15" fill="rgb(218,159,25)" fg:x="7124" fg:w="13"/><text x="49.3506%" y="303.50"></text></g><g><title>CoreFoundation`CFHash (16 samples, 0.11%)</title><rect x="49.1902%" y="293" width="0.1103%" height="15" fill="rgb(215,211,28)" fg:x="7137" fg:w="16"/><text x="49.4402%" y="303.50"></text></g><g><title>CoreFoundation`CFSetGetValue (282 samples, 1.94%)</title><rect x="47.8255%" y="309" width="1.9436%" height="15" fill="rgb(238,59,32)" fg:x="6939" fg:w="282"/><text x="48.0755%" y="319.50">C..</text></g><g><title>CoreFoundation`__CFStringHash (68 samples, 0.47%)</title><rect x="49.3004%" y="293" width="0.4687%" height="15" fill="rgb(226,82,3)" fg:x="7153" fg:w="68"/><text x="49.5504%" y="303.50"></text></g><g><title>CoreFoundation`_CFRetain (21 samples, 0.14%)</title><rect x="49.7691%" y="309" width="0.1447%" height="15" fill="rgb(240,164,32)" fg:x="7221" fg:w="21"/><text x="50.0191%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (22 samples, 0.15%)</title><rect x="49.9207%" y="309" width="0.1516%" height="15" fill="rgb(232,46,7)" fg:x="7243" fg:w="22"/><text x="50.1707%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (13 samples, 0.09%)</title><rect x="49.9828%" y="293" width="0.0896%" height="15" fill="rgb(229,129,53)" fg:x="7252" fg:w="13"/><text x="50.2328%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_class::isInitialized (14 samples, 0.10%)</title><rect x="50.0724%" y="309" width="0.0965%" height="15" fill="rgb(234,188,29)" fg:x="7265" fg:w="14"/><text x="50.3224%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (17 samples, 0.12%)</title><rect x="50.1689%" y="309" width="0.1172%" height="15" fill="rgb(246,141,4)" fg:x="7279" fg:w="17"/><text x="50.4189%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (414 samples, 2.85%)</title><rect x="47.4878%" y="325" width="2.8534%" height="15" fill="rgb(229,23,39)" fg:x="6890" fg:w="414"/><text x="47.7378%" y="335.50">Co..</text></g><g><title>libobjc.A.dylib`object_setClass (8 samples, 0.06%)</title><rect x="50.2860%" y="309" width="0.0551%" height="15" fill="rgb(206,12,3)" fg:x="7296" fg:w="8"/><text x="50.5360%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopInsertionIndexInTimerArray (4 samples, 0.03%)</title><rect x="50.3412%" y="325" width="0.0276%" height="15" fill="rgb(252,226,20)" fg:x="7304" fg:w="4"/><text x="50.5912%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (10 samples, 0.07%)</title><rect x="50.3687%" y="325" width="0.0689%" height="15" fill="rgb(216,123,35)" fg:x="7308" fg:w="10"/><text x="50.6187%" y="335.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (9 samples, 0.06%)</title><rect x="50.3756%" y="309" width="0.0620%" height="15" fill="rgb(212,68,40)" fg:x="7309" fg:w="9"/><text x="50.6256%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (8 samples, 0.06%)</title><rect x="50.3825%" y="293" width="0.0551%" height="15" fill="rgb(254,125,32)" fg:x="7310" fg:w="8"/><text x="50.6325%" y="303.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (4 samples, 0.03%)</title><rect x="50.4101%" y="277" width="0.0276%" height="15" fill="rgb(253,97,22)" fg:x="7314" fg:w="4"/><text x="50.6601%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.01%)</title><rect x="50.4514%" y="325" width="0.0138%" height="15" fill="rgb(241,101,14)" fg:x="7320" fg:w="2"/><text x="50.7014%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (10 samples, 0.07%)</title><rect x="50.4652%" y="325" width="0.0689%" height="15" fill="rgb(238,103,29)" fg:x="7322" fg:w="10"/><text x="50.7152%" y="335.50"></text></g><g><title>libobjc.A.dylib`object_setClass (4 samples, 0.03%)</title><rect x="50.5342%" y="325" width="0.0276%" height="15" fill="rgb(233,195,47)" fg:x="7332" fg:w="4"/><text x="50.7842%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="50.5686%" y="325" width="0.0138%" height="15" fill="rgb(246,218,30)" fg:x="7337" fg:w="2"/><text x="50.8186%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (3 samples, 0.02%)</title><rect x="50.5824%" y="325" width="0.0207%" height="15" fill="rgb(219,145,47)" fg:x="7339" fg:w="3"/><text x="50.8324%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="50.5893%" y="309" width="0.0138%" height="15" fill="rgb(243,12,26)" fg:x="7340" fg:w="2"/><text x="50.8393%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (69 samples, 0.48%)</title><rect x="50.6031%" y="325" width="0.4756%" height="15" fill="rgb(214,87,16)" fg:x="7342" fg:w="69"/><text x="50.8531%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (689 samples, 4.75%)</title><rect x="51.0786%" y="325" width="4.7488%" height="15" fill="rgb(208,99,42)" fg:x="7411" fg:w="689"/><text x="51.3286%" y="335.50">libsys..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (41 samples, 0.28%)</title><rect x="55.8274%" y="325" width="0.2826%" height="15" fill="rgb(253,99,2)" fg:x="8100" fg:w="41"/><text x="56.0774%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (38 samples, 0.26%)</title><rect x="56.1100%" y="325" width="0.2619%" height="15" fill="rgb(220,168,23)" fg:x="8141" fg:w="38"/><text x="56.3600%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (14 samples, 0.10%)</title><rect x="56.3719%" y="325" width="0.0965%" height="15" fill="rgb(242,38,24)" fg:x="8179" fg:w="14"/><text x="56.6219%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (7 samples, 0.05%)</title><rect x="56.4684%" y="325" width="0.0482%" height="15" fill="rgb(225,182,9)" fg:x="8193" fg:w="7"/><text x="56.7184%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (11 samples, 0.08%)</title><rect x="56.5166%" y="325" width="0.0758%" height="15" fill="rgb(243,178,37)" fg:x="8200" fg:w="11"/><text x="56.7666%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.06%)</title><rect x="56.5925%" y="325" width="0.0551%" height="15" fill="rgb(232,139,19)" fg:x="8211" fg:w="8"/><text x="56.8425%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (4,980 samples, 34.32%)</title><rect x="22.3310%" y="341" width="34.3235%" height="15" fill="rgb(225,201,24)" fg:x="3240" fg:w="4980"/><text x="22.5810%" y="351.50">CoreFoundation`__CFRunLoopDoTimer</text></g><g><title>CoreFoundation`__CFTimeIntervalUntilTSR (2 samples, 0.01%)</title><rect x="56.6545%" y="341" width="0.0138%" height="15" fill="rgb(221,47,46)" fg:x="8220" fg:w="2"/><text x="56.9045%" y="351.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$class_createInstance (2 samples, 0.01%)</title><rect x="56.6683%" y="325" width="0.0138%" height="15" fill="rgb(249,23,13)" fg:x="8222" fg:w="2"/><text x="56.9183%" y="335.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (11 samples, 0.08%)</title><rect x="56.6958%" y="309" width="0.0758%" height="15" fill="rgb(219,9,5)" fg:x="8226" fg:w="11"/><text x="56.9458%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (10 samples, 0.07%)</title><rect x="56.7027%" y="293" width="0.0689%" height="15" fill="rgb(254,171,16)" fg:x="8227" fg:w="10"/><text x="56.9527%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (8 samples, 0.06%)</title><rect x="56.7717%" y="309" width="0.0551%" height="15" fill="rgb(230,171,20)" fg:x="8237" fg:w="8"/><text x="57.0217%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`calloc (2 samples, 0.01%)</title><rect x="56.8268%" y="309" width="0.0138%" height="15" fill="rgb(210,71,41)" fg:x="8245" fg:w="2"/><text x="57.0768%" y="319.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (27 samples, 0.19%)</title><rect x="56.6821%" y="325" width="0.1861%" height="15" fill="rgb(206,173,20)" fg:x="8224" fg:w="27"/><text x="56.9321%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.03%)</title><rect x="56.8406%" y="309" width="0.0276%" height="15" fill="rgb(233,88,34)" fg:x="8247" fg:w="4"/><text x="57.0906%" y="319.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (35 samples, 0.24%)</title><rect x="56.6683%" y="341" width="0.2412%" height="15" fill="rgb(223,209,46)" fg:x="8222" fg:w="35"/><text x="56.9183%" y="351.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (6 samples, 0.04%)</title><rect x="56.8682%" y="325" width="0.0414%" height="15" fill="rgb(250,43,18)" fg:x="8251" fg:w="6"/><text x="57.1182%" y="335.50"></text></g><g><title>CoreFoundation`__NSArrayMutablePlaceholder (2 samples, 0.01%)</title><rect x="56.9095%" y="341" width="0.0138%" height="15" fill="rgb(208,13,10)" fg:x="8257" fg:w="2"/><text x="57.1595%" y="351.50"></text></g><g><title>libobjc.A.dylib`-[NSObject dealloc] (6 samples, 0.04%)</title><rect x="56.9233%" y="341" width="0.0414%" height="15" fill="rgb(212,200,36)" fg:x="8259" fg:w="6"/><text x="57.1733%" y="351.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAlloc (2 samples, 0.01%)</title><rect x="56.9646%" y="341" width="0.0138%" height="15" fill="rgb(225,90,30)" fg:x="8265" fg:w="2"/><text x="57.2146%" y="351.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (5 samples, 0.03%)</title><rect x="56.9784%" y="341" width="0.0345%" height="15" fill="rgb(236,182,39)" fg:x="8267" fg:w="5"/><text x="57.2284%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (2 samples, 0.01%)</title><rect x="57.0129%" y="341" width="0.0138%" height="15" fill="rgb(212,144,35)" fg:x="8272" fg:w="2"/><text x="57.2629%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.03%)</title><rect x="57.0267%" y="341" width="0.0345%" height="15" fill="rgb(228,63,44)" fg:x="8274" fg:w="5"/><text x="57.2767%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.03%)</title><rect x="57.0611%" y="341" width="0.0276%" height="15" fill="rgb(228,109,6)" fg:x="8279" fg:w="4"/><text x="57.3111%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (2 samples, 0.01%)</title><rect x="57.0887%" y="341" width="0.0138%" height="15" fill="rgb(238,117,24)" fg:x="8283" fg:w="2"/><text x="57.3387%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (4 samples, 0.03%)</title><rect x="57.1094%" y="341" width="0.0276%" height="15" fill="rgb(242,26,26)" fg:x="8286" fg:w="4"/><text x="57.3594%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (91 samples, 0.63%)</title><rect x="57.1369%" y="341" width="0.6272%" height="15" fill="rgb(221,92,48)" fg:x="8290" fg:w="91"/><text x="57.3869%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.06%)</title><rect x="57.7641%" y="341" width="0.0551%" height="15" fill="rgb(209,209,32)" fg:x="8381" fg:w="8"/><text x="58.0141%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.01%)</title><rect x="57.8193%" y="341" width="0.0138%" height="15" fill="rgb(221,70,22)" fg:x="8389" fg:w="2"/><text x="58.0693%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.09%)</title><rect x="57.8331%" y="341" width="0.0896%" height="15" fill="rgb(248,145,5)" fg:x="8391" fg:w="13"/><text x="58.0831%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (2 samples, 0.01%)</title><rect x="57.9227%" y="341" width="0.0138%" height="15" fill="rgb(226,116,26)" fg:x="8404" fg:w="2"/><text x="58.1727%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.05%)</title><rect x="57.9365%" y="341" width="0.0482%" height="15" fill="rgb(244,5,17)" fg:x="8406" fg:w="7"/><text x="58.1865%" y="351.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.01%)</title><rect x="57.9916%" y="341" width="0.0138%" height="15" fill="rgb(252,159,33)" fg:x="8414" fg:w="2"/><text x="58.2416%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.05%)</title><rect x="58.0054%" y="341" width="0.0482%" height="15" fill="rgb(206,71,0)" fg:x="8416" fg:w="7"/><text x="58.2554%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (5 samples, 0.03%)</title><rect x="58.0536%" y="341" width="0.0345%" height="15" fill="rgb(233,118,54)" fg:x="8423" fg:w="5"/><text x="58.3036%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (7 samples, 0.05%)</title><rect x="58.0881%" y="341" width="0.0482%" height="15" fill="rgb(234,83,48)" fg:x="8428" fg:w="7"/><text x="58.3381%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (6 samples, 0.04%)</title><rect x="58.1363%" y="341" width="0.0414%" height="15" fill="rgb(228,3,54)" fg:x="8435" fg:w="6"/><text x="58.3863%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (6 samples, 0.04%)</title><rect x="58.1777%" y="341" width="0.0414%" height="15" fill="rgb(226,155,13)" fg:x="8441" fg:w="6"/><text x="58.4277%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (8 samples, 0.06%)</title><rect x="58.2190%" y="341" width="0.0551%" height="15" fill="rgb(241,28,37)" fg:x="8447" fg:w="8"/><text x="58.4690%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (9 samples, 0.06%)</title><rect x="58.2742%" y="341" width="0.0620%" height="15" fill="rgb(233,93,10)" fg:x="8455" fg:w="9"/><text x="58.5242%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (5,379 samples, 37.07%)</title><rect x="21.2696%" y="357" width="37.0735%" height="15" fill="rgb(225,113,19)" fg:x="3086" fg:w="5379"/><text x="21.5196%" y="367.50">CoreFoundation`__CFRunLoopDoTimers</text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (6 samples, 0.04%)</title><rect x="58.3569%" y="341" width="0.0414%" height="15" fill="rgb(241,2,18)" fg:x="8467" fg:w="6"/><text x="58.6069%" y="351.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (18 samples, 0.12%)</title><rect x="58.4120%" y="325" width="0.1241%" height="15" fill="rgb(228,207,21)" fg:x="8475" fg:w="18"/><text x="58.6620%" y="335.50"></text></g><g><title>CoreFoundation`CFHash (4 samples, 0.03%)</title><rect x="58.5085%" y="309" width="0.0276%" height="15" fill="rgb(213,211,35)" fg:x="8489" fg:w="4"/><text x="58.7585%" y="319.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (29 samples, 0.20%)</title><rect x="58.3982%" y="341" width="0.1999%" height="15" fill="rgb(209,83,10)" fg:x="8473" fg:w="29"/><text x="58.6482%" y="351.50"></text></g><g><title>CoreFoundation`__CFStringHash (9 samples, 0.06%)</title><rect x="58.5361%" y="325" width="0.0620%" height="15" fill="rgb(209,164,1)" fg:x="8493" fg:w="9"/><text x="58.7861%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (38 samples, 0.26%)</title><rect x="58.3431%" y="357" width="0.2619%" height="15" fill="rgb(213,184,43)" fg:x="8465" fg:w="38"/><text x="58.5931%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (2 samples, 0.01%)</title><rect x="58.6050%" y="357" width="0.0138%" height="15" fill="rgb(231,61,34)" fg:x="8503" fg:w="2"/><text x="58.8550%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_internal (4 samples, 0.03%)</title><rect x="58.8187%" y="309" width="0.0276%" height="15" fill="rgb(235,75,3)" fg:x="8534" fg:w="4"/><text x="59.0687%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3,894 samples, 26.84%)</title><rect x="58.7153%" y="341" width="26.8385%" height="15" fill="rgb(220,106,47)" fg:x="8519" fg:w="3894"/><text x="58.9653%" y="351.50">libsystem_kernel.dylib`mach_msg</text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3,889 samples, 26.80%)</title><rect x="58.7497%" y="325" width="26.8041%" height="15" fill="rgb(210,196,33)" fg:x="8524" fg:w="3889"/><text x="58.9997%" y="335.50">libsystem_kernel.dylib`mach_msg_overwrite</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3,875 samples, 26.71%)</title><rect x="58.8462%" y="309" width="26.7076%" height="15" fill="rgb(229,154,42)" fg:x="8538" fg:w="3875"/><text x="59.0962%" y="319.50">libsystem_kernel.dylib`mach_msg2_trap</text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (3,912 samples, 26.96%)</title><rect x="58.6188%" y="357" width="26.9626%" height="15" fill="rgb(228,114,26)" fg:x="8505" fg:w="3912"/><text x="58.8688%" y="367.50">CoreFoundation`__CFRunLoopServiceMachPort</text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.03%)</title><rect x="85.5538%" y="341" width="0.0276%" height="15" fill="rgb(208,144,1)" fg:x="12413" fg:w="4"/><text x="85.8038%" y="351.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (4 samples, 0.03%)</title><rect x="85.5814%" y="357" width="0.0276%" height="15" fill="rgb(239,112,37)" fg:x="12417" fg:w="4"/><text x="85.8314%" y="367.50"></text></g><g><title>CoreFoundation`__cftrace_runloop_trace_iteration_start (4 samples, 0.03%)</title><rect x="85.6089%" y="357" width="0.0276%" height="15" fill="rgb(210,96,50)" fg:x="12421" fg:w="4"/><text x="85.8589%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="85.6227%" y="341" width="0.0138%" height="15" fill="rgb(222,178,2)" fg:x="12423" fg:w="2"/><text x="85.8727%" y="351.50"></text></g><g><title>CoreFoundation`objc_msgSend$count (6 samples, 0.04%)</title><rect x="85.6434%" y="357" width="0.0414%" height="15" fill="rgb(226,74,18)" fg:x="12426" fg:w="6"/><text x="85.8934%" y="367.50"></text></g><g><title>CoreFoundation`objc_msgSend$initWithCapacity: (5 samples, 0.03%)</title><rect x="85.6847%" y="357" width="0.0345%" height="15" fill="rgb(225,67,54)" fg:x="12432" fg:w="5"/><text x="85.9347%" y="367.50"></text></g><g><title>CoreFoundation`objc_msgSend$insertObject:atIndex: (2 samples, 0.01%)</title><rect x="85.7192%" y="357" width="0.0138%" height="15" fill="rgb(251,92,32)" fg:x="12437" fg:w="2"/><text x="85.9692%" y="367.50"></text></g><g><title>CoreFoundation`objc_msgSend$objectAtIndex: (21 samples, 0.14%)</title><rect x="85.7330%" y="357" width="0.1447%" height="15" fill="rgb(228,149,22)" fg:x="12439" fg:w="21"/><text x="85.9830%" y="367.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (2 samples, 0.01%)</title><rect x="85.8777%" y="357" width="0.0138%" height="15" fill="rgb(243,54,13)" fg:x="12460" fg:w="2"/><text x="86.1277%" y="367.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (6 samples, 0.04%)</title><rect x="85.8915%" y="357" width="0.0414%" height="15" fill="rgb(243,180,28)" fg:x="12462" fg:w="6"/><text x="86.1415%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (43 samples, 0.30%)</title><rect x="85.9329%" y="357" width="0.2964%" height="15" fill="rgb(208,167,24)" fg:x="12468" fg:w="43"/><text x="86.1829%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_release (5 samples, 0.03%)</title><rect x="86.2292%" y="357" width="0.0345%" height="15" fill="rgb(245,73,45)" fg:x="12511" fg:w="5"/><text x="86.4792%" y="367.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (2 samples, 0.01%)</title><rect x="86.2706%" y="357" width="0.0138%" height="15" fill="rgb(237,203,48)" fg:x="12517" fg:w="2"/><text x="86.5206%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (691 samples, 4.76%)</title><rect x="86.2844%" y="357" width="4.7626%" height="15" fill="rgb(211,197,16)" fg:x="12519" fg:w="691"/><text x="86.5344%" y="367.50">libsys..</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (366 samples, 2.52%)</title><rect x="91.0469%" y="357" width="2.5226%" height="15" fill="rgb(243,99,51)" fg:x="13210" fg:w="366"/><text x="91.2969%" y="367.50">li..</text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (2 samples, 0.01%)</title><rect x="93.5695%" y="357" width="0.0138%" height="15" fill="rgb(215,123,29)" fg:x="13576" fg:w="2"/><text x="93.8195%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (20 samples, 0.14%)</title><rect x="93.5833%" y="357" width="0.1378%" height="15" fill="rgb(239,186,37)" fg:x="13578" fg:w="20"/><text x="93.8333%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_adopt (5 samples, 0.03%)</title><rect x="93.7280%" y="357" width="0.0345%" height="15" fill="rgb(252,136,39)" fg:x="13599" fg:w="5"/><text x="93.9780%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (7 samples, 0.05%)</title><rect x="93.7625%" y="357" width="0.0482%" height="15" fill="rgb(223,213,32)" fg:x="13604" fg:w="7"/><text x="94.0125%" y="367.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.01%)</title><rect x="93.8107%" y="357" width="0.0138%" height="15" fill="rgb(233,115,5)" fg:x="13611" fg:w="2"/><text x="94.0607%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.03%)</title><rect x="93.8245%" y="357" width="0.0276%" height="15" fill="rgb(207,226,44)" fg:x="13613" fg:w="4"/><text x="94.0745%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (13 samples, 0.09%)</title><rect x="93.8521%" y="357" width="0.0896%" height="15" fill="rgb(208,126,0)" fg:x="13617" fg:w="13"/><text x="94.1021%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (27 samples, 0.19%)</title><rect x="93.9417%" y="357" width="0.1861%" height="15" fill="rgb(244,66,21)" fg:x="13630" fg:w="27"/><text x="94.1917%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.01%)</title><rect x="94.1140%" y="341" width="0.0138%" height="15" fill="rgb(222,97,12)" fg:x="13655" fg:w="2"/><text x="94.3640%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.06%)</title><rect x="94.1278%" y="357" width="0.0620%" height="15" fill="rgb(219,213,19)" fg:x="13657" fg:w="9"/><text x="94.3778%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (17 samples, 0.12%)</title><rect x="94.1898%" y="357" width="0.1172%" height="15" fill="rgb(252,169,30)" fg:x="13666" fg:w="17"/><text x="94.4398%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (10 samples, 0.07%)</title><rect x="94.3070%" y="357" width="0.0689%" height="15" fill="rgb(206,32,51)" fg:x="13683" fg:w="10"/><text x="94.5570%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.06%)</title><rect x="94.3759%" y="357" width="0.0620%" height="15" fill="rgb(250,172,42)" fg:x="13693" fg:w="9"/><text x="94.6259%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (13,556 samples, 93.43%)</title><rect x="1.0132%" y="373" width="93.4317%" height="15" fill="rgb(209,34,43)" fg:x="147" fg:w="13556"/><text x="1.2632%" y="383.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (3 samples, 0.02%)</title><rect x="94.4448%" y="373" width="0.0207%" height="15" fill="rgb(223,11,35)" fg:x="13703" fg:w="3"/><text x="94.6948%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_retain_x28 (2 samples, 0.01%)</title><rect x="94.4724%" y="373" width="0.0138%" height="15" fill="rgb(251,219,26)" fg:x="13707" fg:w="2"/><text x="94.7224%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (8 samples, 0.06%)</title><rect x="94.4862%" y="373" width="0.0551%" height="15" fill="rgb(231,119,3)" fg:x="13709" fg:w="8"/><text x="94.7362%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (55 samples, 0.38%)</title><rect x="94.5413%" y="373" width="0.3791%" height="15" fill="rgb(216,97,11)" fg:x="13717" fg:w="55"/><text x="94.7913%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (2 samples, 0.01%)</title><rect x="94.9273%" y="373" width="0.0138%" height="15" fill="rgb(223,59,9)" fg:x="13773" fg:w="2"/><text x="95.1773%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.04%)</title><rect x="94.9480%" y="373" width="0.0414%" height="15" fill="rgb(233,93,31)" fg:x="13776" fg:w="6"/><text x="95.1980%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (7 samples, 0.05%)</title><rect x="94.9893%" y="373" width="0.0482%" height="15" fill="rgb(239,81,33)" fg:x="13782" fg:w="7"/><text x="95.2393%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (2 samples, 0.01%)</title><rect x="95.0376%" y="373" width="0.0138%" height="15" fill="rgb(213,120,34)" fg:x="13789" fg:w="2"/><text x="95.2876%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (13,698 samples, 94.41%)</title><rect x="0.6548%" y="389" width="94.4104%" height="15" fill="rgb(243,49,53)" fg:x="95" fg:w="13698"/><text x="0.9048%" y="399.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.01%)</title><rect x="95.0513%" y="373" width="0.0138%" height="15" fill="rgb(247,216,33)" fg:x="13791" fg:w="2"/><text x="95.3013%" y="383.50"></text></g><g><title>HIToolbox`GetDataFromUCHRForEvent (2 samples, 0.01%)</title><rect x="95.1065%" y="245" width="0.0138%" height="15" fill="rgb(226,26,14)" fg:x="13799" fg:w="2"/><text x="95.3565%" y="255.50"></text></g><g><title>HIToolbox`ConvertEventUniCharsToCharCodes (2 samples, 0.01%)</title><rect x="95.1065%" y="229" width="0.0138%" height="15" fill="rgb(215,49,53)" fg:x="13799" fg:w="2"/><text x="95.3565%" y="239.50"></text></g><g><title>HIToolbox`GetCharCodesFromUnicode (2 samples, 0.01%)</title><rect x="95.1065%" y="213" width="0.0138%" height="15" fill="rgb(245,162,40)" fg:x="13799" fg:w="2"/><text x="95.3565%" y="223.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (8 samples, 0.06%)</title><rect x="95.0858%" y="341" width="0.0551%" height="15" fill="rgb(229,68,17)" fg:x="13796" fg:w="8"/><text x="95.3358%" y="351.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (7 samples, 0.05%)</title><rect x="95.0927%" y="325" width="0.0482%" height="15" fill="rgb(213,182,10)" fg:x="13797" fg:w="7"/><text x="95.3427%" y="335.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (7 samples, 0.05%)</title><rect x="95.0927%" y="309" width="0.0482%" height="15" fill="rgb(245,125,30)" fg:x="13797" fg:w="7"/><text x="95.3427%" y="319.50"></text></g><g><title>HIToolbox`KeyEventPostedObserver (7 samples, 0.05%)</title><rect x="95.0927%" y="293" width="0.0482%" height="15" fill="rgb(232,202,2)" fg:x="13797" fg:w="7"/><text x="95.3427%" y="303.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyCode (7 samples, 0.05%)</title><rect x="95.0927%" y="277" width="0.0482%" height="15" fill="rgb(237,140,51)" fg:x="13797" fg:w="7"/><text x="95.3427%" y="287.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (5 samples, 0.03%)</title><rect x="95.1065%" y="261" width="0.0345%" height="15" fill="rgb(236,157,25)" fg:x="13799" fg:w="5"/><text x="95.3565%" y="271.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (3 samples, 0.02%)</title><rect x="95.1203%" y="245" width="0.0207%" height="15" fill="rgb(219,209,0)" fg:x="13801" fg:w="3"/><text x="95.3703%" y="255.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (3 samples, 0.02%)</title><rect x="95.1203%" y="229" width="0.0207%" height="15" fill="rgb(240,116,54)" fg:x="13801" fg:w="3"/><text x="95.3703%" y="239.50"></text></g><g><title>HIToolbox`islPopulateInputSourceProperty (2 samples, 0.01%)</title><rect x="95.1272%" y="213" width="0.0138%" height="15" fill="rgb(216,10,36)" fg:x="13802" fg:w="2"/><text x="95.3772%" y="223.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (13,710 samples, 94.49%)</title><rect x="0.6548%" y="405" width="94.4931%" height="15" fill="rgb(222,72,44)" fg:x="95" fg:w="13710"/><text x="0.9048%" y="415.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (11 samples, 0.08%)</title><rect x="95.0720%" y="389" width="0.0758%" height="15" fill="rgb(232,159,9)" fg:x="13794" fg:w="11"/><text x="95.3220%" y="399.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (10 samples, 0.07%)</title><rect x="95.0789%" y="373" width="0.0689%" height="15" fill="rgb(210,39,32)" fg:x="13795" fg:w="10"/><text x="95.3289%" y="383.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (10 samples, 0.07%)</title><rect x="95.0789%" y="357" width="0.0689%" height="15" fill="rgb(216,194,45)" fg:x="13795" fg:w="10"/><text x="95.3289%" y="367.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (5 samples, 0.03%)</title><rect x="95.1478%" y="373" width="0.0345%" height="15" fill="rgb(218,18,35)" fg:x="13805" fg:w="5"/><text x="95.3978%" y="383.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (5 samples, 0.03%)</title><rect x="95.1478%" y="357" width="0.0345%" height="15" fill="rgb(207,83,51)" fg:x="13805" fg:w="5"/><text x="95.3978%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (5 samples, 0.03%)</title><rect x="95.1478%" y="341" width="0.0345%" height="15" fill="rgb(225,63,43)" fg:x="13805" fg:w="5"/><text x="95.3978%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.03%)</title><rect x="95.1478%" y="325" width="0.0345%" height="15" fill="rgb(207,57,36)" fg:x="13805" fg:w="5"/><text x="95.3978%" y="335.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.05%)</title><rect x="95.1478%" y="389" width="0.0482%" height="15" fill="rgb(216,99,33)" fg:x="13805" fg:w="7"/><text x="95.3978%" y="399.50"></text></g><g><title>libdispatch.dylib`-[OS_voucher dealloc] (2 samples, 0.01%)</title><rect x="95.1823%" y="373" width="0.0138%" height="15" fill="rgb(225,42,16)" fg:x="13810" fg:w="2"/><text x="95.4323%" y="383.50"></text></g><g><title>libdispatch.dylib`_voucher_dispose (2 samples, 0.01%)</title><rect x="95.1823%" y="357" width="0.0138%" height="15" fill="rgb(220,201,45)" fg:x="13810" fg:w="2"/><text x="95.4323%" y="367.50"></text></g><g><title>libdispatch.dylib`_voucher_dealloc_mach_voucher (2 samples, 0.01%)</title><rect x="95.1823%" y="341" width="0.0138%" height="15" fill="rgb(225,33,4)" fg:x="13810" fg:w="2"/><text x="95.4323%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_deallocate_trap (2 samples, 0.01%)</title><rect x="95.1823%" y="325" width="0.0138%" height="15" fill="rgb(224,33,50)" fg:x="13810" fg:w="2"/><text x="95.4323%" y="335.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (13,724 samples, 94.59%)</title><rect x="0.6134%" y="421" width="94.5896%" height="15" fill="rgb(246,198,51)" fg:x="89" fg:w="13724"/><text x="0.8634%" y="431.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`_DropPendingBoost (8 samples, 0.06%)</title><rect x="95.1478%" y="405" width="0.0551%" height="15" fill="rgb(205,22,4)" fg:x="13805" fg:w="8"/><text x="95.3978%" y="415.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (13,743 samples, 94.72%)</title><rect x="0.4894%" y="469" width="94.7205%" height="15" fill="rgb(206,3,8)" fg:x="71" fg:w="13743"/><text x="0.7394%" y="479.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`_DPSNextEvent (13,727 samples, 94.61%)</title><rect x="0.5996%" y="453" width="94.6102%" height="15" fill="rgb(251,23,15)" fg:x="87" fg:w="13727"/><text x="0.8496%" y="463.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (13,725 samples, 94.60%)</title><rect x="0.6134%" y="437" width="94.5965%" height="15" fill="rgb(252,88,28)" fg:x="89" fg:w="13725"/><text x="0.8634%" y="447.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>dyld`start (13,815 samples, 95.22%)</title><rect x="0.0000%" y="629" width="95.2168%" height="15" fill="rgb(212,127,14)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="639.50">dyld`start</text></g><g><title>minecraft`main (13,815 samples, 95.22%)</title><rect x="0.0000%" y="613" width="95.2168%" height="15" fill="rgb(247,145,37)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="623.50">minecraft`main</text></g><g><title>minecraft`std::rt::lang_start_internal (13,815 samples, 95.22%)</title><rect x="0.0000%" y="597" width="95.2168%" height="15" fill="rgb(209,117,53)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="607.50">minecraft`std::rt::lang_start_internal</text></g><g><title>minecraft`std::rt::lang_start::_{{closure}} (13,815 samples, 95.22%)</title><rect x="0.0000%" y="581" width="95.2168%" height="15" fill="rgb(212,90,42)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="591.50">minecraft`std::rt::lang_start::_{{closure}}</text></g><g><title>minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace (13,815 samples, 95.22%)</title><rect x="0.0000%" y="565" width="95.2168%" height="15" fill="rgb(218,164,37)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="575.50">minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>minecraft`minecraft::main (13,815 samples, 95.22%)</title><rect x="0.0000%" y="549" width="95.2168%" height="15" fill="rgb(246,65,34)" fg:x="0" fg:w="13815"/><text x="0.2500%" y="559.50">minecraft`minecraft::main</text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size (13,786 samples, 95.02%)</title><rect x="0.1999%" y="533" width="95.0169%" height="15" fill="rgb(231,100,33)" fg:x="29" fg:w="13786"/><text x="0.4499%" y="543.50">minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size</text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (13,786 samples, 95.02%)</title><rect x="0.1999%" y="517" width="95.0169%" height="15" fill="rgb(228,126,14)" fg:x="29" fg:w="13786"/><text x="0.4499%" y="527.50">minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (13,786 samples, 95.02%)</title><rect x="0.1999%" y="501" width="95.0169%" height="15" fill="rgb(215,173,21)" fg:x="29" fg:w="13786"/><text x="0.4499%" y="511.50">minecraft`objc::rc::autorelease::autoreleasepool</text></g><g><title>AppKit`-[NSApplication run] (13,785 samples, 95.01%)</title><rect x="0.2068%" y="485" width="95.0100%" height="15" fill="rgb(210,6,40)" fg:x="30" fg:w="13785"/><text x="0.4568%" y="495.50">AppKit`-[NSApplication run]</text></g><g><title>libsystem_kernel.dylib`__exit (3 samples, 0.02%)</title><rect x="95.2168%" y="629" width="0.0207%" height="15" fill="rgb(212,48,18)" fg:x="13815" fg:w="3"/><text x="95.4668%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (50 samples, 0.34%)</title><rect x="95.2926%" y="613" width="0.3446%" height="15" fill="rgb(230,214,11)" fg:x="13826" fg:w="50"/><text x="95.5426%" y="623.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.01%)</title><rect x="95.6579%" y="517" width="0.0138%" height="15" fill="rgb(254,105,39)" fg:x="13879" fg:w="2"/><text x="95.9079%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.01%)</title><rect x="95.6579%" y="501" width="0.0138%" height="15" fill="rgb(245,158,5)" fg:x="13879" fg:w="2"/><text x="95.9079%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (3 samples, 0.02%)</title><rect x="95.6579%" y="581" width="0.0207%" height="15" fill="rgb(249,208,11)" fg:x="13879" fg:w="3"/><text x="95.9079%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (3 samples, 0.02%)</title><rect x="95.6579%" y="565" width="0.0207%" height="15" fill="rgb(210,39,28)" fg:x="13879" fg:w="3"/><text x="95.9079%" y="575.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (3 samples, 0.02%)</title><rect x="95.6579%" y="549" width="0.0207%" height="15" fill="rgb(211,56,53)" fg:x="13879" fg:w="3"/><text x="95.9079%" y="559.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (3 samples, 0.02%)</title><rect x="95.6579%" y="533" width="0.0207%" height="15" fill="rgb(226,201,30)" fg:x="13879" fg:w="3"/><text x="95.9079%" y="543.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (2 samples, 0.01%)</title><rect x="95.6785%" y="533" width="0.0138%" height="15" fill="rgb(239,101,34)" fg:x="13882" fg:w="2"/><text x="95.9285%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.03%)</title><rect x="95.6785%" y="549" width="0.0276%" height="15" fill="rgb(226,209,5)" fg:x="13882" fg:w="4"/><text x="95.9285%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (2 samples, 0.01%)</title><rect x="95.6923%" y="533" width="0.0138%" height="15" fill="rgb(250,105,47)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="543.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.13 (2 samples, 0.01%)</title><rect x="95.6923%" y="517" width="0.0138%" height="15" fill="rgb(230,72,3)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="527.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (2 samples, 0.01%)</title><rect x="95.6923%" y="501" width="0.0138%" height="15" fill="rgb(232,218,39)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="511.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (2 samples, 0.01%)</title><rect x="95.6923%" y="485" width="0.0138%" height="15" fill="rgb(248,166,6)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="495.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (2 samples, 0.01%)</title><rect x="95.6923%" y="469" width="0.0138%" height="15" fill="rgb(247,89,20)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.01%)</title><rect x="95.6923%" y="453" width="0.0138%" height="15" fill="rgb(248,130,54)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.01%)</title><rect x="95.6923%" y="437" width="0.0138%" height="15" fill="rgb(234,196,4)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="447.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (2 samples, 0.01%)</title><rect x="95.6923%" y="421" width="0.0138%" height="15" fill="rgb(250,143,31)" fg:x="13884" fg:w="2"/><text x="95.9423%" y="431.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (2 samples, 0.01%)</title><rect x="95.7268%" y="469" width="0.0138%" height="15" fill="rgb(211,110,34)" fg:x="13889" fg:w="2"/><text x="95.9768%" y="479.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable presentWithOptions:] (2 samples, 0.01%)</title><rect x="95.7544%" y="373" width="0.0138%" height="15" fill="rgb(215,124,48)" fg:x="13893" fg:w="2"/><text x="96.0044%" y="383.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (2 samples, 0.01%)</title><rect x="95.7750%" y="341" width="0.0138%" height="15" fill="rgb(216,46,13)" fg:x="13896" fg:w="2"/><text x="96.0250%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (2 samples, 0.01%)</title><rect x="95.7750%" y="325" width="0.0138%" height="15" fill="rgb(205,184,25)" fg:x="13896" fg:w="2"/><text x="96.0250%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.01%)</title><rect x="95.7750%" y="309" width="0.0138%" height="15" fill="rgb(228,1,10)" fg:x="13896" fg:w="2"/><text x="96.0250%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.01%)</title><rect x="95.7750%" y="293" width="0.0138%" height="15" fill="rgb(213,116,27)" fg:x="13896" fg:w="2"/><text x="96.0250%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="95.7750%" y="277" width="0.0138%" height="15" fill="rgb(241,95,50)" fg:x="13896" fg:w="2"/><text x="96.0250%" y="287.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (4 samples, 0.03%)</title><rect x="95.7681%" y="373" width="0.0276%" height="15" fill="rgb(238,48,32)" fg:x="13895" fg:w="4"/><text x="96.0181%" y="383.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (4 samples, 0.03%)</title><rect x="95.7681%" y="357" width="0.0276%" height="15" fill="rgb(235,113,49)" fg:x="13895" fg:w="4"/><text x="96.0181%" y="367.50"></text></g><g><title>Metal`MTLDispatchListApply (7 samples, 0.05%)</title><rect x="95.7544%" y="405" width="0.0482%" height="15" fill="rgb(205,127,43)" fg:x="13893" fg:w="7"/><text x="96.0044%" y="415.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (7 samples, 0.05%)</title><rect x="95.7544%" y="389" width="0.0482%" height="15" fill="rgb(250,162,2)" fg:x="13893" fg:w="7"/><text x="96.0044%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (8 samples, 0.06%)</title><rect x="95.7544%" y="421" width="0.0551%" height="15" fill="rgb(220,13,41)" fg:x="13893" fg:w="8"/><text x="96.0044%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (3 samples, 0.02%)</title><rect x="95.8164%" y="389" width="0.0207%" height="15" fill="rgb(249,221,25)" fg:x="13902" fg:w="3"/><text x="96.0664%" y="399.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (3 samples, 0.02%)</title><rect x="95.8164%" y="373" width="0.0207%" height="15" fill="rgb(215,208,19)" fg:x="13902" fg:w="3"/><text x="96.0664%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.02%)</title><rect x="95.8164%" y="357" width="0.0207%" height="15" fill="rgb(236,175,2)" fg:x="13902" fg:w="3"/><text x="96.0664%" y="367.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (5 samples, 0.03%)</title><rect x="95.8164%" y="405" width="0.0345%" height="15" fill="rgb(241,52,2)" fg:x="13902" fg:w="5"/><text x="96.0664%" y="415.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (7 samples, 0.05%)</title><rect x="95.8095%" y="421" width="0.0482%" height="15" fill="rgb(248,140,14)" fg:x="13901" fg:w="7"/><text x="96.0595%" y="431.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (18 samples, 0.12%)</title><rect x="95.7475%" y="437" width="0.1241%" height="15" fill="rgb(253,22,42)" fg:x="13892" fg:w="18"/><text x="95.9975%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (2 samples, 0.01%)</title><rect x="95.8577%" y="421" width="0.0138%" height="15" fill="rgb(234,61,47)" fg:x="13908" fg:w="2"/><text x="96.1077%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (22 samples, 0.15%)</title><rect x="95.7406%" y="469" width="0.1516%" height="15" fill="rgb(208,226,15)" fg:x="13891" fg:w="22"/><text x="95.9906%" y="479.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (22 samples, 0.15%)</title><rect x="95.7406%" y="453" width="0.1516%" height="15" fill="rgb(217,221,4)" fg:x="13891" fg:w="22"/><text x="95.9906%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (28 samples, 0.19%)</title><rect x="95.7061%" y="549" width="0.1930%" height="15" fill="rgb(212,174,34)" fg:x="13886" fg:w="28"/><text x="95.9561%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (27 samples, 0.19%)</title><rect x="95.7130%" y="533" width="0.1861%" height="15" fill="rgb(253,83,4)" fg:x="13887" fg:w="27"/><text x="95.9630%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (27 samples, 0.19%)</title><rect x="95.7130%" y="517" width="0.1861%" height="15" fill="rgb(250,195,49)" fg:x="13887" fg:w="27"/><text x="95.9630%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (25 samples, 0.17%)</title><rect x="95.7268%" y="501" width="0.1723%" height="15" fill="rgb(241,192,25)" fg:x="13889" fg:w="25"/><text x="95.9768%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (25 samples, 0.17%)</title><rect x="95.7268%" y="485" width="0.1723%" height="15" fill="rgb(208,124,10)" fg:x="13889" fg:w="25"/><text x="95.9768%" y="495.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (479 samples, 3.30%)</title><rect x="95.9198%" y="501" width="3.3014%" height="15" fill="rgb(222,33,0)" fg:x="13917" fg:w="479"/><text x="96.1698%" y="511.50">Met..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (478 samples, 3.29%)</title><rect x="95.9267%" y="485" width="3.2945%" height="15" fill="rgb(234,209,28)" fg:x="13918" fg:w="478"/><text x="96.1767%" y="495.50">IOG..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (478 samples, 3.29%)</title><rect x="95.9267%" y="469" width="3.2945%" height="15" fill="rgb(224,11,23)" fg:x="13918" fg:w="478"/><text x="96.1767%" y="479.50">IOG..</text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (477 samples, 3.29%)</title><rect x="95.9336%" y="453" width="3.2876%" height="15" fill="rgb(232,99,1)" fg:x="13919" fg:w="477"/><text x="96.1836%" y="463.50">IOG..</text></g><g><title>IOKit`IOConnectCallMethod (477 samples, 3.29%)</title><rect x="95.9336%" y="437" width="3.2876%" height="15" fill="rgb(237,95,45)" fg:x="13919" fg:w="477"/><text x="96.1836%" y="447.50">IOK..</text></g><g><title>IOKit`io_connect_method (477 samples, 3.29%)</title><rect x="95.9336%" y="421" width="3.2876%" height="15" fill="rgb(208,109,11)" fg:x="13919" fg:w="477"/><text x="96.1836%" y="431.50">IOK..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (477 samples, 3.29%)</title><rect x="95.9336%" y="405" width="3.2876%" height="15" fill="rgb(216,190,48)" fg:x="13919" fg:w="477"/><text x="96.1836%" y="415.50">lib..</text></g><g><title>QuartzCore`_XImageQueueDidPresent (2 samples, 0.01%)</title><rect x="99.2487%" y="485" width="0.0138%" height="15" fill="rgb(251,171,36)" fg:x="14400" fg:w="2"/><text x="99.4987%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.01%)</title><rect x="99.2487%" y="469" width="0.0138%" height="15" fill="rgb(230,62,22)" fg:x="14400" fg:w="2"/><text x="99.4987%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (2 samples, 0.01%)</title><rect x="99.2487%" y="453" width="0.0138%" height="15" fill="rgb(225,114,35)" fg:x="14400" fg:w="2"/><text x="99.4987%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.01%)</title><rect x="99.2694%" y="485" width="0.0138%" height="15" fill="rgb(215,118,42)" fg:x="14403" fg:w="2"/><text x="99.5194%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.01%)</title><rect x="99.2694%" y="469" width="0.0138%" height="15" fill="rgb(243,119,21)" fg:x="14403" fg:w="2"/><text x="99.5194%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.01%)</title><rect x="99.2694%" y="453" width="0.0138%" height="15" fill="rgb(252,177,53)" fg:x="14403" fg:w="2"/><text x="99.5194%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (524 samples, 3.61%)</title><rect x="95.6785%" y="565" width="3.6116%" height="15" fill="rgb(237,209,29)" fg:x="13882" fg:w="524"/><text x="95.9285%" y="575.50">libd..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (491 samples, 3.38%)</title><rect x="95.9060%" y="549" width="3.3841%" height="15" fill="rgb(212,65,23)" fg:x="13915" fg:w="491"/><text x="96.1560%" y="559.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (491 samples, 3.38%)</title><rect x="95.9060%" y="533" width="3.3841%" height="15" fill="rgb(230,222,46)" fg:x="13915" fg:w="491"/><text x="96.1560%" y="543.50">lib..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (490 samples, 3.38%)</title><rect x="95.9129%" y="517" width="3.3772%" height="15" fill="rgb(215,135,32)" fg:x="13916" fg:w="490"/><text x="96.1629%" y="527.50">lib..</text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (9 samples, 0.06%)</title><rect x="99.2281%" y="501" width="0.0620%" height="15" fill="rgb(246,101,22)" fg:x="14397" fg:w="9"/><text x="99.4781%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (591 samples, 4.07%)</title><rect x="95.2374%" y="629" width="4.0733%" height="15" fill="rgb(206,107,13)" fg:x="13818" fg:w="591"/><text x="95.4874%" y="639.50">libs..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (533 samples, 3.67%)</title><rect x="95.6372%" y="613" width="3.6736%" height="15" fill="rgb(250,100,44)" fg:x="13876" fg:w="533"/><text x="95.8872%" y="623.50">libs..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (531 samples, 3.66%)</title><rect x="95.6510%" y="597" width="3.6598%" height="15" fill="rgb(231,147,38)" fg:x="13878" fg:w="531"/><text x="95.9010%" y="607.50">libd..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (527 samples, 3.63%)</title><rect x="95.6785%" y="581" width="3.6322%" height="15" fill="rgb(229,8,40)" fg:x="13882" fg:w="527"/><text x="95.9285%" y="591.50">libd..</text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (3 samples, 0.02%)</title><rect x="99.2901%" y="565" width="0.0207%" height="15" fill="rgb(221,135,30)" fg:x="14406" fg:w="3"/><text x="99.5401%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (14 samples, 0.10%)</title><rect x="99.3246%" y="437" width="0.0965%" height="15" fill="rgb(249,193,18)" fg:x="14411" fg:w="14"/><text x="99.5746%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.10%)</title><rect x="99.3246%" y="453" width="0.1034%" height="15" fill="rgb(209,133,39)" fg:x="14411" fg:w="15"/><text x="99.5746%" y="463.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (18 samples, 0.12%)</title><rect x="99.3177%" y="469" width="0.1241%" height="15" fill="rgb(232,100,14)" fg:x="14410" fg:w="18"/><text x="99.5677%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.01%)</title><rect x="99.4279%" y="453" width="0.0138%" height="15" fill="rgb(224,185,1)" fg:x="14426" fg:w="2"/><text x="99.6779%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.01%)</title><rect x="99.4279%" y="437" width="0.0138%" height="15" fill="rgb(223,139,8)" fg:x="14426" fg:w="2"/><text x="99.6779%" y="447.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (2 samples, 0.01%)</title><rect x="99.4417%" y="469" width="0.0138%" height="15" fill="rgb(232,213,38)" fg:x="14428" fg:w="2"/><text x="99.6917%" y="479.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (3 samples, 0.02%)</title><rect x="99.4555%" y="469" width="0.0207%" height="15" fill="rgb(207,94,22)" fg:x="14430" fg:w="3"/><text x="99.7055%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (2 samples, 0.01%)</title><rect x="99.4624%" y="453" width="0.0138%" height="15" fill="rgb(219,183,54)" fg:x="14431" fg:w="2"/><text x="99.7124%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (2 samples, 0.01%)</title><rect x="99.4624%" y="437" width="0.0138%" height="15" fill="rgb(216,185,54)" fg:x="14431" fg:w="2"/><text x="99.7124%" y="447.50"></text></g><g><title>libsystem_c.dylib`__dtoa (2 samples, 0.01%)</title><rect x="99.5106%" y="341" width="0.0138%" height="15" fill="rgb(254,217,39)" fg:x="14438" fg:w="2"/><text x="99.7606%" y="351.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (4 samples, 0.03%)</title><rect x="99.5038%" y="421" width="0.0276%" height="15" fill="rgb(240,178,23)" fg:x="14437" fg:w="4"/><text x="99.7538%" y="431.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (4 samples, 0.03%)</title><rect x="99.5038%" y="405" width="0.0276%" height="15" fill="rgb(218,11,47)" fg:x="14437" fg:w="4"/><text x="99.7538%" y="415.50"></text></g><g><title>libsystem_c.dylib`snprintf (4 samples, 0.03%)</title><rect x="99.5038%" y="389" width="0.0276%" height="15" fill="rgb(218,51,51)" fg:x="14437" fg:w="4"/><text x="99.7538%" y="399.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (4 samples, 0.03%)</title><rect x="99.5038%" y="373" width="0.0276%" height="15" fill="rgb(238,126,27)" fg:x="14437" fg:w="4"/><text x="99.7538%" y="383.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (4 samples, 0.03%)</title><rect x="99.5038%" y="357" width="0.0276%" height="15" fill="rgb(249,202,22)" fg:x="14437" fg:w="4"/><text x="99.7538%" y="367.50"></text></g><g><title>SkyLight`CGSEventLogEvent (6 samples, 0.04%)</title><rect x="99.4969%" y="437" width="0.0414%" height="15" fill="rgb(254,195,49)" fg:x="14436" fg:w="6"/><text x="99.7469%" y="447.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (9 samples, 0.06%)</title><rect x="99.5382%" y="421" width="0.0620%" height="15" fill="rgb(208,123,14)" fg:x="14442" fg:w="9"/><text x="99.7882%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (9 samples, 0.06%)</title><rect x="99.5382%" y="405" width="0.0620%" height="15" fill="rgb(224,200,8)" fg:x="14442" fg:w="9"/><text x="99.7882%" y="415.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (3 samples, 0.02%)</title><rect x="99.6278%" y="373" width="0.0207%" height="15" fill="rgb(217,61,36)" fg:x="14455" fg:w="3"/><text x="99.8778%" y="383.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (3 samples, 0.02%)</title><rect x="99.6278%" y="357" width="0.0207%" height="15" fill="rgb(206,35,45)" fg:x="14455" fg:w="3"/><text x="99.8778%" y="367.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (9 samples, 0.06%)</title><rect x="99.6002%" y="389" width="0.0620%" height="15" fill="rgb(217,65,33)" fg:x="14451" fg:w="9"/><text x="99.8502%" y="399.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (2 samples, 0.01%)</title><rect x="99.6485%" y="373" width="0.0138%" height="15" fill="rgb(222,158,48)" fg:x="14458" fg:w="2"/><text x="99.8985%" y="383.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (11 samples, 0.08%)</title><rect x="99.6002%" y="405" width="0.0758%" height="15" fill="rgb(254,2,54)" fg:x="14451" fg:w="11"/><text x="99.8502%" y="415.50"></text></g><g><title>SkyLight`handle_decoded_event(SLSEventRecord*, void*) (2 samples, 0.01%)</title><rect x="99.6623%" y="389" width="0.0138%" height="15" fill="rgb(250,143,38)" fg:x="14460" fg:w="2"/><text x="99.9123%" y="399.50"></text></g><g><title>SkyLight`CGSEventQueueEnqueueEvent (2 samples, 0.01%)</title><rect x="99.6623%" y="373" width="0.0138%" height="15" fill="rgb(248,25,0)" fg:x="14460" fg:w="2"/><text x="99.9123%" y="383.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (14 samples, 0.10%)</title><rect x="99.6002%" y="421" width="0.0965%" height="15" fill="rgb(206,152,27)" fg:x="14451" fg:w="14"/><text x="99.8502%" y="431.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (50 samples, 0.34%)</title><rect x="99.5382%" y="437" width="0.3446%" height="15" fill="rgb(240,77,30)" fg:x="14442" fg:w="50"/><text x="99.7882%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (27 samples, 0.19%)</title><rect x="99.6967%" y="421" width="0.1861%" height="15" fill="rgb(231,5,3)" fg:x="14465" fg:w="27"/><text x="99.9467%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (27 samples, 0.19%)</title><rect x="99.6967%" y="405" width="0.1861%" height="15" fill="rgb(207,226,32)" fg:x="14465" fg:w="27"/><text x="99.9467%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (27 samples, 0.19%)</title><rect x="99.6967%" y="389" width="0.1861%" height="15" fill="rgb(222,207,47)" fg:x="14465" fg:w="27"/><text x="99.9467%" y="399.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (83 samples, 0.57%)</title><rect x="99.3177%" y="485" width="0.5721%" height="15" fill="rgb(229,115,45)" fg:x="14410" fg:w="83"/><text x="99.5677%" y="495.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (59 samples, 0.41%)</title><rect x="99.4831%" y="469" width="0.4066%" height="15" fill="rgb(224,191,6)" fg:x="14434" fg:w="59"/><text x="99.7331%" y="479.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (59 samples, 0.41%)</title><rect x="99.4831%" y="453" width="0.4066%" height="15" fill="rgb(230,227,24)" fg:x="14434" fg:w="59"/><text x="99.7331%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (85 samples, 0.59%)</title><rect x="99.3108%" y="549" width="0.5858%" height="15" fill="rgb(228,80,19)" fg:x="14409" fg:w="85"/><text x="99.5608%" y="559.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (85 samples, 0.59%)</title><rect x="99.3108%" y="533" width="0.5858%" height="15" fill="rgb(247,229,0)" fg:x="14409" fg:w="85"/><text x="99.5608%" y="543.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (84 samples, 0.58%)</title><rect x="99.3177%" y="517" width="0.5790%" height="15" fill="rgb(237,194,15)" fg:x="14410" fg:w="84"/><text x="99.5677%" y="527.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (84 samples, 0.58%)</title><rect x="99.3177%" y="501" width="0.5790%" height="15" fill="rgb(219,203,20)" fg:x="14410" fg:w="84"/><text x="99.5677%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (11 samples, 0.08%)</title><rect x="99.8966%" y="549" width="0.0758%" height="15" fill="rgb(234,128,8)" fg:x="14494" fg:w="11"/><text x="100.1466%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (10 samples, 0.07%)</title><rect x="99.9035%" y="533" width="0.0689%" height="15" fill="rgb(248,202,8)" fg:x="14495" fg:w="10"/><text x="100.1535%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (10 samples, 0.07%)</title><rect x="99.9035%" y="517" width="0.0689%" height="15" fill="rgb(206,104,37)" fg:x="14495" fg:w="10"/><text x="100.1535%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (10 samples, 0.07%)</title><rect x="99.9035%" y="501" width="0.0689%" height="15" fill="rgb(223,8,27)" fg:x="14495" fg:w="10"/><text x="100.1535%" y="511.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (99 samples, 0.68%)</title><rect x="99.3108%" y="581" width="0.6823%" height="15" fill="rgb(216,217,28)" fg:x="14409" fg:w="99"/><text x="99.5608%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (99 samples, 0.68%)</title><rect x="99.3108%" y="565" width="0.6823%" height="15" fill="rgb(249,199,1)" fg:x="14409" fg:w="99"/><text x="99.5608%" y="575.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (3 samples, 0.02%)</title><rect x="99.9724%" y="549" width="0.0207%" height="15" fill="rgb(240,85,17)" fg:x="14505" fg:w="3"/><text x="100.2224%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (3 samples, 0.02%)</title><rect x="99.9724%" y="533" width="0.0207%" height="15" fill="rgb(206,108,45)" fg:x="14505" fg:w="3"/><text x="100.2224%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (3 samples, 0.02%)</title><rect x="99.9724%" y="517" width="0.0207%" height="15" fill="rgb(245,210,41)" fg:x="14505" fg:w="3"/><text x="100.2224%" y="527.50"></text></g><g><title>all (14,509 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(206,13,37)" fg:x="0" fg:w="14509"/><text x="0.2500%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (100 samples, 0.69%)</title><rect x="99.3108%" y="629" width="0.6892%" height="15" fill="rgb(250,61,18)" fg:x="14409" fg:w="100"/><text x="99.5608%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (100 samples, 0.69%)</title><rect x="99.3108%" y="613" width="0.6892%" height="15" fill="rgb(235,172,48)" fg:x="14409" fg:w="100"/><text x="99.5608%" y="623.50"></text></g><g><title>AppKit`_NSEventThread (100 samples, 0.69%)</title><rect x="99.3108%" y="597" width="0.6892%" height="15" fill="rgb(249,201,17)" fg:x="14409" fg:w="100"/><text x="99.5608%" y="607.50"></text></g></svg></svg>