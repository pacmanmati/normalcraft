<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="24963"><g><title>minecraft`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (5 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0200%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::instance_create_surface (3 samples, 0.01%)</title><rect x="0.0320%" y="501" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="3"/><text x="0.2820%" y="511.50"></text></g><g><title>minecraft`wgpu_core::instance::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::instance_create_surface (3 samples, 0.01%)</title><rect x="0.0320%" y="485" width="0.0120%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="3"/><text x="0.2820%" y="495.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Instance as wgpu_hal::Instance&lt;wgpu_hal::metal::Api&gt;&gt;::create_surface (3 samples, 0.01%)</title><rect x="0.0320%" y="469" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="3"/><text x="0.2820%" y="479.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::metal::Surface&gt;::from_view (3 samples, 0.01%)</title><rect x="0.0320%" y="453" width="0.0120%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="3"/><text x="0.2820%" y="463.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::metal::Surface&gt;::get_metal_layer (3 samples, 0.01%)</title><rect x="0.0320%" y="437" width="0.0120%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="3"/><text x="0.2820%" y="447.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (3 samples, 0.01%)</title><rect x="0.0320%" y="421" width="0.0120%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="3"/><text x="0.2820%" y="431.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (3 samples, 0.01%)</title><rect x="0.0320%" y="405" width="0.0120%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="3"/><text x="0.2820%" y="415.50"></text></g><g><title>Metal`MTLCopyAllDevices (3 samples, 0.01%)</title><rect x="0.0320%" y="389" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="3"/><text x="0.2820%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.01%)</title><rect x="0.0320%" y="373" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="3"/><text x="0.2820%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="0.0320%" y="357" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="3"/><text x="0.2820%" y="367.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (3 samples, 0.01%)</title><rect x="0.0320%" y="341" width="0.0120%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="3"/><text x="0.2820%" y="351.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::new (5 samples, 0.02%)</title><rect x="0.0320%" y="517" width="0.0200%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="5"/><text x="0.2820%" y="527.50"></text></g><g><title>minecraft`png::filter::filter (10 samples, 0.04%)</title><rect x="0.0561%" y="437" width="0.0401%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="10"/><text x="0.3061%" y="447.50"></text></g><g><title>minecraft`png::filter::filter_internal (3 samples, 0.01%)</title><rect x="0.0841%" y="421" width="0.0120%" height="15" fill="rgb(217,207,13)" fg:x="21" fg:w="3"/><text x="0.3341%" y="431.50"></text></g><g><title>minecraft`minecraft::text::Font::new (12 samples, 0.05%)</title><rect x="0.0521%" y="517" width="0.0481%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="12"/><text x="0.3021%" y="527.50"></text></g><g><title>minecraft`image::io::free_functions::save_buffer_with_format_impl (11 samples, 0.04%)</title><rect x="0.0561%" y="501" width="0.0441%" height="15" fill="rgb(225,20,46)" fg:x="14" fg:w="11"/><text x="0.3061%" y="511.50"></text></g><g><title>minecraft`&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (11 samples, 0.04%)</title><rect x="0.0561%" y="485" width="0.0441%" height="15" fill="rgb(210,31,41)" fg:x="14" fg:w="11"/><text x="0.3061%" y="495.50"></text></g><g><title>minecraft`image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (11 samples, 0.04%)</title><rect x="0.0561%" y="469" width="0.0441%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="11"/><text x="0.3061%" y="479.50"></text></g><g><title>minecraft`png::encoder::Writer&lt;W&gt;::write_image_data (11 samples, 0.04%)</title><rect x="0.0561%" y="453" width="0.0441%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="11"/><text x="0.3061%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.02%)</title><rect x="0.1682%" y="501" width="0.0160%" height="15" fill="rgb(249,33,26)" fg:x="42" fg:w="4"/><text x="0.4182%" y="511.50"></text></g><g><title>minecraft`minecraft::world::World::new (61 samples, 0.24%)</title><rect x="0.1001%" y="517" width="0.2444%" height="15" fill="rgb(235,183,28)" fg:x="25" fg:w="61"/><text x="0.3501%" y="527.50"></text></g><g><title>minecraft`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,3_usize&gt;&gt;::get (40 samples, 0.16%)</title><rect x="0.1843%" y="501" width="0.1602%" height="15" fill="rgb(221,5,38)" fg:x="46" fg:w="40"/><text x="0.4343%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (5 samples, 0.02%)</title><rect x="0.3605%" y="389" width="0.0200%" height="15" fill="rgb(247,18,42)" fg:x="90" fg:w="5"/><text x="0.6105%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (5 samples, 0.02%)</title><rect x="0.3605%" y="373" width="0.0200%" height="15" fill="rgb(241,131,45)" fg:x="90" fg:w="5"/><text x="0.6105%" y="383.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="0.3605%" y="357" width="0.0200%" height="15" fill="rgb(249,31,29)" fg:x="90" fg:w="5"/><text x="0.6105%" y="367.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (5 samples, 0.02%)</title><rect x="0.3605%" y="341" width="0.0200%" height="15" fill="rgb(225,111,53)" fg:x="90" fg:w="5"/><text x="0.6105%" y="351.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (5 samples, 0.02%)</title><rect x="0.3605%" y="325" width="0.0200%" height="15" fill="rgb(238,160,17)" fg:x="90" fg:w="5"/><text x="0.6105%" y="335.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (5 samples, 0.02%)</title><rect x="0.3605%" y="309" width="0.0200%" height="15" fill="rgb(214,148,48)" fg:x="90" fg:w="5"/><text x="0.6105%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (5 samples, 0.02%)</title><rect x="0.3605%" y="293" width="0.0200%" height="15" fill="rgb(232,36,49)" fg:x="90" fg:w="5"/><text x="0.6105%" y="303.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="0.3605%" y="277" width="0.0200%" height="15" fill="rgb(209,103,24)" fg:x="90" fg:w="5"/><text x="0.6105%" y="287.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (6 samples, 0.02%)</title><rect x="0.3605%" y="405" width="0.0240%" height="15" fill="rgb(229,88,8)" fg:x="90" fg:w="6"/><text x="0.6105%" y="415.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (10 samples, 0.04%)</title><rect x="0.3565%" y="485" width="0.0401%" height="15" fill="rgb(213,181,19)" fg:x="89" fg:w="10"/><text x="0.6065%" y="495.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (10 samples, 0.04%)</title><rect x="0.3565%" y="469" width="0.0401%" height="15" fill="rgb(254,191,54)" fg:x="89" fg:w="10"/><text x="0.6065%" y="479.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (10 samples, 0.04%)</title><rect x="0.3565%" y="453" width="0.0401%" height="15" fill="rgb(241,83,37)" fg:x="89" fg:w="10"/><text x="0.6065%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (9 samples, 0.04%)</title><rect x="0.3605%" y="437" width="0.0361%" height="15" fill="rgb(233,36,39)" fg:x="90" fg:w="9"/><text x="0.6105%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (9 samples, 0.04%)</title><rect x="0.3605%" y="421" width="0.0361%" height="15" fill="rgb(226,3,54)" fg:x="90" fg:w="9"/><text x="0.6105%" y="431.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (3 samples, 0.01%)</title><rect x="0.3846%" y="405" width="0.0120%" height="15" fill="rgb(245,192,40)" fg:x="96" fg:w="3"/><text x="0.6346%" y="415.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (3 samples, 0.01%)</title><rect x="0.3846%" y="389" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="96" fg:w="3"/><text x="0.6346%" y="399.50"></text></g><g><title>minecraft`winit::platform_impl::platform::Window::new (13 samples, 0.05%)</title><rect x="0.3485%" y="517" width="0.0521%" height="15" fill="rgb(232,182,51)" fg:x="87" fg:w="13"/><text x="0.5985%" y="527.50"></text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::new (13 samples, 0.05%)</title><rect x="0.3485%" y="501" width="0.0521%" height="15" fill="rgb(231,60,39)" fg:x="87" fg:w="13"/><text x="0.5985%" y="511.50"></text></g><g><title>HIToolbox`IsMenuBarVisible (3 samples, 0.01%)</title><rect x="0.4206%" y="453" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="105" fg:w="3"/><text x="0.6706%" y="463.50"></text></g><g><title>HIToolbox`GetUserSpaceMenuBar() (3 samples, 0.01%)</title><rect x="0.4206%" y="437" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="105" fg:w="3"/><text x="0.6706%" y="447.50"></text></g><g><title>HIToolbox`MenuBarInstance::MenuBarInstance (3 samples, 0.01%)</title><rect x="0.4206%" y="421" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="105" fg:w="3"/><text x="0.6706%" y="431.50"></text></g><g><title>HIToolbox`MBWindows::Get (3 samples, 0.01%)</title><rect x="0.4206%" y="405" width="0.0120%" height="15" fill="rgb(222,207,29)" fg:x="105" fg:w="3"/><text x="0.6706%" y="415.50"></text></g><g><title>HIToolbox`MBWindows::MBWindows (3 samples, 0.01%)</title><rect x="0.4206%" y="389" width="0.0120%" height="15" fill="rgb(206,96,30)" fg:x="105" fg:w="3"/><text x="0.6706%" y="399.50"></text></g><g><title>HIToolbox`RegisterForDisplayConfigChangeNotificationsIfNecessary (3 samples, 0.01%)</title><rect x="0.4206%" y="373" width="0.0120%" height="15" fill="rgb(218,138,4)" fg:x="105" fg:w="3"/><text x="0.6706%" y="383.50"></text></g><g><title>HIToolbox`RegisterCallbackInternal(unsigned int, void (*)(unsigned int, void*, void*), unsigned int, void*, unsigned int) (3 samples, 0.01%)</title><rect x="0.4206%" y="357" width="0.0120%" height="15" fill="rgb(250,191,14)" fg:x="105" fg:w="3"/><text x="0.6706%" y="367.50"></text></g><g><title>SkyLight`SLSMainConnectionID (3 samples, 0.01%)</title><rect x="0.4206%" y="341" width="0.0120%" height="15" fill="rgb(239,60,40)" fg:x="105" fg:w="3"/><text x="0.6706%" y="351.50"></text></g><g><title>SkyLight`SLSMainConnection (3 samples, 0.01%)</title><rect x="0.4206%" y="325" width="0.0120%" height="15" fill="rgb(206,27,48)" fg:x="105" fg:w="3"/><text x="0.6706%" y="335.50"></text></g><g><title>SkyLight`SLSNewConnection (3 samples, 0.01%)</title><rect x="0.4206%" y="309" width="0.0120%" height="15" fill="rgb(225,35,8)" fg:x="105" fg:w="3"/><text x="0.6706%" y="319.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (9 samples, 0.04%)</title><rect x="0.4006%" y="501" width="0.0361%" height="15" fill="rgb(250,213,24)" fg:x="100" fg:w="9"/><text x="0.6506%" y="511.50"></text></g><g><title>AppKit`-[NSApplication init] (9 samples, 0.04%)</title><rect x="0.4006%" y="485" width="0.0361%" height="15" fill="rgb(247,123,22)" fg:x="100" fg:w="9"/><text x="0.6506%" y="495.50"></text></g><g><title>AppKit`_NSInitializeAppContext (4 samples, 0.02%)</title><rect x="0.4206%" y="469" width="0.0160%" height="15" fill="rgb(231,138,38)" fg:x="105" fg:w="4"/><text x="0.6706%" y="479.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (3 samples, 0.01%)</title><rect x="0.4366%" y="501" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="109" fg:w="3"/><text x="0.6866%" y="511.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (3 samples, 0.01%)</title><rect x="0.4366%" y="485" width="0.0120%" height="15" fill="rgb(251,118,11)" fg:x="109" fg:w="3"/><text x="0.6866%" y="495.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin (3 samples, 0.01%)</title><rect x="0.4366%" y="469" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="109" fg:w="3"/><text x="0.6866%" y="479.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.01%)</title><rect x="0.4366%" y="453" width="0.0120%" height="15" fill="rgb(247,81,37)" fg:x="109" fg:w="3"/><text x="0.6866%" y="463.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (3 samples, 0.01%)</title><rect x="0.4366%" y="437" width="0.0120%" height="15" fill="rgb(209,12,38)" fg:x="109" fg:w="3"/><text x="0.6866%" y="447.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (3 samples, 0.01%)</title><rect x="0.4366%" y="421" width="0.0120%" height="15" fill="rgb(227,1,9)" fg:x="109" fg:w="3"/><text x="0.6866%" y="431.50"></text></g><g><title>AppKit`+[NSApplication initialize] (3 samples, 0.01%)</title><rect x="0.4366%" y="405" width="0.0120%" height="15" fill="rgb(248,47,43)" fg:x="109" fg:w="3"/><text x="0.6866%" y="415.50"></text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="0.4006%" y="517" width="0.0521%" height="15" fill="rgb(221,10,30)" fg:x="100" fg:w="13"/><text x="0.6506%" y="527.50"></text></g><g><title>AppKit`___collectTrackingAreasForTargetAndWinLoc_block_invoke (3 samples, 0.01%)</title><rect x="0.4967%" y="309" width="0.0120%" height="15" fill="rgb(210,229,1)" fg:x="124" fg:w="3"/><text x="0.7467%" y="319.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager mouseMoved:] (8 samples, 0.03%)</title><rect x="0.4847%" y="373" width="0.0320%" height="15" fill="rgb(222,148,37)" fg:x="121" fg:w="8"/><text x="0.7347%" y="383.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (7 samples, 0.03%)</title><rect x="0.4887%" y="357" width="0.0280%" height="15" fill="rgb(234,67,33)" fg:x="122" fg:w="7"/><text x="0.7387%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSArrayM enumerateObjectsWithOptions:usingBlock:] (6 samples, 0.02%)</title><rect x="0.4927%" y="341" width="0.0240%" height="15" fill="rgb(247,98,35)" fg:x="123" fg:w="6"/><text x="0.7427%" y="351.50"></text></g><g><title>CoreFoundation`__NSARRAY_IS_CALLING_OUT_TO_A_BLOCK__ (6 samples, 0.02%)</title><rect x="0.4927%" y="325" width="0.0240%" height="15" fill="rgb(247,138,52)" fg:x="123" fg:w="6"/><text x="0.7427%" y="335.50"></text></g><g><title>minecraft`winit::platform_impl::platform::view::key_down (3 samples, 0.01%)</title><rect x="0.5248%" y="373" width="0.0120%" height="15" fill="rgb(213,79,30)" fg:x="131" fg:w="3"/><text x="0.7748%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (15 samples, 0.06%)</title><rect x="0.4807%" y="389" width="0.0601%" height="15" fill="rgb(246,177,23)" fg:x="120" fg:w="15"/><text x="0.7307%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (19 samples, 0.08%)</title><rect x="0.4727%" y="405" width="0.0761%" height="15" fill="rgb(230,62,27)" fg:x="118" fg:w="19"/><text x="0.7227%" y="415.50"></text></g><g><title>AppKit`-[NSMenuItem _corePerformAction] (3 samples, 0.01%)</title><rect x="0.5568%" y="341" width="0.0120%" height="15" fill="rgb(216,154,8)" fg:x="139" fg:w="3"/><text x="0.8068%" y="351.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (3 samples, 0.01%)</title><rect x="0.5568%" y="325" width="0.0120%" height="15" fill="rgb(244,35,45)" fg:x="139" fg:w="3"/><text x="0.8068%" y="335.50"></text></g><g><title>AppKit`-[NSApplication terminate:] (3 samples, 0.01%)</title><rect x="0.5568%" y="309" width="0.0120%" height="15" fill="rgb(251,115,12)" fg:x="139" fg:w="3"/><text x="0.8068%" y="319.50"></text></g><g><title>AppKit`routeKeyEquivalent (4 samples, 0.02%)</title><rect x="0.5568%" y="405" width="0.0160%" height="15" fill="rgb(240,54,50)" fg:x="139" fg:w="4"/><text x="0.8068%" y="415.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (4 samples, 0.02%)</title><rect x="0.5568%" y="389" width="0.0160%" height="15" fill="rgb(233,84,52)" fg:x="139" fg:w="4"/><text x="0.8068%" y="399.50"></text></g><g><title>AppKit`-[NSMenu _performActionForItem:atIndex:fromEvent:] (4 samples, 0.02%)</title><rect x="0.5568%" y="373" width="0.0160%" height="15" fill="rgb(207,117,47)" fg:x="139" fg:w="4"/><text x="0.8068%" y="383.50"></text></g><g><title>AppKit`-[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] (4 samples, 0.02%)</title><rect x="0.5568%" y="357" width="0.0160%" height="15" fill="rgb(249,43,39)" fg:x="139" fg:w="4"/><text x="0.8068%" y="367.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (31 samples, 0.12%)</title><rect x="0.4567%" y="453" width="0.1242%" height="15" fill="rgb(209,38,44)" fg:x="114" fg:w="31"/><text x="0.7067%" y="463.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app::send_event (30 samples, 0.12%)</title><rect x="0.4607%" y="437" width="0.1202%" height="15" fill="rgb(236,212,23)" fg:x="115" fg:w="30"/><text x="0.7107%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (30 samples, 0.12%)</title><rect x="0.4607%" y="421" width="0.1202%" height="15" fill="rgb(242,79,21)" fg:x="115" fg:w="30"/><text x="0.7107%" y="431.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (3 samples, 0.01%)</title><rect x="0.5889%" y="437" width="0.0120%" height="15" fill="rgb(211,96,35)" fg:x="147" fg:w="3"/><text x="0.8389%" y="447.50"></text></g><g><title>HIToolbox`Check1ItemForKeyEvent(MenuData*, int, MenuItemDataRef, unsigned int, CheckMenuData*, MenuCommandKey*, unsigned char*) (3 samples, 0.01%)</title><rect x="0.6089%" y="293" width="0.0120%" height="15" fill="rgb(253,215,40)" fg:x="152" fg:w="3"/><text x="0.8589%" y="303.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (3 samples, 0.01%)</title><rect x="0.6289%" y="229" width="0.0120%" height="15" fill="rgb(211,81,21)" fg:x="157" fg:w="3"/><text x="0.8789%" y="239.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (5 samples, 0.02%)</title><rect x="0.6249%" y="277" width="0.0200%" height="15" fill="rgb(208,190,38)" fg:x="156" fg:w="5"/><text x="0.8749%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.02%)</title><rect x="0.6289%" y="261" width="0.0160%" height="15" fill="rgb(235,213,38)" fg:x="157" fg:w="4"/><text x="0.8789%" y="271.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.02%)</title><rect x="0.6289%" y="245" width="0.0160%" height="15" fill="rgb(237,122,38)" fg:x="157" fg:w="4"/><text x="0.8789%" y="255.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (10 samples, 0.04%)</title><rect x="0.6089%" y="309" width="0.0401%" height="15" fill="rgb(244,218,35)" fg:x="152" fg:w="10"/><text x="0.8589%" y="319.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (6 samples, 0.02%)</title><rect x="0.6249%" y="293" width="0.0240%" height="15" fill="rgb(240,68,47)" fg:x="156" fg:w="6"/><text x="0.8749%" y="303.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (14 samples, 0.06%)</title><rect x="0.6089%" y="421" width="0.0561%" height="15" fill="rgb(210,16,53)" fg:x="152" fg:w="14"/><text x="0.8589%" y="431.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (14 samples, 0.06%)</title><rect x="0.6089%" y="405" width="0.0561%" height="15" fill="rgb(235,124,12)" fg:x="152" fg:w="14"/><text x="0.8589%" y="415.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (14 samples, 0.06%)</title><rect x="0.6089%" y="389" width="0.0561%" height="15" fill="rgb(224,169,11)" fg:x="152" fg:w="14"/><text x="0.8589%" y="399.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (14 samples, 0.06%)</title><rect x="0.6089%" y="373" width="0.0561%" height="15" fill="rgb(250,166,2)" fg:x="152" fg:w="14"/><text x="0.8589%" y="383.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (14 samples, 0.06%)</title><rect x="0.6089%" y="357" width="0.0561%" height="15" fill="rgb(242,216,29)" fg:x="152" fg:w="14"/><text x="0.8589%" y="367.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (14 samples, 0.06%)</title><rect x="0.6089%" y="341" width="0.0561%" height="15" fill="rgb(230,116,27)" fg:x="152" fg:w="14"/><text x="0.8589%" y="351.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (14 samples, 0.06%)</title><rect x="0.6089%" y="325" width="0.0561%" height="15" fill="rgb(228,99,48)" fg:x="152" fg:w="14"/><text x="0.8589%" y="335.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (3 samples, 0.01%)</title><rect x="0.6530%" y="309" width="0.0120%" height="15" fill="rgb(253,11,6)" fg:x="163" fg:w="3"/><text x="0.9030%" y="319.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (3 samples, 0.01%)</title><rect x="0.6530%" y="293" width="0.0120%" height="15" fill="rgb(247,143,39)" fg:x="163" fg:w="3"/><text x="0.9030%" y="303.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (3 samples, 0.01%)</title><rect x="0.6530%" y="277" width="0.0120%" height="15" fill="rgb(236,97,10)" fg:x="163" fg:w="3"/><text x="0.9030%" y="287.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (3 samples, 0.01%)</title><rect x="0.6530%" y="261" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="163" fg:w="3"/><text x="0.9030%" y="271.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (16 samples, 0.06%)</title><rect x="0.6049%" y="437" width="0.0641%" height="15" fill="rgb(216,164,2)" fg:x="151" fg:w="16"/><text x="0.8549%" y="447.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (3 samples, 0.01%)</title><rect x="0.6690%" y="261" width="0.0120%" height="15" fill="rgb(220,129,5)" fg:x="167" fg:w="3"/><text x="0.9190%" y="271.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (3 samples, 0.01%)</title><rect x="0.6690%" y="245" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="167" fg:w="3"/><text x="0.9190%" y="255.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (3 samples, 0.01%)</title><rect x="0.6690%" y="229" width="0.0120%" height="15" fill="rgb(242,107,0)" fg:x="167" fg:w="3"/><text x="0.9190%" y="239.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (3 samples, 0.01%)</title><rect x="0.6690%" y="213" width="0.0120%" height="15" fill="rgb(251,28,31)" fg:x="167" fg:w="3"/><text x="0.9190%" y="223.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (3 samples, 0.01%)</title><rect x="0.6690%" y="197" width="0.0120%" height="15" fill="rgb(233,223,10)" fg:x="167" fg:w="3"/><text x="0.9190%" y="207.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_delegate::did_finish_launching (3 samples, 0.01%)</title><rect x="0.6690%" y="181" width="0.0120%" height="15" fill="rgb(215,21,27)" fg:x="167" fg:w="3"/><text x="0.9190%" y="191.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::launched (3 samples, 0.01%)</title><rect x="0.6690%" y="165" width="0.0120%" height="15" fill="rgb(232,23,21)" fg:x="167" fg:w="3"/><text x="0.9190%" y="175.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (4 samples, 0.02%)</title><rect x="0.6690%" y="421" width="0.0160%" height="15" fill="rgb(244,5,23)" fg:x="167" fg:w="4"/><text x="0.9190%" y="431.50"></text></g><g><title>AE`aeProcessAppleEvent (4 samples, 0.02%)</title><rect x="0.6690%" y="405" width="0.0160%" height="15" fill="rgb(226,81,46)" fg:x="167" fg:w="4"/><text x="0.9190%" y="415.50"></text></g><g><title>AE`0x000000019c5a6174 (4 samples, 0.02%)</title><rect x="0.6690%" y="389" width="0.0160%" height="15" fill="rgb(247,70,30)" fg:x="167" fg:w="4"/><text x="0.9190%" y="399.50"></text></g><g><title>AE`0x000000019c5a6220 (4 samples, 0.02%)</title><rect x="0.6690%" y="373" width="0.0160%" height="15" fill="rgb(212,68,19)" fg:x="167" fg:w="4"/><text x="0.9190%" y="383.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (4 samples, 0.02%)</title><rect x="0.6690%" y="357" width="0.0160%" height="15" fill="rgb(240,187,13)" fg:x="167" fg:w="4"/><text x="0.9190%" y="367.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (4 samples, 0.02%)</title><rect x="0.6690%" y="341" width="0.0160%" height="15" fill="rgb(223,113,26)" fg:x="167" fg:w="4"/><text x="0.9190%" y="351.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (4 samples, 0.02%)</title><rect x="0.6690%" y="325" width="0.0160%" height="15" fill="rgb(206,192,2)" fg:x="167" fg:w="4"/><text x="0.9190%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (4 samples, 0.02%)</title><rect x="0.6690%" y="309" width="0.0160%" height="15" fill="rgb(241,108,4)" fg:x="167" fg:w="4"/><text x="0.9190%" y="319.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (4 samples, 0.02%)</title><rect x="0.6690%" y="293" width="0.0160%" height="15" fill="rgb(247,173,49)" fg:x="167" fg:w="4"/><text x="0.9190%" y="303.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (4 samples, 0.02%)</title><rect x="0.6690%" y="277" width="0.0160%" height="15" fill="rgb(224,114,35)" fg:x="167" fg:w="4"/><text x="0.9190%" y="287.50"></text></g><g><title>HIToolbox`MBDisplays::ForEachActiveDisplayDo(unsigned char, bool  (4 samples, 0.02%)</title><rect x="0.6890%" y="261" width="0.0160%" height="15" fill="rgb(245,159,27)" fg:x="172" fg:w="4"/><text x="0.9390%" y="271.50"></text></g><g><title>HIToolbox`invocation function for block in MenuBarInstance::ForEachWindowDo(unsigned char, bool  (4 samples, 0.02%)</title><rect x="0.6890%" y="245" width="0.0160%" height="15" fill="rgb(245,172,44)" fg:x="172" fg:w="4"/><text x="0.9390%" y="255.50"></text></g><g><title>HIToolbox`MBWindows::CreateWindowForDisplay (4 samples, 0.02%)</title><rect x="0.6890%" y="229" width="0.0160%" height="15" fill="rgb(236,23,11)" fg:x="172" fg:w="4"/><text x="0.9390%" y="239.50"></text></g><g><title>HIToolbox`ShowHide (3 samples, 0.01%)</title><rect x="0.6930%" y="213" width="0.0120%" height="15" fill="rgb(205,117,38)" fg:x="173" fg:w="3"/><text x="0.9430%" y="223.50"></text></g><g><title>HIToolbox`_ShowHideWindows (3 samples, 0.01%)</title><rect x="0.6930%" y="197" width="0.0120%" height="15" fill="rgb(237,72,25)" fg:x="173" fg:w="3"/><text x="0.9430%" y="207.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (3 samples, 0.01%)</title><rect x="0.6930%" y="181" width="0.0120%" height="15" fill="rgb(244,70,9)" fg:x="173" fg:w="3"/><text x="0.9430%" y="191.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (3 samples, 0.01%)</title><rect x="0.6930%" y="165" width="0.0120%" height="15" fill="rgb(217,125,39)" fg:x="173" fg:w="3"/><text x="0.9430%" y="175.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (3 samples, 0.01%)</title><rect x="0.6930%" y="149" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="173" fg:w="3"/><text x="0.9430%" y="159.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (3 samples, 0.01%)</title><rect x="0.6930%" y="133" width="0.0120%" height="15" fill="rgb(251,123,47)" fg:x="173" fg:w="3"/><text x="0.9430%" y="143.50"></text></g><g><title>HIToolbox`HIView::SendDraw (3 samples, 0.01%)</title><rect x="0.6930%" y="117" width="0.0120%" height="15" fill="rgb(221,13,13)" fg:x="173" fg:w="3"/><text x="0.9430%" y="127.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (3 samples, 0.01%)</title><rect x="0.6930%" y="101" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="173" fg:w="3"/><text x="0.9430%" y="111.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (3 samples, 0.01%)</title><rect x="0.6930%" y="85" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="173" fg:w="3"/><text x="0.9430%" y="95.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (3 samples, 0.01%)</title><rect x="0.6930%" y="69" width="0.0120%" height="15" fill="rgb(245,182,24)" fg:x="173" fg:w="3"/><text x="0.9430%" y="79.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (3 samples, 0.01%)</title><rect x="0.6930%" y="53" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="173" fg:w="3"/><text x="0.9430%" y="63.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (3 samples, 0.01%)</title><rect x="0.6930%" y="37" width="0.0120%" height="15" fill="rgb(246,228,12)" fg:x="173" fg:w="3"/><text x="0.9430%" y="47.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (8 samples, 0.03%)</title><rect x="0.6890%" y="389" width="0.0320%" height="15" fill="rgb(213,55,15)" fg:x="172" fg:w="8"/><text x="0.9390%" y="399.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (8 samples, 0.03%)</title><rect x="0.6890%" y="373" width="0.0320%" height="15" fill="rgb(209,9,3)" fg:x="172" fg:w="8"/><text x="0.9390%" y="383.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (8 samples, 0.03%)</title><rect x="0.6890%" y="357" width="0.0320%" height="15" fill="rgb(230,59,30)" fg:x="172" fg:w="8"/><text x="0.9390%" y="367.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (8 samples, 0.03%)</title><rect x="0.6890%" y="341" width="0.0320%" height="15" fill="rgb(209,121,21)" fg:x="172" fg:w="8"/><text x="0.9390%" y="351.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (8 samples, 0.03%)</title><rect x="0.6890%" y="325" width="0.0320%" height="15" fill="rgb(220,109,13)" fg:x="172" fg:w="8"/><text x="0.9390%" y="335.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (8 samples, 0.03%)</title><rect x="0.6890%" y="309" width="0.0320%" height="15" fill="rgb(232,18,1)" fg:x="172" fg:w="8"/><text x="0.9390%" y="319.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (8 samples, 0.03%)</title><rect x="0.6890%" y="293" width="0.0320%" height="15" fill="rgb(215,41,42)" fg:x="172" fg:w="8"/><text x="0.9390%" y="303.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (8 samples, 0.03%)</title><rect x="0.6890%" y="277" width="0.0320%" height="15" fill="rgb(224,123,36)" fg:x="172" fg:w="8"/><text x="0.9390%" y="287.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (4 samples, 0.02%)</title><rect x="0.7050%" y="261" width="0.0160%" height="15" fill="rgb(240,125,3)" fg:x="176" fg:w="4"/><text x="0.9550%" y="271.50"></text></g><g><title>HIToolbox`ShowHide (3 samples, 0.01%)</title><rect x="0.7090%" y="245" width="0.0120%" height="15" fill="rgb(205,98,50)" fg:x="177" fg:w="3"/><text x="0.9590%" y="255.50"></text></g><g><title>HIToolbox`_ShowHideWindows (3 samples, 0.01%)</title><rect x="0.7090%" y="229" width="0.0120%" height="15" fill="rgb(205,185,37)" fg:x="177" fg:w="3"/><text x="0.9590%" y="239.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (3 samples, 0.01%)</title><rect x="0.7090%" y="213" width="0.0120%" height="15" fill="rgb(238,207,15)" fg:x="177" fg:w="3"/><text x="0.9590%" y="223.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (3 samples, 0.01%)</title><rect x="0.7090%" y="197" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="177" fg:w="3"/><text x="0.9590%" y="207.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (3 samples, 0.01%)</title><rect x="0.7090%" y="181" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="177" fg:w="3"/><text x="0.9590%" y="191.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (3 samples, 0.01%)</title><rect x="0.7090%" y="165" width="0.0120%" height="15" fill="rgb(207,46,11)" fg:x="177" fg:w="3"/><text x="0.9590%" y="175.50"></text></g><g><title>HIToolbox`HIView::SendDraw (3 samples, 0.01%)</title><rect x="0.7090%" y="149" width="0.0120%" height="15" fill="rgb(241,35,35)" fg:x="177" fg:w="3"/><text x="0.9590%" y="159.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (3 samples, 0.01%)</title><rect x="0.7090%" y="133" width="0.0120%" height="15" fill="rgb(243,32,47)" fg:x="177" fg:w="3"/><text x="0.9590%" y="143.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (3 samples, 0.01%)</title><rect x="0.7090%" y="117" width="0.0120%" height="15" fill="rgb(247,202,23)" fg:x="177" fg:w="3"/><text x="0.9590%" y="127.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (3 samples, 0.01%)</title><rect x="0.7090%" y="101" width="0.0120%" height="15" fill="rgb(219,102,11)" fg:x="177" fg:w="3"/><text x="0.9590%" y="111.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (3 samples, 0.01%)</title><rect x="0.7090%" y="85" width="0.0120%" height="15" fill="rgb(243,110,44)" fg:x="177" fg:w="3"/><text x="0.9590%" y="95.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (3 samples, 0.01%)</title><rect x="0.7090%" y="69" width="0.0120%" height="15" fill="rgb(222,74,54)" fg:x="177" fg:w="3"/><text x="0.9590%" y="79.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (3 samples, 0.01%)</title><rect x="0.7090%" y="53" width="0.0120%" height="15" fill="rgb(216,99,12)" fg:x="177" fg:w="3"/><text x="0.9590%" y="63.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (3 samples, 0.01%)</title><rect x="0.7090%" y="37" width="0.0120%" height="15" fill="rgb(226,22,26)" fg:x="177" fg:w="3"/><text x="0.9590%" y="47.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (5 samples, 0.02%)</title><rect x="0.7291%" y="277" width="0.0200%" height="15" fill="rgb(217,163,10)" fg:x="182" fg:w="5"/><text x="0.9791%" y="287.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (5 samples, 0.02%)</title><rect x="0.7291%" y="261" width="0.0200%" height="15" fill="rgb(213,25,53)" fg:x="182" fg:w="5"/><text x="0.9791%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="0.7291%" y="245" width="0.0200%" height="15" fill="rgb(252,105,26)" fg:x="182" fg:w="5"/><text x="0.9791%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="0.7291%" y="229" width="0.0200%" height="15" fill="rgb(220,39,43)" fg:x="182" fg:w="5"/><text x="0.9791%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="0.7291%" y="213" width="0.0200%" height="15" fill="rgb(229,68,48)" fg:x="182" fg:w="5"/><text x="0.9791%" y="223.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (6 samples, 0.02%)</title><rect x="0.7291%" y="293" width="0.0240%" height="15" fill="rgb(252,8,32)" fg:x="182" fg:w="6"/><text x="0.9791%" y="303.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (9 samples, 0.04%)</title><rect x="0.7251%" y="341" width="0.0361%" height="15" fill="rgb(223,20,43)" fg:x="181" fg:w="9"/><text x="0.9751%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (8 samples, 0.03%)</title><rect x="0.7291%" y="325" width="0.0320%" height="15" fill="rgb(229,81,49)" fg:x="182" fg:w="8"/><text x="0.9791%" y="335.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (8 samples, 0.03%)</title><rect x="0.7291%" y="309" width="0.0320%" height="15" fill="rgb(236,28,36)" fg:x="182" fg:w="8"/><text x="0.9791%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (10 samples, 0.04%)</title><rect x="0.7251%" y="357" width="0.0401%" height="15" fill="rgb(249,185,26)" fg:x="181" fg:w="10"/><text x="0.9751%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (4 samples, 0.02%)</title><rect x="0.7731%" y="341" width="0.0160%" height="15" fill="rgb(249,174,33)" fg:x="193" fg:w="4"/><text x="1.0231%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (4 samples, 0.02%)</title><rect x="0.7731%" y="325" width="0.0160%" height="15" fill="rgb(233,201,37)" fg:x="193" fg:w="4"/><text x="1.0231%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (4 samples, 0.02%)</title><rect x="0.7731%" y="309" width="0.0160%" height="15" fill="rgb(221,78,26)" fg:x="193" fg:w="4"/><text x="1.0231%" y="319.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (5 samples, 0.02%)</title><rect x="0.7932%" y="277" width="0.0200%" height="15" fill="rgb(250,127,30)" fg:x="198" fg:w="5"/><text x="1.0432%" y="287.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (7 samples, 0.03%)</title><rect x="0.7932%" y="293" width="0.0280%" height="15" fill="rgb(230,49,44)" fg:x="198" fg:w="7"/><text x="1.0432%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (3 samples, 0.01%)</title><rect x="0.8252%" y="245" width="0.0120%" height="15" fill="rgb(229,67,23)" fg:x="206" fg:w="3"/><text x="1.0752%" y="255.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (5 samples, 0.02%)</title><rect x="0.8212%" y="261" width="0.0200%" height="15" fill="rgb(249,83,47)" fg:x="205" fg:w="5"/><text x="1.0712%" y="271.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (3 samples, 0.01%)</title><rect x="0.8412%" y="261" width="0.0120%" height="15" fill="rgb(215,43,3)" fg:x="210" fg:w="3"/><text x="1.0912%" y="271.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (3 samples, 0.01%)</title><rect x="0.8412%" y="245" width="0.0120%" height="15" fill="rgb(238,154,13)" fg:x="210" fg:w="3"/><text x="1.0912%" y="255.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (3 samples, 0.01%)</title><rect x="0.8412%" y="229" width="0.0120%" height="15" fill="rgb(219,56,2)" fg:x="210" fg:w="3"/><text x="1.0912%" y="239.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (16 samples, 0.06%)</title><rect x="0.7932%" y="309" width="0.0641%" height="15" fill="rgb(233,0,4)" fg:x="198" fg:w="16"/><text x="1.0432%" y="319.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (9 samples, 0.04%)</title><rect x="0.8212%" y="293" width="0.0361%" height="15" fill="rgb(235,30,7)" fg:x="205" fg:w="9"/><text x="1.0712%" y="303.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (9 samples, 0.04%)</title><rect x="0.8212%" y="277" width="0.0361%" height="15" fill="rgb(250,79,13)" fg:x="205" fg:w="9"/><text x="1.0712%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1,841 samples, 7.37%)</title><rect x="0.8573%" y="229" width="7.3749%" height="15" fill="rgb(211,146,34)" fg:x="214" fg:w="1841"/><text x="1.1073%" y="239.50">libsystem_..</text></g><g><title>AGXMetal13_3`0x00000001f90f6e64 (4 samples, 0.02%)</title><rect x="8.2322%" y="181" width="0.0160%" height="15" fill="rgb(228,22,38)" fg:x="2055" fg:w="4"/><text x="8.4822%" y="191.50"></text></g><g><title>AGXMetal13_3`0x00000001f90fee00 (4 samples, 0.02%)</title><rect x="8.2322%" y="165" width="0.0160%" height="15" fill="rgb(235,168,5)" fg:x="2055" fg:w="4"/><text x="8.4822%" y="175.50"></text></g><g><title>minecraft`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (4 samples, 0.02%)</title><rect x="8.2482%" y="181" width="0.0160%" height="15" fill="rgb(221,155,16)" fg:x="2059" fg:w="4"/><text x="8.4982%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (4 samples, 0.02%)</title><rect x="8.2482%" y="165" width="0.0160%" height="15" fill="rgb(215,215,53)" fg:x="2059" fg:w="4"/><text x="8.4982%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (4 samples, 0.02%)</title><rect x="8.2482%" y="149" width="0.0160%" height="15" fill="rgb(223,4,10)" fg:x="2059" fg:w="4"/><text x="8.4982%" y="159.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::copy_buffer_to_buffer (5 samples, 0.02%)</title><rect x="8.2682%" y="181" width="0.0200%" height="15" fill="rgb(234,103,6)" fg:x="2064" fg:w="5"/><text x="8.5182%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (5 samples, 0.02%)</title><rect x="8.2682%" y="165" width="0.0200%" height="15" fill="rgb(227,97,0)" fg:x="2064" fg:w="5"/><text x="8.5182%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (5 samples, 0.02%)</title><rect x="8.2682%" y="149" width="0.0200%" height="15" fill="rgb(234,150,53)" fg:x="2064" fg:w="5"/><text x="8.5182%" y="159.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (15 samples, 0.06%)</title><rect x="8.2322%" y="197" width="0.0601%" height="15" fill="rgb(228,201,54)" fg:x="2055" fg:w="15"/><text x="8.4822%" y="207.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.02%)</title><rect x="8.3043%" y="69" width="0.0240%" height="15" fill="rgb(222,22,37)" fg:x="2073" fg:w="6"/><text x="8.5543%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.02%)</title><rect x="8.3043%" y="53" width="0.0240%" height="15" fill="rgb(237,53,32)" fg:x="2073" fg:w="6"/><text x="8.5543%" y="63.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (9 samples, 0.04%)</title><rect x="8.2963%" y="133" width="0.0361%" height="15" fill="rgb(233,25,53)" fg:x="2071" fg:w="9"/><text x="8.5463%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (9 samples, 0.04%)</title><rect x="8.2963%" y="117" width="0.0361%" height="15" fill="rgb(210,40,34)" fg:x="2071" fg:w="9"/><text x="8.5463%" y="127.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (8 samples, 0.03%)</title><rect x="8.3003%" y="101" width="0.0320%" height="15" fill="rgb(241,220,44)" fg:x="2072" fg:w="8"/><text x="8.5503%" y="111.50"></text></g><g><title>IOKit`IOConnectCallMethod (7 samples, 0.03%)</title><rect x="8.3043%" y="85" width="0.0280%" height="15" fill="rgb(235,28,35)" fg:x="2073" fg:w="7"/><text x="8.5543%" y="95.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce4dc (12 samples, 0.05%)</title><rect x="8.2923%" y="165" width="0.0481%" height="15" fill="rgb(210,56,17)" fg:x="2070" fg:w="12"/><text x="8.5423%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce63c (12 samples, 0.05%)</title><rect x="8.2923%" y="149" width="0.0481%" height="15" fill="rgb(224,130,29)" fg:x="2070" fg:w="12"/><text x="8.5423%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (30 samples, 0.12%)</title><rect x="8.2322%" y="229" width="0.1202%" height="15" fill="rgb(235,212,8)" fg:x="2055" fg:w="30"/><text x="8.4822%" y="239.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (30 samples, 0.12%)</title><rect x="8.2322%" y="213" width="0.1202%" height="15" fill="rgb(223,33,50)" fg:x="2055" fg:w="30"/><text x="8.4822%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (15 samples, 0.06%)</title><rect x="8.2923%" y="197" width="0.0601%" height="15" fill="rgb(219,149,13)" fg:x="2070" fg:w="15"/><text x="8.5423%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (15 samples, 0.06%)</title><rect x="8.2923%" y="181" width="0.0601%" height="15" fill="rgb(250,156,29)" fg:x="2070" fg:w="15"/><text x="8.5423%" y="191.50"></text></g><g><title>minecraft`DYLD-STUB$$memcmp (285 samples, 1.14%)</title><rect x="8.3524%" y="229" width="1.1417%" height="15" fill="rgb(216,193,19)" fg:x="2085" fg:w="285"/><text x="8.6024%" y="239.50"></text></g><g><title>AGXMetal13_3`0x00000001f91d8c10 (3 samples, 0.01%)</title><rect x="9.5221%" y="181" width="0.0120%" height="15" fill="rgb(216,135,14)" fg:x="2377" fg:w="3"/><text x="9.7721%" y="191.50"></text></g><g><title>AGXMetal13_3`0x00000001f91d2ba8 (3 samples, 0.01%)</title><rect x="9.5221%" y="165" width="0.0120%" height="15" fill="rgb(241,47,5)" fg:x="2377" fg:w="3"/><text x="9.7721%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f91e5a84 (6 samples, 0.02%)</title><rect x="9.5541%" y="117" width="0.0240%" height="15" fill="rgb(233,42,35)" fg:x="2385" fg:w="6"/><text x="9.8041%" y="127.50"></text></g><g><title>AGXMetal13_3`0x00000001f9108bfc (11 samples, 0.04%)</title><rect x="9.5501%" y="133" width="0.0441%" height="15" fill="rgb(231,13,6)" fg:x="2384" fg:w="11"/><text x="9.8001%" y="143.50"></text></g><g><title>minecraft`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (17 samples, 0.07%)</title><rect x="9.5341%" y="181" width="0.0681%" height="15" fill="rgb(207,181,40)" fg:x="2380" fg:w="17"/><text x="9.7841%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (16 samples, 0.06%)</title><rect x="9.5381%" y="165" width="0.0641%" height="15" fill="rgb(254,173,49)" fg:x="2381" fg:w="16"/><text x="9.7881%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (14 samples, 0.06%)</title><rect x="9.5461%" y="149" width="0.0561%" height="15" fill="rgb(221,1,38)" fg:x="2383" fg:w="14"/><text x="9.7961%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (32 samples, 0.13%)</title><rect x="9.5021%" y="213" width="0.1282%" height="15" fill="rgb(206,124,46)" fg:x="2372" fg:w="32"/><text x="9.7521%" y="223.50"></text></g><g><title>minecraft`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (30 samples, 0.12%)</title><rect x="9.5101%" y="197" width="0.1202%" height="15" fill="rgb(249,21,11)" fg:x="2374" fg:w="30"/><text x="9.7601%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (4 samples, 0.02%)</title><rect x="9.6142%" y="181" width="0.0160%" height="15" fill="rgb(222,201,40)" fg:x="2400" fg:w="4"/><text x="9.8642%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (4 samples, 0.02%)</title><rect x="9.6142%" y="165" width="0.0160%" height="15" fill="rgb(235,61,29)" fg:x="2400" fg:w="4"/><text x="9.8642%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f910b710 (4 samples, 0.02%)</title><rect x="9.6142%" y="149" width="0.0160%" height="15" fill="rgb(219,207,3)" fg:x="2400" fg:w="4"/><text x="9.8642%" y="159.50"></text></g><g><title>AGXMetal13_3`0x00000001f91079cc (3 samples, 0.01%)</title><rect x="9.6503%" y="133" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="2409" fg:w="3"/><text x="9.9003%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001f910a544 (6 samples, 0.02%)</title><rect x="9.6503%" y="149" width="0.0240%" height="15" fill="rgb(239,76,54)" fg:x="2409" fg:w="6"/><text x="9.9003%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (8 samples, 0.03%)</title><rect x="9.6463%" y="181" width="0.0320%" height="15" fill="rgb(231,124,27)" fg:x="2408" fg:w="8"/><text x="9.8963%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (7 samples, 0.03%)</title><rect x="9.6503%" y="165" width="0.0280%" height="15" fill="rgb(249,195,6)" fg:x="2409" fg:w="7"/><text x="9.9003%" y="175.50"></text></g><g><title>CoreFoundation`_CFRelease (21 samples, 0.08%)</title><rect x="9.7024%" y="101" width="0.0841%" height="15" fill="rgb(237,174,47)" fg:x="2422" fg:w="21"/><text x="9.9524%" y="111.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (21 samples, 0.08%)</title><rect x="9.7024%" y="85" width="0.0841%" height="15" fill="rgb(206,201,31)" fg:x="2422" fg:w="21"/><text x="9.9524%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (21 samples, 0.08%)</title><rect x="9.7024%" y="69" width="0.0841%" height="15" fill="rgb(231,57,52)" fg:x="2422" fg:w="21"/><text x="9.9524%" y="79.50"></text></g><g><title>IOKit`io_connect_method (21 samples, 0.08%)</title><rect x="9.7024%" y="53" width="0.0841%" height="15" fill="rgb(248,177,22)" fg:x="2422" fg:w="21"/><text x="9.9524%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (21 samples, 0.08%)</title><rect x="9.7024%" y="37" width="0.0841%" height="15" fill="rgb(215,211,37)" fg:x="2422" fg:w="21"/><text x="9.9524%" y="47.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (25 samples, 0.10%)</title><rect x="9.6984%" y="117" width="0.1001%" height="15" fill="rgb(241,128,51)" fg:x="2421" fg:w="25"/><text x="9.9484%" y="127.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (3 samples, 0.01%)</title><rect x="9.7865%" y="101" width="0.0120%" height="15" fill="rgb(227,165,31)" fg:x="2443" fg:w="3"/><text x="10.0365%" y="111.50"></text></g><g><title>AGXMetal13_3`0x00000001f9105884 (26 samples, 0.10%)</title><rect x="9.6984%" y="149" width="0.1042%" height="15" fill="rgb(228,167,24)" fg:x="2421" fg:w="26"/><text x="9.9484%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (26 samples, 0.10%)</title><rect x="9.6984%" y="133" width="0.1042%" height="15" fill="rgb(228,143,12)" fg:x="2421" fg:w="26"/><text x="9.9484%" y="143.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (28 samples, 0.11%)</title><rect x="9.6943%" y="165" width="0.1122%" height="15" fill="rgb(249,149,8)" fg:x="2420" fg:w="28"/><text x="9.9443%" y="175.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (3 samples, 0.01%)</title><rect x="9.8065%" y="165" width="0.0120%" height="15" fill="rgb(243,35,44)" fg:x="2448" fg:w="3"/><text x="10.0565%" y="175.50"></text></g><g><title>minecraft`wgpu_core::device::Device&lt;A&gt;::maintain (34 samples, 0.14%)</title><rect x="9.6863%" y="181" width="0.1362%" height="15" fill="rgb(246,89,9)" fg:x="2418" fg:w="34"/><text x="9.9363%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (49 samples, 0.20%)</title><rect x="9.6383%" y="213" width="0.1963%" height="15" fill="rgb(233,213,13)" fg:x="2406" fg:w="49"/><text x="9.8883%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (47 samples, 0.19%)</title><rect x="9.6463%" y="197" width="0.1883%" height="15" fill="rgb(233,141,41)" fg:x="2408" fg:w="47"/><text x="9.8963%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6,765 samples, 27.10%)</title><rect x="9.8346%" y="197" width="27.1001%" height="15" fill="rgb(239,167,4)" fg:x="2455" fg:w="6765"/><text x="10.0846%" y="207.50">libsystem_platform.dylib`_platform_memmove</text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (3 samples, 0.01%)</title><rect x="36.9347%" y="181" width="0.0120%" height="15" fill="rgb(209,217,16)" fg:x="9220" fg:w="3"/><text x="37.1847%" y="191.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce4dc (32 samples, 0.13%)</title><rect x="36.9467%" y="149" width="0.1282%" height="15" fill="rgb(219,88,35)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="159.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce63c (32 samples, 0.13%)</title><rect x="36.9467%" y="133" width="0.1282%" height="15" fill="rgb(220,193,23)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (32 samples, 0.13%)</title><rect x="36.9467%" y="117" width="0.1282%" height="15" fill="rgb(230,90,52)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="127.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (32 samples, 0.13%)</title><rect x="36.9467%" y="101" width="0.1282%" height="15" fill="rgb(252,106,19)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="111.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (32 samples, 0.13%)</title><rect x="36.9467%" y="85" width="0.1282%" height="15" fill="rgb(206,74,20)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (32 samples, 0.13%)</title><rect x="36.9467%" y="69" width="0.1282%" height="15" fill="rgb(230,138,44)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="79.50"></text></g><g><title>IOKit`io_connect_method (32 samples, 0.13%)</title><rect x="36.9467%" y="53" width="0.1282%" height="15" fill="rgb(235,182,43)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (32 samples, 0.13%)</title><rect x="36.9467%" y="37" width="0.1282%" height="15" fill="rgb(242,16,51)" fg:x="9223" fg:w="32"/><text x="37.1967%" y="47.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (6,801 samples, 27.24%)</title><rect x="9.8346%" y="213" width="27.2443%" height="15" fill="rgb(248,9,4)" fg:x="2455" fg:w="6801"/><text x="10.0846%" y="223.50">minecraft`&lt;wgpu::backend::direct::Context as..</text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (36 samples, 0.14%)</title><rect x="36.9347%" y="197" width="0.1442%" height="15" fill="rgb(210,31,22)" fg:x="9220" fg:w="36"/><text x="37.1847%" y="207.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (33 samples, 0.13%)</title><rect x="36.9467%" y="181" width="0.1322%" height="15" fill="rgb(239,54,39)" fg:x="9223" fg:w="33"/><text x="37.1967%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (33 samples, 0.13%)</title><rect x="36.9467%" y="165" width="0.1322%" height="15" fill="rgb(230,99,41)" fg:x="9223" fg:w="33"/><text x="37.1967%" y="175.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (5 samples, 0.02%)</title><rect x="37.0789%" y="181" width="0.0200%" height="15" fill="rgb(253,106,12)" fg:x="9256" fg:w="5"/><text x="37.3289%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (5 samples, 0.02%)</title><rect x="37.0789%" y="165" width="0.0200%" height="15" fill="rgb(213,46,41)" fg:x="9256" fg:w="5"/><text x="37.3289%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (4 samples, 0.02%)</title><rect x="37.0829%" y="149" width="0.0160%" height="15" fill="rgb(215,133,35)" fg:x="9257" fg:w="4"/><text x="37.3329%" y="159.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (4 samples, 0.02%)</title><rect x="37.0829%" y="133" width="0.0160%" height="15" fill="rgb(213,28,5)" fg:x="9257" fg:w="4"/><text x="37.3329%" y="143.50"></text></g><g><title>minecraft`wgpu::Surface::get_current_texture (6 samples, 0.02%)</title><rect x="37.0789%" y="213" width="0.0240%" height="15" fill="rgb(215,77,49)" fg:x="9256" fg:w="6"/><text x="37.3289%" y="223.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (6 samples, 0.02%)</title><rect x="37.0789%" y="197" width="0.0240%" height="15" fill="rgb(248,100,22)" fg:x="9256" fg:w="6"/><text x="37.3289%" y="207.50"></text></g><g><title>AGXMetal13_3`0x00000001f910b758 (3 samples, 0.01%)</title><rect x="37.1029%" y="133" width="0.0120%" height="15" fill="rgb(208,67,9)" fg:x="9262" fg:w="3"/><text x="37.3529%" y="143.50"></text></g><g><title>minecraft`wgpu::SurfaceTexture::present (7 samples, 0.03%)</title><rect x="37.1029%" y="213" width="0.0280%" height="15" fill="rgb(219,133,21)" fg:x="9262" fg:w="7"/><text x="37.3529%" y="223.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (7 samples, 0.03%)</title><rect x="37.1029%" y="197" width="0.0280%" height="15" fill="rgb(246,46,29)" fg:x="9262" fg:w="7"/><text x="37.3529%" y="207.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (7 samples, 0.03%)</title><rect x="37.1029%" y="181" width="0.0280%" height="15" fill="rgb(246,185,52)" fg:x="9262" fg:w="7"/><text x="37.3529%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (7 samples, 0.03%)</title><rect x="37.1029%" y="165" width="0.0280%" height="15" fill="rgb(252,136,11)" fg:x="9262" fg:w="7"/><text x="37.3529%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (7 samples, 0.03%)</title><rect x="37.1029%" y="149" width="0.0280%" height="15" fill="rgb(219,138,53)" fg:x="9262" fg:w="7"/><text x="37.3529%" y="159.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (4 samples, 0.02%)</title><rect x="37.1149%" y="133" width="0.0160%" height="15" fill="rgb(211,51,23)" fg:x="9265" fg:w="4"/><text x="37.3649%" y="143.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:options:] (3 samples, 0.01%)</title><rect x="37.1189%" y="117" width="0.0120%" height="15" fill="rgb(247,221,28)" fg:x="9266" fg:w="3"/><text x="37.3689%" y="127.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::draw (6,899 samples, 27.64%)</title><rect x="9.5021%" y="229" width="27.6369%" height="15" fill="rgb(251,222,45)" fg:x="2372" fg:w="6899"/><text x="9.7521%" y="239.50">minecraft`minecraft::renderer::Renderer::draw</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (22,639 samples, 90.69%)</title><rect x="0.7932%" y="325" width="90.6902%" height="15" fill="rgb(217,162,53)" fg:x="198" fg:w="22639"/><text x="1.0432%" y="335.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>minecraft`winit::platform_impl::platform::observer::control_flow_end_handler (22,623 samples, 90.63%)</title><rect x="0.8573%" y="309" width="90.6261%" height="15" fill="rgb(229,93,14)" fg:x="214" fg:w="22623"/><text x="1.1073%" y="319.50">minecraft`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::cleared (22,623 samples, 90.63%)</title><rect x="0.8573%" y="293" width="90.6261%" height="15" fill="rgb(209,67,49)" fg:x="214" fg:w="22623"/><text x="1.1073%" y="303.50">minecraft`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (22,623 samples, 90.63%)</title><rect x="0.8573%" y="277" width="90.6261%" height="15" fill="rgb(213,87,29)" fg:x="214" fg:w="22623"/><text x="1.1073%" y="287.50">minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (22,623 samples, 90.63%)</title><rect x="0.8573%" y="261" width="90.6261%" height="15" fill="rgb(205,151,52)" fg:x="214" fg:w="22623"/><text x="1.1073%" y="271.50">minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_e..</text></g><g><title>minecraft`minecraft::main::_{{closure}} (22,623 samples, 90.63%)</title><rect x="0.8573%" y="245" width="90.6261%" height="15" fill="rgb(253,215,39)" fg:x="214" fg:w="22623"/><text x="1.1073%" y="255.50">minecraft`minecraft::main::_{{closure}}</text></g><g><title>minecraft`minecraft::world::World::draw (13,566 samples, 54.34%)</title><rect x="37.1390%" y="229" width="54.3444%" height="15" fill="rgb(221,220,41)" fg:x="9271" fg:w="13566"/><text x="37.3890%" y="239.50">minecraft`minecraft::world::World::draw</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (22,640 samples, 90.69%)</title><rect x="0.7932%" y="341" width="90.6942%" height="15" fill="rgb(218,133,21)" fg:x="198" fg:w="22640"/><text x="1.0432%" y="351.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (97 samples, 0.39%)</title><rect x="91.4914%" y="325" width="0.3886%" height="15" fill="rgb(221,193,43)" fg:x="22839" fg:w="97"/><text x="91.7414%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (98 samples, 0.39%)</title><rect x="91.4914%" y="341" width="0.3926%" height="15" fill="rgb(240,128,52)" fg:x="22839" fg:w="98"/><text x="91.7414%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (22,752 samples, 91.14%)</title><rect x="0.7651%" y="357" width="91.1429%" height="15" fill="rgb(253,114,12)" fg:x="191" fg:w="22752"/><text x="1.0151%" y="367.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (3 samples, 0.01%)</title><rect x="91.8960%" y="341" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="22940" fg:w="3"/><text x="92.1460%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (22,763 samples, 91.19%)</title><rect x="0.7251%" y="373" width="91.1870%" height="15" fill="rgb(248,225,23)" fg:x="181" fg:w="22763"/><text x="0.9751%" y="383.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (7 samples, 0.03%)</title><rect x="91.9120%" y="325" width="0.0280%" height="15" fill="rgb(250,108,0)" fg:x="22944" fg:w="7"/><text x="92.1620%" y="335.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (6 samples, 0.02%)</title><rect x="91.9160%" y="309" width="0.0240%" height="15" fill="rgb(228,208,7)" fg:x="22945" fg:w="6"/><text x="92.1660%" y="319.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (6 samples, 0.02%)</title><rect x="91.9160%" y="293" width="0.0240%" height="15" fill="rgb(244,45,10)" fg:x="22945" fg:w="6"/><text x="92.1660%" y="303.50"></text></g><g><title>HIToolbox`KeyEventPostedObserver (6 samples, 0.02%)</title><rect x="91.9160%" y="277" width="0.0240%" height="15" fill="rgb(207,125,25)" fg:x="22945" fg:w="6"/><text x="92.1660%" y="287.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyCode (6 samples, 0.02%)</title><rect x="91.9160%" y="261" width="0.0240%" height="15" fill="rgb(210,195,18)" fg:x="22945" fg:w="6"/><text x="92.1660%" y="271.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (5 samples, 0.02%)</title><rect x="91.9200%" y="245" width="0.0200%" height="15" fill="rgb(249,80,12)" fg:x="22946" fg:w="5"/><text x="92.1700%" y="255.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (9 samples, 0.04%)</title><rect x="91.9120%" y="341" width="0.0361%" height="15" fill="rgb(221,65,9)" fg:x="22944" fg:w="9"/><text x="92.1620%" y="351.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (22,773 samples, 91.23%)</title><rect x="0.7251%" y="389" width="91.2270%" height="15" fill="rgb(235,49,36)" fg:x="181" fg:w="22773"/><text x="0.9751%" y="399.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (10 samples, 0.04%)</title><rect x="91.9120%" y="373" width="0.0401%" height="15" fill="rgb(225,32,20)" fg:x="22944" fg:w="10"/><text x="92.1620%" y="383.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (10 samples, 0.04%)</title><rect x="91.9120%" y="357" width="0.0401%" height="15" fill="rgb(215,141,46)" fg:x="22944" fg:w="10"/><text x="92.1620%" y="367.50"></text></g><g><title>AppKit`_DPSNextEvent (22,789 samples, 91.29%)</title><rect x="0.6690%" y="437" width="91.2911%" height="15" fill="rgb(250,160,47)" fg:x="167" fg:w="22789"/><text x="0.9190%" y="447.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (22,785 samples, 91.28%)</title><rect x="0.6850%" y="421" width="91.2751%" height="15" fill="rgb(216,222,40)" fg:x="171" fg:w="22785"/><text x="0.9350%" y="431.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (22,784 samples, 91.27%)</title><rect x="0.6890%" y="405" width="91.2711%" height="15" fill="rgb(234,217,39)" fg:x="172" fg:w="22784"/><text x="0.9390%" y="415.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (22,812 samples, 91.38%)</title><rect x="0.5849%" y="453" width="91.3832%" height="15" fill="rgb(207,178,40)" fg:x="146" fg:w="22812"/><text x="0.8349%" y="463.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>dyld`start (22,962 samples, 91.98%)</title><rect x="0.0000%" y="613" width="91.9841%" height="15" fill="rgb(221,136,13)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>minecraft`main (22,962 samples, 91.98%)</title><rect x="0.0000%" y="597" width="91.9841%" height="15" fill="rgb(249,199,10)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="607.50">minecraft`main</text></g><g><title>minecraft`std::rt::lang_start_internal (22,962 samples, 91.98%)</title><rect x="0.0000%" y="581" width="91.9841%" height="15" fill="rgb(249,222,13)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="591.50">minecraft`std::rt::lang_start_internal</text></g><g><title>minecraft`std::rt::lang_start::_{{closure}} (22,962 samples, 91.98%)</title><rect x="0.0000%" y="565" width="91.9841%" height="15" fill="rgb(244,185,38)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="575.50">minecraft`std::rt::lang_start::_{{closure}}</text></g><g><title>minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace (22,962 samples, 91.98%)</title><rect x="0.0000%" y="549" width="91.9841%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="559.50">minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>minecraft`minecraft::main (22,962 samples, 91.98%)</title><rect x="0.0000%" y="533" width="91.9841%" height="15" fill="rgb(250,229,37)" fg:x="0" fg:w="22962"/><text x="0.2500%" y="543.50">minecraft`minecraft::main</text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size (22,849 samples, 91.53%)</title><rect x="0.4527%" y="517" width="91.5315%" height="15" fill="rgb(206,174,23)" fg:x="113" fg:w="22849"/><text x="0.7027%" y="527.50">minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size</text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (22,849 samples, 91.53%)</title><rect x="0.4527%" y="501" width="91.5315%" height="15" fill="rgb(211,33,43)" fg:x="113" fg:w="22849"/><text x="0.7027%" y="511.50">minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (22,849 samples, 91.53%)</title><rect x="0.4527%" y="485" width="91.5315%" height="15" fill="rgb(245,58,50)" fg:x="113" fg:w="22849"/><text x="0.7027%" y="495.50">minecraft`objc::rc::autorelease::autoreleasepool</text></g><g><title>AppKit`-[NSApplication run] (22,849 samples, 91.53%)</title><rect x="0.4527%" y="469" width="91.5315%" height="15" fill="rgb(244,68,36)" fg:x="113" fg:w="22849"/><text x="0.7027%" y="479.50">AppKit`-[NSApplication run]</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (48 samples, 0.19%)</title><rect x="92.0202%" y="597" width="0.1923%" height="15" fill="rgb(232,229,15)" fg:x="22971" fg:w="48"/><text x="92.2702%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (5 samples, 0.02%)</title><rect x="92.2205%" y="565" width="0.0200%" height="15" fill="rgb(254,30,23)" fg:x="23021" fg:w="5"/><text x="92.4705%" y="575.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (7 samples, 0.03%)</title><rect x="92.2766%" y="501" width="0.0280%" height="15" fill="rgb(235,160,14)" fg:x="23035" fg:w="7"/><text x="92.5266%" y="511.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (17 samples, 0.07%)</title><rect x="92.2485%" y="517" width="0.0681%" height="15" fill="rgb(212,155,44)" fg:x="23028" fg:w="17"/><text x="92.4985%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (21 samples, 0.08%)</title><rect x="92.2445%" y="533" width="0.0841%" height="15" fill="rgb(226,2,50)" fg:x="23027" fg:w="21"/><text x="92.4945%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.01%)</title><rect x="92.3166%" y="517" width="0.0120%" height="15" fill="rgb(234,177,6)" fg:x="23045" fg:w="3"/><text x="92.5666%" y="527.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (3 samples, 0.01%)</title><rect x="92.3567%" y="405" width="0.0120%" height="15" fill="rgb(217,24,9)" fg:x="23055" fg:w="3"/><text x="92.6067%" y="415.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable presentWithOptions:] (4 samples, 0.02%)</title><rect x="92.3807%" y="357" width="0.0160%" height="15" fill="rgb(220,13,46)" fg:x="23061" fg:w="4"/><text x="92.6307%" y="367.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 0.01%)</title><rect x="92.3847%" y="341" width="0.0120%" height="15" fill="rgb(239,221,27)" fg:x="23062" fg:w="3"/><text x="92.6347%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (4 samples, 0.02%)</title><rect x="92.4168%" y="309" width="0.0160%" height="15" fill="rgb(222,198,25)" fg:x="23070" fg:w="4"/><text x="92.6668%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="92.4168%" y="293" width="0.0160%" height="15" fill="rgb(211,99,13)" fg:x="23070" fg:w="4"/><text x="92.6668%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="92.4168%" y="277" width="0.0160%" height="15" fill="rgb(232,111,31)" fg:x="23070" fg:w="4"/><text x="92.6668%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="92.4168%" y="261" width="0.0160%" height="15" fill="rgb(245,82,37)" fg:x="23070" fg:w="4"/><text x="92.6668%" y="271.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (9 samples, 0.04%)</title><rect x="92.4088%" y="325" width="0.0361%" height="15" fill="rgb(227,149,46)" fg:x="23068" fg:w="9"/><text x="92.6588%" y="335.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (12 samples, 0.05%)</title><rect x="92.4008%" y="341" width="0.0481%" height="15" fill="rgb(218,36,50)" fg:x="23066" fg:w="12"/><text x="92.6508%" y="351.50"></text></g><g><title>Metal`MTLDispatchListApply (22 samples, 0.09%)</title><rect x="92.3807%" y="389" width="0.0881%" height="15" fill="rgb(226,80,48)" fg:x="23061" fg:w="22"/><text x="92.6307%" y="399.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (22 samples, 0.09%)</title><rect x="92.3807%" y="373" width="0.0881%" height="15" fill="rgb(238,224,15)" fg:x="23061" fg:w="22"/><text x="92.6307%" y="383.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (18 samples, 0.07%)</title><rect x="92.3967%" y="357" width="0.0721%" height="15" fill="rgb(241,136,10)" fg:x="23065" fg:w="18"/><text x="92.6467%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.01%)</title><rect x="92.4568%" y="341" width="0.0120%" height="15" fill="rgb(208,32,45)" fg:x="23080" fg:w="3"/><text x="92.7068%" y="351.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (23 samples, 0.09%)</title><rect x="92.3807%" y="405" width="0.0921%" height="15" fill="rgb(207,135,9)" fg:x="23061" fg:w="23"/><text x="92.6307%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (9 samples, 0.04%)</title><rect x="92.5089%" y="357" width="0.0361%" height="15" fill="rgb(206,86,44)" fg:x="23093" fg:w="9"/><text x="92.7589%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.03%)</title><rect x="92.5129%" y="341" width="0.0320%" height="15" fill="rgb(245,177,15)" fg:x="23094" fg:w="8"/><text x="92.7629%" y="351.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (10 samples, 0.04%)</title><rect x="92.5089%" y="373" width="0.0401%" height="15" fill="rgb(206,64,50)" fg:x="23093" fg:w="10"/><text x="92.7589%" y="383.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (9 samples, 0.04%)</title><rect x="92.5490%" y="373" width="0.0361%" height="15" fill="rgb(234,36,40)" fg:x="23103" fg:w="9"/><text x="92.7990%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (21 samples, 0.08%)</title><rect x="92.5049%" y="389" width="0.0841%" height="15" fill="rgb(213,64,8)" fg:x="23092" fg:w="21"/><text x="92.7549%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (31 samples, 0.12%)</title><rect x="92.4729%" y="405" width="0.1242%" height="15" fill="rgb(210,75,36)" fg:x="23084" fg:w="31"/><text x="92.7229%" y="415.50"></text></g><g><title>AGXMetal13_3`0x00000001f910ad08 (3 samples, 0.01%)</title><rect x="92.6251%" y="373" width="0.0120%" height="15" fill="rgb(229,88,21)" fg:x="23122" fg:w="3"/><text x="92.8751%" y="383.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (9 samples, 0.04%)</title><rect x="92.6091%" y="405" width="0.0361%" height="15" fill="rgb(252,204,47)" fg:x="23118" fg:w="9"/><text x="92.8591%" y="415.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (5 samples, 0.02%)</title><rect x="92.6251%" y="389" width="0.0200%" height="15" fill="rgb(208,77,27)" fg:x="23122" fg:w="5"/><text x="92.8751%" y="399.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (73 samples, 0.29%)</title><rect x="92.3567%" y="421" width="0.2924%" height="15" fill="rgb(221,76,26)" fg:x="23055" fg:w="73"/><text x="92.6067%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (79 samples, 0.32%)</title><rect x="92.3407%" y="453" width="0.3165%" height="15" fill="rgb(225,139,18)" fg:x="23051" fg:w="79"/><text x="92.5907%" y="463.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (77 samples, 0.31%)</title><rect x="92.3487%" y="437" width="0.3085%" height="15" fill="rgb(230,137,11)" fg:x="23053" fg:w="77"/><text x="92.5987%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (84 samples, 0.34%)</title><rect x="92.3286%" y="533" width="0.3365%" height="15" fill="rgb(212,28,1)" fg:x="23048" fg:w="84"/><text x="92.5786%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (84 samples, 0.34%)</title><rect x="92.3286%" y="517" width="0.3365%" height="15" fill="rgb(248,164,17)" fg:x="23048" fg:w="84"/><text x="92.5786%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (84 samples, 0.34%)</title><rect x="92.3286%" y="501" width="0.3365%" height="15" fill="rgb(222,171,42)" fg:x="23048" fg:w="84"/><text x="92.5786%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (83 samples, 0.33%)</title><rect x="92.3327%" y="485" width="0.3325%" height="15" fill="rgb(243,84,45)" fg:x="23049" fg:w="83"/><text x="92.5827%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (82 samples, 0.33%)</title><rect x="92.3367%" y="469" width="0.3285%" height="15" fill="rgb(252,49,23)" fg:x="23050" fg:w="82"/><text x="92.5867%" y="479.50"></text></g><g><title>IOKit`io_connect_method (1,624 samples, 6.51%)</title><rect x="92.7052%" y="405" width="6.5056%" height="15" fill="rgb(215,19,7)" fg:x="23142" fg:w="1624"/><text x="92.9552%" y="415.50">IOKit`io_..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,624 samples, 6.51%)</title><rect x="92.7052%" y="389" width="6.5056%" height="15" fill="rgb(238,81,41)" fg:x="23142" fg:w="1624"/><text x="92.9552%" y="399.50">libsystem..</text></g><g><title>IOKit`IOConnectCallMethod (1,626 samples, 6.51%)</title><rect x="92.7012%" y="421" width="6.5136%" height="15" fill="rgb(210,199,37)" fg:x="23141" fg:w="1626"/><text x="92.9512%" y="431.50">IOKit`IOC..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (1,629 samples, 6.53%)</title><rect x="92.6932%" y="453" width="6.5257%" height="15" fill="rgb(244,192,49)" fg:x="23139" fg:w="1629"/><text x="92.9432%" y="463.50">IOGPU`-[I..</text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (1,627 samples, 6.52%)</title><rect x="92.7012%" y="437" width="6.5176%" height="15" fill="rgb(226,211,11)" fg:x="23141" fg:w="1627"/><text x="92.9512%" y="447.50">IOGPU`IOG..</text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (1,633 samples, 6.54%)</title><rect x="92.6852%" y="485" width="6.5417%" height="15" fill="rgb(236,162,54)" fg:x="23137" fg:w="1633"/><text x="92.9352%" y="495.50">Metal`-[_..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (1,632 samples, 6.54%)</title><rect x="92.6892%" y="469" width="6.5377%" height="15" fill="rgb(220,229,9)" fg:x="23138" fg:w="1632"/><text x="92.9392%" y="479.50">IOGPU`-[I..</text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (8 samples, 0.03%)</title><rect x="99.2389%" y="437" width="0.0320%" height="15" fill="rgb(250,87,22)" fg:x="24773" fg:w="8"/><text x="99.4889%" y="447.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (9 samples, 0.04%)</title><rect x="99.2389%" y="469" width="0.0361%" height="15" fill="rgb(239,43,17)" fg:x="24773" fg:w="9"/><text x="99.4889%" y="479.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (9 samples, 0.04%)</title><rect x="99.2389%" y="453" width="0.0361%" height="15" fill="rgb(231,177,25)" fg:x="24773" fg:w="9"/><text x="99.4889%" y="463.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (4 samples, 0.02%)</title><rect x="99.2749%" y="469" width="0.0160%" height="15" fill="rgb(219,179,1)" fg:x="24782" fg:w="4"/><text x="99.5249%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="99.2749%" y="453" width="0.0160%" height="15" fill="rgb(238,219,53)" fg:x="24782" fg:w="4"/><text x="99.5249%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="99.2749%" y="437" width="0.0160%" height="15" fill="rgb(232,167,36)" fg:x="24782" fg:w="4"/><text x="99.5249%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1,764 samples, 7.07%)</title><rect x="92.2445%" y="549" width="7.0665%" height="15" fill="rgb(244,19,51)" fg:x="23027" fg:w="1764"/><text x="92.4945%" y="559.50">libdispat..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1,657 samples, 6.64%)</title><rect x="92.6732%" y="533" width="6.6378%" height="15" fill="rgb(224,6,22)" fg:x="23134" fg:w="1657"/><text x="92.9232%" y="543.50">libdispat..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (1,654 samples, 6.63%)</title><rect x="92.6852%" y="517" width="6.6258%" height="15" fill="rgb(224,145,5)" fg:x="23137" fg:w="1654"/><text x="92.9352%" y="527.50">libdispat..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1,654 samples, 6.63%)</title><rect x="92.6852%" y="501" width="6.6258%" height="15" fill="rgb(234,130,49)" fg:x="23137" fg:w="1654"/><text x="92.9352%" y="511.50">libdispat..</text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (18 samples, 0.07%)</title><rect x="99.2389%" y="485" width="0.0721%" height="15" fill="rgb(254,6,2)" fg:x="24773" fg:w="18"/><text x="99.4889%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="99.2910%" y="469" width="0.0200%" height="15" fill="rgb(208,96,46)" fg:x="24786" fg:w="5"/><text x="99.5410%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="99.2910%" y="453" width="0.0200%" height="15" fill="rgb(239,3,39)" fg:x="24786" fg:w="5"/><text x="99.5410%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="99.2910%" y="437" width="0.0200%" height="15" fill="rgb(233,210,1)" fg:x="24786" fg:w="5"/><text x="99.5410%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1,766 samples, 7.07%)</title><rect x="92.2405%" y="565" width="7.0745%" height="15" fill="rgb(244,137,37)" fg:x="23026" fg:w="1766"/><text x="92.4905%" y="575.50">libdispat..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (1,830 samples, 7.33%)</title><rect x="91.9921%" y="613" width="7.3308%" height="15" fill="rgb(240,136,2)" fg:x="22964" fg:w="1830"/><text x="92.2421%" y="623.50">libsystem_..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1,775 samples, 7.11%)</title><rect x="92.2125%" y="597" width="7.1105%" height="15" fill="rgb(239,18,37)" fg:x="23019" fg:w="1775"/><text x="92.4625%" y="607.50">libsystem_..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1,774 samples, 7.11%)</title><rect x="92.2165%" y="581" width="7.1065%" height="15" fill="rgb(218,185,22)" fg:x="23020" fg:w="1774"/><text x="92.4665%" y="591.50">libdispatc..</text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.02%)</title><rect x="99.3591%" y="485" width="0.0200%" height="15" fill="rgb(225,218,4)" fg:x="24803" fg:w="5"/><text x="99.6091%" y="495.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (5 samples, 0.02%)</title><rect x="99.3591%" y="469" width="0.0200%" height="15" fill="rgb(230,182,32)" fg:x="24803" fg:w="5"/><text x="99.6091%" y="479.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (5 samples, 0.02%)</title><rect x="99.3591%" y="453" width="0.0200%" height="15" fill="rgb(242,56,43)" fg:x="24803" fg:w="5"/><text x="99.6091%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (5 samples, 0.02%)</title><rect x="99.3591%" y="437" width="0.0200%" height="15" fill="rgb(233,99,24)" fg:x="24803" fg:w="5"/><text x="99.6091%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="99.3591%" y="421" width="0.0200%" height="15" fill="rgb(234,209,42)" fg:x="24803" fg:w="5"/><text x="99.6091%" y="431.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (5 samples, 0.02%)</title><rect x="99.3831%" y="453" width="0.0200%" height="15" fill="rgb(227,7,12)" fg:x="24809" fg:w="5"/><text x="99.6331%" y="463.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (5 samples, 0.02%)</title><rect x="99.3831%" y="437" width="0.0200%" height="15" fill="rgb(245,203,43)" fg:x="24809" fg:w="5"/><text x="99.6331%" y="447.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (5 samples, 0.02%)</title><rect x="99.4031%" y="453" width="0.0200%" height="15" fill="rgb(238,205,33)" fg:x="24814" fg:w="5"/><text x="99.6531%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="99.4031%" y="437" width="0.0200%" height="15" fill="rgb(231,56,7)" fg:x="24814" fg:w="5"/><text x="99.6531%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="99.4031%" y="421" width="0.0200%" height="15" fill="rgb(244,186,29)" fg:x="24814" fg:w="5"/><text x="99.6531%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="99.4031%" y="405" width="0.0200%" height="15" fill="rgb(234,111,31)" fg:x="24814" fg:w="5"/><text x="99.6531%" y="415.50"></text></g><g><title>HIToolbox`PushToCGEventQueue(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (4 samples, 0.02%)</title><rect x="99.4352%" y="453" width="0.0160%" height="15" fill="rgb(241,149,10)" fg:x="24822" fg:w="4"/><text x="99.6852%" y="463.50"></text></g><g><title>Foundation`DYLD-STUB$$objc_loadWeak (3 samples, 0.01%)</title><rect x="99.4672%" y="373" width="0.0120%" height="15" fill="rgb(249,206,44)" fg:x="24830" fg:w="3"/><text x="99.7172%" y="383.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (6 samples, 0.02%)</title><rect x="99.4672%" y="389" width="0.0240%" height="15" fill="rgb(251,153,30)" fg:x="24830" fg:w="6"/><text x="99.7172%" y="399.50"></text></g><g><title>SkyLight`CGSConnectionByID (10 samples, 0.04%)</title><rect x="99.4592%" y="421" width="0.0401%" height="15" fill="rgb(239,152,38)" fg:x="24828" fg:w="10"/><text x="99.7092%" y="431.50"></text></g><g><title>SkyLight`invocation function for block in CGSGetKnownConnectionByID(unsigned int) (8 samples, 0.03%)</title><rect x="99.4672%" y="405" width="0.0320%" height="15" fill="rgb(249,139,47)" fg:x="24830" fg:w="8"/><text x="99.7172%" y="415.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (3 samples, 0.01%)</title><rect x="99.5073%" y="389" width="0.0120%" height="15" fill="rgb(244,64,35)" fg:x="24840" fg:w="3"/><text x="99.7573%" y="399.50"></text></g><g><title>SkyLight`(anonymous namespace)::KeyEventLog::getLogString (5 samples, 0.02%)</title><rect x="99.5073%" y="405" width="0.0200%" height="15" fill="rgb(216,46,15)" fg:x="24840" fg:w="5"/><text x="99.7573%" y="415.50"></text></g><g><title>libsystem_c.dylib`__dtoa (4 samples, 0.02%)</title><rect x="99.5393%" y="325" width="0.0160%" height="15" fill="rgb(250,74,19)" fg:x="24848" fg:w="4"/><text x="99.7893%" y="335.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (8 samples, 0.03%)</title><rect x="99.5273%" y="405" width="0.0320%" height="15" fill="rgb(249,42,33)" fg:x="24845" fg:w="8"/><text x="99.7773%" y="415.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (8 samples, 0.03%)</title><rect x="99.5273%" y="389" width="0.0320%" height="15" fill="rgb(242,149,17)" fg:x="24845" fg:w="8"/><text x="99.7773%" y="399.50"></text></g><g><title>libsystem_c.dylib`snprintf (8 samples, 0.03%)</title><rect x="99.5273%" y="373" width="0.0320%" height="15" fill="rgb(244,29,21)" fg:x="24845" fg:w="8"/><text x="99.7773%" y="383.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (8 samples, 0.03%)</title><rect x="99.5273%" y="357" width="0.0320%" height="15" fill="rgb(220,130,37)" fg:x="24845" fg:w="8"/><text x="99.7773%" y="367.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (8 samples, 0.03%)</title><rect x="99.5273%" y="341" width="0.0320%" height="15" fill="rgb(211,67,2)" fg:x="24845" fg:w="8"/><text x="99.7773%" y="351.50"></text></g><g><title>SkyLight`CGSEventLogEvent (16 samples, 0.06%)</title><rect x="99.4993%" y="421" width="0.0641%" height="15" fill="rgb(235,68,52)" fg:x="24838" fg:w="16"/><text x="99.7493%" y="431.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (7 samples, 0.03%)</title><rect x="99.5674%" y="405" width="0.0280%" height="15" fill="rgb(246,142,3)" fg:x="24855" fg:w="7"/><text x="99.8174%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (7 samples, 0.03%)</title><rect x="99.5674%" y="389" width="0.0280%" height="15" fill="rgb(241,25,7)" fg:x="24855" fg:w="7"/><text x="99.8174%" y="399.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (7 samples, 0.03%)</title><rect x="99.6074%" y="357" width="0.0280%" height="15" fill="rgb(242,119,39)" fg:x="24865" fg:w="7"/><text x="99.8574%" y="367.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (4 samples, 0.02%)</title><rect x="99.6194%" y="341" width="0.0160%" height="15" fill="rgb(241,98,45)" fg:x="24868" fg:w="4"/><text x="99.8694%" y="351.50"></text></g><g><title>IOKit`IOHIDEventAppendEvent (3 samples, 0.01%)</title><rect x="99.6234%" y="325" width="0.0120%" height="15" fill="rgb(254,28,30)" fg:x="24869" fg:w="3"/><text x="99.8734%" y="335.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (9 samples, 0.04%)</title><rect x="99.6074%" y="373" width="0.0361%" height="15" fill="rgb(241,142,54)" fg:x="24865" fg:w="9"/><text x="99.8574%" y="383.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (13 samples, 0.05%)</title><rect x="99.5954%" y="405" width="0.0521%" height="15" fill="rgb(222,85,15)" fg:x="24862" fg:w="13"/><text x="99.8454%" y="415.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (12 samples, 0.05%)</title><rect x="99.5994%" y="389" width="0.0481%" height="15" fill="rgb(210,85,47)" fg:x="24863" fg:w="12"/><text x="99.8494%" y="399.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (62 samples, 0.25%)</title><rect x="99.5634%" y="421" width="0.2484%" height="15" fill="rgb(224,206,25)" fg:x="24854" fg:w="62"/><text x="99.8134%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (41 samples, 0.16%)</title><rect x="99.6475%" y="405" width="0.1642%" height="15" fill="rgb(243,201,19)" fg:x="24875" fg:w="41"/><text x="99.8975%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (40 samples, 0.16%)</title><rect x="99.6515%" y="389" width="0.1602%" height="15" fill="rgb(236,59,4)" fg:x="24876" fg:w="40"/><text x="99.9015%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (40 samples, 0.16%)</title><rect x="99.6515%" y="373" width="0.1602%" height="15" fill="rgb(254,179,45)" fg:x="24876" fg:w="40"/><text x="99.9015%" y="383.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (94 samples, 0.38%)</title><rect x="99.4512%" y="453" width="0.3766%" height="15" fill="rgb(226,14,10)" fg:x="24826" fg:w="94"/><text x="99.7012%" y="463.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (92 samples, 0.37%)</title><rect x="99.4592%" y="437" width="0.3685%" height="15" fill="rgb(244,27,41)" fg:x="24828" fg:w="92"/><text x="99.7092%" y="447.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (115 samples, 0.46%)</title><rect x="99.3831%" y="469" width="0.4607%" height="15" fill="rgb(235,35,32)" fg:x="24809" fg:w="115"/><text x="99.6331%" y="479.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (118 samples, 0.47%)</title><rect x="99.3791%" y="485" width="0.4727%" height="15" fill="rgb(218,68,31)" fg:x="24808" fg:w="118"/><text x="99.6291%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (126 samples, 0.50%)</title><rect x="99.3510%" y="517" width="0.5047%" height="15" fill="rgb(207,120,37)" fg:x="24801" fg:w="126"/><text x="99.6010%" y="527.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (126 samples, 0.50%)</title><rect x="99.3510%" y="501" width="0.5047%" height="15" fill="rgb(227,98,0)" fg:x="24801" fg:w="126"/><text x="99.6010%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (127 samples, 0.51%)</title><rect x="99.3510%" y="533" width="0.5088%" height="15" fill="rgb(207,7,3)" fg:x="24801" fg:w="127"/><text x="99.6010%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (6 samples, 0.02%)</title><rect x="99.8638%" y="485" width="0.0240%" height="15" fill="rgb(206,98,19)" fg:x="24929" fg:w="6"/><text x="100.1138%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (8 samples, 0.03%)</title><rect x="99.8638%" y="501" width="0.0320%" height="15" fill="rgb(217,5,26)" fg:x="24929" fg:w="8"/><text x="100.1138%" y="511.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (9 samples, 0.04%)</title><rect x="99.8638%" y="517" width="0.0361%" height="15" fill="rgb(235,190,38)" fg:x="24929" fg:w="9"/><text x="100.1138%" y="527.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (29 samples, 0.12%)</title><rect x="99.8638%" y="533" width="0.1162%" height="15" fill="rgb(247,86,24)" fg:x="24929" fg:w="29"/><text x="100.1138%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (20 samples, 0.08%)</title><rect x="99.8999%" y="517" width="0.0801%" height="15" fill="rgb(205,101,16)" fg:x="24938" fg:w="20"/><text x="100.1499%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (20 samples, 0.08%)</title><rect x="99.8999%" y="501" width="0.0801%" height="15" fill="rgb(246,168,33)" fg:x="24938" fg:w="20"/><text x="100.1499%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (20 samples, 0.08%)</title><rect x="99.8999%" y="485" width="0.0801%" height="15" fill="rgb(231,114,1)" fg:x="24938" fg:w="20"/><text x="100.1499%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (164 samples, 0.66%)</title><rect x="99.3350%" y="549" width="0.6570%" height="15" fill="rgb(207,184,53)" fg:x="24797" fg:w="164"/><text x="99.5850%" y="559.50"></text></g><g><title>all (24,963 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="24963"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (169 samples, 0.68%)</title><rect x="99.3230%" y="613" width="0.6770%" height="15" fill="rgb(212,188,45)" fg:x="24794" fg:w="169"/><text x="99.5730%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (169 samples, 0.68%)</title><rect x="99.3230%" y="597" width="0.6770%" height="15" fill="rgb(223,154,38)" fg:x="24794" fg:w="169"/><text x="99.5730%" y="607.50"></text></g><g><title>AppKit`_NSEventThread (167 samples, 0.67%)</title><rect x="99.3310%" y="581" width="0.6690%" height="15" fill="rgb(251,22,52)" fg:x="24796" fg:w="167"/><text x="99.5810%" y="591.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (167 samples, 0.67%)</title><rect x="99.3310%" y="565" width="0.6690%" height="15" fill="rgb(229,209,22)" fg:x="24796" fg:w="167"/><text x="99.5810%" y="575.50"></text></g></svg></svg>