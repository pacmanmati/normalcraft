<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="30065"><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::instance_create_surface (4 samples, 0.01%)</title><rect x="0.0000%" y="501" width="0.0133%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="511.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::new (5 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0166%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="527.50"></text></g><g><title>minecraft`minecraft::text::Font::new (13 samples, 0.04%)</title><rect x="0.0200%" y="517" width="0.0432%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="13"/><text x="0.2700%" y="527.50"></text></g><g><title>minecraft`image::io::free_functions::save_buffer_with_format_impl (12 samples, 0.04%)</title><rect x="0.0233%" y="501" width="0.0399%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="12"/><text x="0.2733%" y="511.50"></text></g><g><title>minecraft`&lt;image::codecs::png::PngEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (12 samples, 0.04%)</title><rect x="0.0233%" y="485" width="0.0399%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="12"/><text x="0.2733%" y="495.50"></text></g><g><title>minecraft`image::codecs::png::PngEncoder&lt;W&gt;::encode_inner (12 samples, 0.04%)</title><rect x="0.0233%" y="469" width="0.0399%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="12"/><text x="0.2733%" y="479.50"></text></g><g><title>minecraft`png::encoder::Writer&lt;W&gt;::write_image_data (12 samples, 0.04%)</title><rect x="0.0233%" y="453" width="0.0399%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="12"/><text x="0.2733%" y="463.50"></text></g><g><title>minecraft`png::filter::filter (11 samples, 0.04%)</title><rect x="0.0266%" y="437" width="0.0366%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="11"/><text x="0.2766%" y="447.50"></text></g><g><title>minecraft`png::filter::filter_internal (5 samples, 0.02%)</title><rect x="0.0466%" y="421" width="0.0166%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="5"/><text x="0.2966%" y="431.50"></text></g><g><title>minecraft`minecraft::world::World::new (9 samples, 0.03%)</title><rect x="0.0632%" y="517" width="0.0299%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="9"/><text x="0.3132%" y="527.50"></text></g><g><title>minecraft`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,3_usize&gt;&gt;::get (5 samples, 0.02%)</title><rect x="0.0765%" y="501" width="0.0166%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="5"/><text x="0.3265%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (6 samples, 0.02%)</title><rect x="0.1064%" y="389" width="0.0200%" height="15" fill="rgb(240,193,28)" fg:x="32" fg:w="6"/><text x="0.3564%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (6 samples, 0.02%)</title><rect x="0.1064%" y="373" width="0.0200%" height="15" fill="rgb(216,20,37)" fg:x="32" fg:w="6"/><text x="0.3564%" y="383.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="0.1064%" y="357" width="0.0200%" height="15" fill="rgb(206,188,39)" fg:x="32" fg:w="6"/><text x="0.3564%" y="367.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (6 samples, 0.02%)</title><rect x="0.1064%" y="341" width="0.0200%" height="15" fill="rgb(217,207,13)" fg:x="32" fg:w="6"/><text x="0.3564%" y="351.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (6 samples, 0.02%)</title><rect x="0.1064%" y="325" width="0.0200%" height="15" fill="rgb(231,73,38)" fg:x="32" fg:w="6"/><text x="0.3564%" y="335.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (6 samples, 0.02%)</title><rect x="0.1064%" y="309" width="0.0200%" height="15" fill="rgb(225,20,46)" fg:x="32" fg:w="6"/><text x="0.3564%" y="319.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (6 samples, 0.02%)</title><rect x="0.1064%" y="293" width="0.0200%" height="15" fill="rgb(210,31,41)" fg:x="32" fg:w="6"/><text x="0.3564%" y="303.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (6 samples, 0.02%)</title><rect x="0.1064%" y="277" width="0.0200%" height="15" fill="rgb(221,200,47)" fg:x="32" fg:w="6"/><text x="0.3564%" y="287.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (4 samples, 0.01%)</title><rect x="0.1131%" y="261" width="0.0133%" height="15" fill="rgb(226,26,5)" fg:x="34" fg:w="4"/><text x="0.3631%" y="271.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (4 samples, 0.01%)</title><rect x="0.1131%" y="245" width="0.0133%" height="15" fill="rgb(249,33,26)" fg:x="34" fg:w="4"/><text x="0.3631%" y="255.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (4 samples, 0.01%)</title><rect x="0.1131%" y="229" width="0.0133%" height="15" fill="rgb(235,183,28)" fg:x="34" fg:w="4"/><text x="0.3631%" y="239.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (7 samples, 0.02%)</title><rect x="0.1064%" y="405" width="0.0233%" height="15" fill="rgb(221,5,38)" fg:x="32" fg:w="7"/><text x="0.3564%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (10 samples, 0.03%)</title><rect x="0.1064%" y="421" width="0.0333%" height="15" fill="rgb(247,18,42)" fg:x="32" fg:w="10"/><text x="0.3564%" y="431.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (14 samples, 0.05%)</title><rect x="0.0998%" y="485" width="0.0466%" height="15" fill="rgb(241,131,45)" fg:x="30" fg:w="14"/><text x="0.3498%" y="495.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (14 samples, 0.05%)</title><rect x="0.0998%" y="469" width="0.0466%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="14"/><text x="0.3498%" y="479.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (14 samples, 0.05%)</title><rect x="0.0998%" y="453" width="0.0466%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="14"/><text x="0.3498%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (12 samples, 0.04%)</title><rect x="0.1064%" y="437" width="0.0399%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="12"/><text x="0.3564%" y="447.50"></text></g><g><title>minecraft`winit::platform_impl::platform::Window::new (17 samples, 0.06%)</title><rect x="0.0931%" y="517" width="0.0565%" height="15" fill="rgb(214,148,48)" fg:x="28" fg:w="17"/><text x="0.3431%" y="527.50"></text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::new (17 samples, 0.06%)</title><rect x="0.0931%" y="501" width="0.0565%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="17"/><text x="0.3431%" y="511.50"></text></g><g><title>AppKit`_NSInitializeAppContext (4 samples, 0.01%)</title><rect x="0.1663%" y="469" width="0.0133%" height="15" fill="rgb(209,103,24)" fg:x="50" fg:w="4"/><text x="0.4163%" y="479.50"></text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (10 samples, 0.03%)</title><rect x="0.1497%" y="517" width="0.0333%" height="15" fill="rgb(229,88,8)" fg:x="45" fg:w="10"/><text x="0.3997%" y="527.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (10 samples, 0.03%)</title><rect x="0.1497%" y="501" width="0.0333%" height="15" fill="rgb(213,181,19)" fg:x="45" fg:w="10"/><text x="0.3997%" y="511.50"></text></g><g><title>AppKit`-[NSApplication init] (10 samples, 0.03%)</title><rect x="0.1497%" y="485" width="0.0333%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="10"/><text x="0.3997%" y="495.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (7 samples, 0.02%)</title><rect x="0.2195%" y="357" width="0.0233%" height="15" fill="rgb(241,83,37)" fg:x="66" fg:w="7"/><text x="0.4695%" y="367.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager mouseMoved:] (10 samples, 0.03%)</title><rect x="0.2162%" y="373" width="0.0333%" height="15" fill="rgb(233,36,39)" fg:x="65" fg:w="10"/><text x="0.4662%" y="383.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (15 samples, 0.05%)</title><rect x="0.2129%" y="389" width="0.0499%" height="15" fill="rgb(226,3,54)" fg:x="64" fg:w="15"/><text x="0.4629%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (18 samples, 0.06%)</title><rect x="0.2129%" y="405" width="0.0599%" height="15" fill="rgb(245,192,40)" fg:x="64" fg:w="18"/><text x="0.4629%" y="415.50"></text></g><g><title>HIToolbox`TISKeyboardLayoutCapsLockIsRomanPlane (4 samples, 0.01%)</title><rect x="0.2761%" y="309" width="0.0133%" height="15" fill="rgb(238,167,29)" fg:x="83" fg:w="4"/><text x="0.5261%" y="319.50"></text></g><g><title>AppKit`_NSKeyboardUIHandleSymbolicHotKey (6 samples, 0.02%)</title><rect x="0.2727%" y="405" width="0.0200%" height="15" fill="rgb(232,182,51)" fg:x="82" fg:w="6"/><text x="0.5227%" y="415.50"></text></g><g><title>HIToolbox`_IsSymbolicHotKeyEvent (6 samples, 0.02%)</title><rect x="0.2727%" y="389" width="0.0200%" height="15" fill="rgb(231,60,39)" fg:x="82" fg:w="6"/><text x="0.5227%" y="399.50"></text></g><g><title>HIToolbox`KeyEventSetDerivedData (6 samples, 0.02%)</title><rect x="0.2727%" y="373" width="0.0200%" height="15" fill="rgb(208,69,12)" fg:x="82" fg:w="6"/><text x="0.5227%" y="383.50"></text></g><g><title>HIToolbox`TranslateKeyToUniChar (6 samples, 0.02%)</title><rect x="0.2727%" y="357" width="0.0200%" height="15" fill="rgb(235,93,37)" fg:x="82" fg:w="6"/><text x="0.5227%" y="367.50"></text></g><g><title>HIToolbox`TSMKeyTranslateWithInputSource (6 samples, 0.02%)</title><rect x="0.2727%" y="341" width="0.0200%" height="15" fill="rgb(213,116,39)" fg:x="82" fg:w="6"/><text x="0.5227%" y="351.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (5 samples, 0.02%)</title><rect x="0.2761%" y="325" width="0.0166%" height="15" fill="rgb(222,207,29)" fg:x="83" fg:w="5"/><text x="0.5261%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (38 samples, 0.13%)</title><rect x="0.1929%" y="421" width="0.1264%" height="15" fill="rgb(206,96,30)" fg:x="58" fg:w="38"/><text x="0.4429%" y="431.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (44 samples, 0.15%)</title><rect x="0.1829%" y="453" width="0.1463%" height="15" fill="rgb(218,138,4)" fg:x="55" fg:w="44"/><text x="0.4329%" y="463.50"></text></g><g><title>minecraft`winit::platform_impl::platform::app::send_event (43 samples, 0.14%)</title><rect x="0.1863%" y="437" width="0.1430%" height="15" fill="rgb(250,191,14)" fg:x="56" fg:w="43"/><text x="0.4363%" y="447.50"></text></g><g><title>HIToolbox`Check1MenuForKeyEvent(MenuData*, CheckMenuData*) (7 samples, 0.02%)</title><rect x="0.3625%" y="309" width="0.0233%" height="15" fill="rgb(239,60,40)" fg:x="109" fg:w="7"/><text x="0.6125%" y="319.50"></text></g><g><title>HIToolbox`PopulateMenu(MenuData*, OpaqueEventTargetRef*, CheckMenuData*, unsigned int, double) (5 samples, 0.02%)</title><rect x="0.3692%" y="293" width="0.0166%" height="15" fill="rgb(206,27,48)" fg:x="111" fg:w="5"/><text x="0.6192%" y="303.50"></text></g><g><title>HIToolbox`SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned int, double, unsigned int, OpaqueEventRef*, unsigned char, unsigned char*) (5 samples, 0.02%)</title><rect x="0.3692%" y="277" width="0.0166%" height="15" fill="rgb(225,35,8)" fg:x="111" fg:w="5"/><text x="0.6192%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.01%)</title><rect x="0.3725%" y="261" width="0.0133%" height="15" fill="rgb(250,213,24)" fg:x="112" fg:w="4"/><text x="0.6225%" y="271.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="0.3725%" y="245" width="0.0133%" height="15" fill="rgb(247,123,22)" fg:x="112" fg:w="4"/><text x="0.6225%" y="255.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="0.3725%" y="229" width="0.0133%" height="15" fill="rgb(231,138,38)" fg:x="112" fg:w="4"/><text x="0.6225%" y="239.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (13 samples, 0.04%)</title><rect x="0.3559%" y="421" width="0.0432%" height="15" fill="rgb(231,145,46)" fg:x="107" fg:w="13"/><text x="0.6059%" y="431.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (13 samples, 0.04%)</title><rect x="0.3559%" y="405" width="0.0432%" height="15" fill="rgb(251,118,11)" fg:x="107" fg:w="13"/><text x="0.6059%" y="415.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (13 samples, 0.04%)</title><rect x="0.3559%" y="389" width="0.0432%" height="15" fill="rgb(217,147,25)" fg:x="107" fg:w="13"/><text x="0.6059%" y="399.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (12 samples, 0.04%)</title><rect x="0.3592%" y="373" width="0.0399%" height="15" fill="rgb(247,81,37)" fg:x="108" fg:w="12"/><text x="0.6092%" y="383.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (12 samples, 0.04%)</title><rect x="0.3592%" y="357" width="0.0399%" height="15" fill="rgb(209,12,38)" fg:x="108" fg:w="12"/><text x="0.6092%" y="367.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (12 samples, 0.04%)</title><rect x="0.3592%" y="341" width="0.0399%" height="15" fill="rgb(227,1,9)" fg:x="108" fg:w="12"/><text x="0.6092%" y="351.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (12 samples, 0.04%)</title><rect x="0.3592%" y="325" width="0.0399%" height="15" fill="rgb(248,47,43)" fg:x="108" fg:w="12"/><text x="0.6092%" y="335.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (15 samples, 0.05%)</title><rect x="0.3559%" y="437" width="0.0499%" height="15" fill="rgb(221,10,30)" fg:x="107" fg:w="15"/><text x="0.6059%" y="447.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (5 samples, 0.02%)</title><rect x="0.4324%" y="309" width="0.0166%" height="15" fill="rgb(210,229,1)" fg:x="130" fg:w="5"/><text x="0.6824%" y="319.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (5 samples, 0.02%)</title><rect x="0.4324%" y="293" width="0.0166%" height="15" fill="rgb(222,148,37)" fg:x="130" fg:w="5"/><text x="0.6824%" y="303.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (5 samples, 0.02%)</title><rect x="0.4324%" y="277" width="0.0166%" height="15" fill="rgb(234,67,33)" fg:x="130" fg:w="5"/><text x="0.6824%" y="287.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (5 samples, 0.02%)</title><rect x="0.4324%" y="261" width="0.0166%" height="15" fill="rgb(247,98,35)" fg:x="130" fg:w="5"/><text x="0.6824%" y="271.50"></text></g><g><title>HIToolbox`ShowHide (4 samples, 0.01%)</title><rect x="0.4357%" y="245" width="0.0133%" height="15" fill="rgb(247,138,52)" fg:x="131" fg:w="4"/><text x="0.6857%" y="255.50"></text></g><g><title>HIToolbox`_ShowHideWindows (4 samples, 0.01%)</title><rect x="0.4357%" y="229" width="0.0133%" height="15" fill="rgb(213,79,30)" fg:x="131" fg:w="4"/><text x="0.6857%" y="239.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (4 samples, 0.01%)</title><rect x="0.4357%" y="213" width="0.0133%" height="15" fill="rgb(246,177,23)" fg:x="131" fg:w="4"/><text x="0.6857%" y="223.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (4 samples, 0.01%)</title><rect x="0.4357%" y="197" width="0.0133%" height="15" fill="rgb(230,62,27)" fg:x="131" fg:w="4"/><text x="0.6857%" y="207.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (4 samples, 0.01%)</title><rect x="0.4357%" y="181" width="0.0133%" height="15" fill="rgb(216,154,8)" fg:x="131" fg:w="4"/><text x="0.6857%" y="191.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (4 samples, 0.01%)</title><rect x="0.4357%" y="165" width="0.0133%" height="15" fill="rgb(244,35,45)" fg:x="131" fg:w="4"/><text x="0.6857%" y="175.50"></text></g><g><title>HIToolbox`HIView::SendDraw (4 samples, 0.01%)</title><rect x="0.4357%" y="149" width="0.0133%" height="15" fill="rgb(251,115,12)" fg:x="131" fg:w="4"/><text x="0.6857%" y="159.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (4 samples, 0.01%)</title><rect x="0.4357%" y="133" width="0.0133%" height="15" fill="rgb(240,54,50)" fg:x="131" fg:w="4"/><text x="0.6857%" y="143.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="0.4357%" y="117" width="0.0133%" height="15" fill="rgb(233,84,52)" fg:x="131" fg:w="4"/><text x="0.6857%" y="127.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (4 samples, 0.01%)</title><rect x="0.4357%" y="101" width="0.0133%" height="15" fill="rgb(207,117,47)" fg:x="131" fg:w="4"/><text x="0.6857%" y="111.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (4 samples, 0.01%)</title><rect x="0.4357%" y="85" width="0.0133%" height="15" fill="rgb(249,43,39)" fg:x="131" fg:w="4"/><text x="0.6857%" y="95.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (4 samples, 0.01%)</title><rect x="0.4357%" y="69" width="0.0133%" height="15" fill="rgb(209,38,44)" fg:x="131" fg:w="4"/><text x="0.6857%" y="79.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (4 samples, 0.01%)</title><rect x="0.4357%" y="53" width="0.0133%" height="15" fill="rgb(236,212,23)" fg:x="131" fg:w="4"/><text x="0.6857%" y="63.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (6 samples, 0.02%)</title><rect x="0.4324%" y="389" width="0.0200%" height="15" fill="rgb(242,79,21)" fg:x="130" fg:w="6"/><text x="0.6824%" y="399.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (6 samples, 0.02%)</title><rect x="0.4324%" y="373" width="0.0200%" height="15" fill="rgb(211,96,35)" fg:x="130" fg:w="6"/><text x="0.6824%" y="383.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (6 samples, 0.02%)</title><rect x="0.4324%" y="357" width="0.0200%" height="15" fill="rgb(253,215,40)" fg:x="130" fg:w="6"/><text x="0.6824%" y="367.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (6 samples, 0.02%)</title><rect x="0.4324%" y="341" width="0.0200%" height="15" fill="rgb(211,81,21)" fg:x="130" fg:w="6"/><text x="0.6824%" y="351.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (6 samples, 0.02%)</title><rect x="0.4324%" y="325" width="0.0200%" height="15" fill="rgb(208,190,38)" fg:x="130" fg:w="6"/><text x="0.6824%" y="335.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (9 samples, 0.03%)</title><rect x="0.4557%" y="277" width="0.0299%" height="15" fill="rgb(235,213,38)" fg:x="137" fg:w="9"/><text x="0.7057%" y="287.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (9 samples, 0.03%)</title><rect x="0.4557%" y="261" width="0.0299%" height="15" fill="rgb(237,122,38)" fg:x="137" fg:w="9"/><text x="0.7057%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (9 samples, 0.03%)</title><rect x="0.4557%" y="245" width="0.0299%" height="15" fill="rgb(244,218,35)" fg:x="137" fg:w="9"/><text x="0.7057%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (9 samples, 0.03%)</title><rect x="0.4557%" y="229" width="0.0299%" height="15" fill="rgb(240,68,47)" fg:x="137" fg:w="9"/><text x="0.7057%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.03%)</title><rect x="0.4557%" y="213" width="0.0299%" height="15" fill="rgb(210,16,53)" fg:x="137" fg:w="9"/><text x="0.7057%" y="223.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (13 samples, 0.04%)</title><rect x="0.4557%" y="293" width="0.0432%" height="15" fill="rgb(235,124,12)" fg:x="137" fg:w="13"/><text x="0.7057%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.01%)</title><rect x="0.4856%" y="277" width="0.0133%" height="15" fill="rgb(224,169,11)" fg:x="146" fg:w="4"/><text x="0.7356%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.01%)</title><rect x="0.4856%" y="261" width="0.0133%" height="15" fill="rgb(250,166,2)" fg:x="146" fg:w="4"/><text x="0.7356%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (18 samples, 0.06%)</title><rect x="0.4524%" y="357" width="0.0599%" height="15" fill="rgb(242,216,29)" fg:x="136" fg:w="18"/><text x="0.7024%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (18 samples, 0.06%)</title><rect x="0.4524%" y="341" width="0.0599%" height="15" fill="rgb(230,116,27)" fg:x="136" fg:w="18"/><text x="0.7024%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (18 samples, 0.06%)</title><rect x="0.4524%" y="325" width="0.0599%" height="15" fill="rgb(228,99,48)" fg:x="136" fg:w="18"/><text x="0.7024%" y="335.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (18 samples, 0.06%)</title><rect x="0.4524%" y="309" width="0.0599%" height="15" fill="rgb(253,11,6)" fg:x="136" fg:w="18"/><text x="0.7024%" y="319.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (8 samples, 0.03%)</title><rect x="0.5289%" y="277" width="0.0266%" height="15" fill="rgb(247,143,39)" fg:x="159" fg:w="8"/><text x="0.7789%" y="287.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (10 samples, 0.03%)</title><rect x="0.5289%" y="293" width="0.0333%" height="15" fill="rgb(236,97,10)" fg:x="159" fg:w="10"/><text x="0.7789%" y="303.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (6 samples, 0.02%)</title><rect x="0.5621%" y="261" width="0.0200%" height="15" fill="rgb(233,208,19)" fg:x="169" fg:w="6"/><text x="0.8121%" y="271.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (8 samples, 0.03%)</title><rect x="0.5621%" y="293" width="0.0266%" height="15" fill="rgb(216,164,2)" fg:x="169" fg:w="8"/><text x="0.8121%" y="303.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (8 samples, 0.03%)</title><rect x="0.5621%" y="277" width="0.0266%" height="15" fill="rgb(220,129,5)" fg:x="169" fg:w="8"/><text x="0.8121%" y="287.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (19 samples, 0.06%)</title><rect x="0.5289%" y="309" width="0.0632%" height="15" fill="rgb(242,17,10)" fg:x="159" fg:w="19"/><text x="0.7789%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,156 samples, 3.85%)</title><rect x="0.5987%" y="229" width="3.8450%" height="15" fill="rgb(242,107,0)" fg:x="180" fg:w="1156"/><text x="0.8487%" y="239.50">libs..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (229 samples, 0.76%)</title><rect x="4.4437%" y="229" width="0.7617%" height="15" fill="rgb(251,28,31)" fg:x="1336" fg:w="229"/><text x="4.6937%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (125 samples, 0.42%)</title><rect x="5.2054%" y="229" width="0.4158%" height="15" fill="rgb(233,223,10)" fg:x="1565" fg:w="125"/><text x="5.4554%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (904 samples, 3.01%)</title><rect x="5.6212%" y="229" width="3.0068%" height="15" fill="rgb(215,21,27)" fg:x="1690" fg:w="904"/><text x="5.8712%" y="239.50">lib..</text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.19%)</title><rect x="8.6280%" y="229" width="0.1896%" height="15" fill="rgb(232,23,21)" fg:x="2594" fg:w="57"/><text x="8.8780%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,190 samples, 3.96%)</title><rect x="8.8176%" y="229" width="3.9581%" height="15" fill="rgb(244,5,23)" fg:x="2651" fg:w="1190"/><text x="9.0676%" y="239.50">libs..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.16%)</title><rect x="12.7757%" y="229" width="0.1563%" height="15" fill="rgb(226,81,46)" fg:x="3841" fg:w="47"/><text x="13.0257%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (438 samples, 1.46%)</title><rect x="12.9353%" y="229" width="1.4568%" height="15" fill="rgb(247,70,30)" fg:x="3889" fg:w="438"/><text x="13.1853%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (553 samples, 1.84%)</title><rect x="14.3922%" y="229" width="1.8393%" height="15" fill="rgb(212,68,19)" fg:x="4327" fg:w="553"/><text x="14.6422%" y="239.50">l..</text></g><g><title>AGXMetal13_3`0x00000001f90fee00 (6 samples, 0.02%)</title><rect x="16.2348%" y="165" width="0.0200%" height="15" fill="rgb(240,187,13)" fg:x="4881" fg:w="6"/><text x="16.4848%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f90f6e64 (8 samples, 0.03%)</title><rect x="16.2348%" y="181" width="0.0266%" height="15" fill="rgb(223,113,26)" fg:x="4881" fg:w="8"/><text x="16.4848%" y="191.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (13 samples, 0.04%)</title><rect x="16.2348%" y="197" width="0.0432%" height="15" fill="rgb(206,192,2)" fg:x="4881" fg:w="13"/><text x="16.4848%" y="207.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (8 samples, 0.03%)</title><rect x="16.2880%" y="117" width="0.0266%" height="15" fill="rgb(241,108,4)" fg:x="4897" fg:w="8"/><text x="16.5380%" y="127.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (8 samples, 0.03%)</title><rect x="16.2880%" y="101" width="0.0266%" height="15" fill="rgb(247,173,49)" fg:x="4897" fg:w="8"/><text x="16.5380%" y="111.50"></text></g><g><title>IOKit`IOConnectCallMethod (8 samples, 0.03%)</title><rect x="16.2880%" y="85" width="0.0266%" height="15" fill="rgb(224,114,35)" fg:x="4897" fg:w="8"/><text x="16.5380%" y="95.50"></text></g><g><title>IOKit`io_connect_method (8 samples, 0.03%)</title><rect x="16.2880%" y="69" width="0.0266%" height="15" fill="rgb(245,159,27)" fg:x="4897" fg:w="8"/><text x="16.5380%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.03%)</title><rect x="16.2880%" y="53" width="0.0266%" height="15" fill="rgb(245,172,44)" fg:x="4897" fg:w="8"/><text x="16.5380%" y="63.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (9 samples, 0.03%)</title><rect x="16.2880%" y="133" width="0.0299%" height="15" fill="rgb(236,23,11)" fg:x="4897" fg:w="9"/><text x="16.5380%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce4dc (12 samples, 0.04%)</title><rect x="16.2880%" y="165" width="0.0399%" height="15" fill="rgb(205,117,38)" fg:x="4897" fg:w="12"/><text x="16.5380%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce63c (12 samples, 0.04%)</title><rect x="16.2880%" y="149" width="0.0399%" height="15" fill="rgb(237,72,25)" fg:x="4897" fg:w="12"/><text x="16.5380%" y="159.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (31 samples, 0.10%)</title><rect x="16.2315%" y="213" width="0.1031%" height="15" fill="rgb(244,70,9)" fg:x="4880" fg:w="31"/><text x="16.4815%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (17 samples, 0.06%)</title><rect x="16.2781%" y="197" width="0.0565%" height="15" fill="rgb(217,125,39)" fg:x="4894" fg:w="17"/><text x="16.5281%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (14 samples, 0.05%)</title><rect x="16.2880%" y="181" width="0.0466%" height="15" fill="rgb(235,36,10)" fg:x="4897" fg:w="14"/><text x="16.5380%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (33 samples, 0.11%)</title><rect x="16.2315%" y="229" width="0.1098%" height="15" fill="rgb(251,123,47)" fg:x="4880" fg:w="33"/><text x="16.4815%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$free (89 samples, 0.30%)</title><rect x="16.3413%" y="229" width="0.2960%" height="15" fill="rgb(221,13,13)" fg:x="4913" fg:w="89"/><text x="16.5913%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$malloc (116 samples, 0.39%)</title><rect x="16.6373%" y="229" width="0.3858%" height="15" fill="rgb(238,131,9)" fg:x="5002" fg:w="116"/><text x="16.8873%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$memcmp (55 samples, 0.18%)</title><rect x="17.0231%" y="229" width="0.1829%" height="15" fill="rgb(211,50,8)" fg:x="5118" fg:w="55"/><text x="17.2731%" y="239.50"></text></g><g><title>minecraft`DYLD-STUB$$memcpy (74 samples, 0.25%)</title><rect x="17.2061%" y="229" width="0.2461%" height="15" fill="rgb(245,182,24)" fg:x="5173" fg:w="74"/><text x="17.4561%" y="239.50"></text></g><g><title>minecraft`__rdl_alloc (118 samples, 0.39%)</title><rect x="17.4522%" y="229" width="0.3925%" height="15" fill="rgb(242,14,37)" fg:x="5247" fg:w="118"/><text x="17.7022%" y="239.50"></text></g><g><title>minecraft`__rust_alloc (63 samples, 0.21%)</title><rect x="17.8447%" y="229" width="0.2095%" height="15" fill="rgb(246,228,12)" fg:x="5365" fg:w="63"/><text x="18.0947%" y="239.50"></text></g><g><title>minecraft`core::hash::Hasher::write_str (1,122 samples, 3.73%)</title><rect x="18.0609%" y="229" width="3.7319%" height="15" fill="rgb(213,55,15)" fg:x="5430" fg:w="1122"/><text x="18.3109%" y="239.50">mine..</text></g><g><title>minecraft`core::ptr::drop_in_place&lt;minecraft::renderer::Object&gt; (12 samples, 0.04%)</title><rect x="21.7928%" y="229" width="0.0399%" height="15" fill="rgb(209,9,3)" fg:x="6552" fg:w="12"/><text x="22.0428%" y="239.50"></text></g><g><title>AGXMetal13_3`0x00000001f91d89c0 (4 samples, 0.01%)</title><rect x="21.8460%" y="181" width="0.0133%" height="15" fill="rgb(230,59,30)" fg:x="6568" fg:w="4"/><text x="22.0960%" y="191.50"></text></g><g><title>AGXMetal13_3`0x00000001f91cdcdc (7 samples, 0.02%)</title><rect x="21.9325%" y="101" width="0.0233%" height="15" fill="rgb(209,121,21)" fg:x="6594" fg:w="7"/><text x="22.1825%" y="111.50"></text></g><g><title>AGXMetal13_3`0x00000001f91e5a84 (20 samples, 0.07%)</title><rect x="21.8959%" y="117" width="0.0665%" height="15" fill="rgb(220,109,13)" fg:x="6583" fg:w="20"/><text x="22.1459%" y="127.50"></text></g><g><title>AGXMetal13_3`0x00000001f9108bfc (28 samples, 0.09%)</title><rect x="21.8959%" y="133" width="0.0931%" height="15" fill="rgb(232,18,1)" fg:x="6583" fg:w="28"/><text x="22.1459%" y="143.50"></text></g><g><title>minecraft`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (40 samples, 0.13%)</title><rect x="21.8793%" y="181" width="0.1330%" height="15" fill="rgb(215,41,42)" fg:x="6578" fg:w="40"/><text x="22.1293%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (36 samples, 0.12%)</title><rect x="21.8926%" y="165" width="0.1197%" height="15" fill="rgb(224,123,36)" fg:x="6582" fg:w="36"/><text x="22.1426%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (35 samples, 0.12%)</title><rect x="21.8959%" y="149" width="0.1164%" height="15" fill="rgb(240,125,3)" fg:x="6583" fg:w="35"/><text x="22.1459%" y="159.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.02%)</title><rect x="22.0223%" y="181" width="0.0166%" height="15" fill="rgb(205,98,50)" fg:x="6621" fg:w="5"/><text x="22.2723%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (5 samples, 0.02%)</title><rect x="22.0223%" y="165" width="0.0166%" height="15" fill="rgb(205,185,37)" fg:x="6621" fg:w="5"/><text x="22.2723%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f910b710 (5 samples, 0.02%)</title><rect x="22.0223%" y="149" width="0.0166%" height="15" fill="rgb(238,207,15)" fg:x="6621" fg:w="5"/><text x="22.2723%" y="159.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (66 samples, 0.22%)</title><rect x="21.8327%" y="213" width="0.2195%" height="15" fill="rgb(213,199,42)" fg:x="6564" fg:w="66"/><text x="22.0827%" y="223.50"></text></g><g><title>minecraft`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (66 samples, 0.22%)</title><rect x="21.8327%" y="197" width="0.2195%" height="15" fill="rgb(235,201,11)" fg:x="6564" fg:w="66"/><text x="22.0827%" y="207.50"></text></g><g><title>AGXMetal13_3`0x00000001f91079cc (5 samples, 0.02%)</title><rect x="22.0689%" y="133" width="0.0166%" height="15" fill="rgb(207,46,11)" fg:x="6635" fg:w="5"/><text x="22.3189%" y="143.50"></text></g><g><title>AGXMetal13_3`0x00000001f910a544 (10 samples, 0.03%)</title><rect x="22.0689%" y="149" width="0.0333%" height="15" fill="rgb(241,35,35)" fg:x="6635" fg:w="10"/><text x="22.3189%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (5 samples, 0.02%)</title><rect x="22.0855%" y="133" width="0.0166%" height="15" fill="rgb(243,32,47)" fg:x="6640" fg:w="5"/><text x="22.3355%" y="143.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (12 samples, 0.04%)</title><rect x="22.0655%" y="181" width="0.0399%" height="15" fill="rgb(247,202,23)" fg:x="6634" fg:w="12"/><text x="22.3155%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (11 samples, 0.04%)</title><rect x="22.0689%" y="165" width="0.0366%" height="15" fill="rgb(219,102,11)" fg:x="6635" fg:w="11"/><text x="22.3189%" y="175.50"></text></g><g><title>IOKit`io_connect_method (23 samples, 0.08%)</title><rect x="22.1254%" y="53" width="0.0765%" height="15" fill="rgb(243,110,44)" fg:x="6652" fg:w="23"/><text x="22.3754%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (22 samples, 0.07%)</title><rect x="22.1287%" y="37" width="0.0732%" height="15" fill="rgb(222,74,54)" fg:x="6653" fg:w="22"/><text x="22.3787%" y="47.50"></text></g><g><title>CoreFoundation`_CFRelease (25 samples, 0.08%)</title><rect x="22.1221%" y="101" width="0.0832%" height="15" fill="rgb(216,99,12)" fg:x="6651" fg:w="25"/><text x="22.3721%" y="111.50"></text></g><g><title>IOGPU`ioGPUResourceFinalize (24 samples, 0.08%)</title><rect x="22.1254%" y="85" width="0.0798%" height="15" fill="rgb(226,22,26)" fg:x="6652" fg:w="24"/><text x="22.3754%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (24 samples, 0.08%)</title><rect x="22.1254%" y="69" width="0.0798%" height="15" fill="rgb(217,163,10)" fg:x="6652" fg:w="24"/><text x="22.3754%" y="79.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (26 samples, 0.09%)</title><rect x="22.1221%" y="117" width="0.0865%" height="15" fill="rgb(213,25,53)" fg:x="6651" fg:w="26"/><text x="22.3721%" y="127.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (30 samples, 0.10%)</title><rect x="22.1154%" y="165" width="0.0998%" height="15" fill="rgb(252,105,26)" fg:x="6649" fg:w="30"/><text x="22.3654%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f9105884 (29 samples, 0.10%)</title><rect x="22.1187%" y="149" width="0.0965%" height="15" fill="rgb(220,39,43)" fg:x="6650" fg:w="29"/><text x="22.3687%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (29 samples, 0.10%)</title><rect x="22.1187%" y="133" width="0.0965%" height="15" fill="rgb(229,68,48)" fg:x="6650" fg:w="29"/><text x="22.3687%" y="143.50"></text></g><g><title>minecraft`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (5 samples, 0.02%)</title><rect x="22.2152%" y="165" width="0.0166%" height="15" fill="rgb(252,8,32)" fg:x="6679" fg:w="5"/><text x="22.4652%" y="175.50"></text></g><g><title>minecraft`wgpu_core::device::Device&lt;A&gt;::maintain (37 samples, 0.12%)</title><rect x="22.1121%" y="181" width="0.1231%" height="15" fill="rgb(223,20,43)" fg:x="6648" fg:w="37"/><text x="22.3621%" y="191.50"></text></g><g><title>AGXMetal13_3`0x00000001f910b710 (4 samples, 0.01%)</title><rect x="22.2385%" y="149" width="0.0133%" height="15" fill="rgb(229,81,49)" fg:x="6686" fg:w="4"/><text x="22.4885%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.01%)</title><rect x="22.2385%" y="133" width="0.0133%" height="15" fill="rgb(236,28,36)" fg:x="6686" fg:w="4"/><text x="22.4885%" y="143.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (62 samples, 0.21%)</title><rect x="22.0522%" y="213" width="0.2062%" height="15" fill="rgb(249,185,26)" fg:x="6630" fg:w="62"/><text x="22.3022%" y="223.50"></text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (61 samples, 0.20%)</title><rect x="22.0555%" y="197" width="0.2029%" height="15" fill="rgb(249,174,33)" fg:x="6631" fg:w="61"/><text x="22.3055%" y="207.50"></text></g><g><title>minecraft`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (6 samples, 0.02%)</title><rect x="22.2385%" y="181" width="0.0200%" height="15" fill="rgb(233,201,37)" fg:x="6686" fg:w="6"/><text x="22.4885%" y="191.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (6 samples, 0.02%)</title><rect x="22.2385%" y="165" width="0.0200%" height="15" fill="rgb(221,78,26)" fg:x="6686" fg:w="6"/><text x="22.4885%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1,741 samples, 5.79%)</title><rect x="22.2584%" y="197" width="5.7908%" height="15" fill="rgb(250,127,30)" fg:x="6692" fg:w="1741"/><text x="22.5084%" y="207.50">libsyst..</text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (1,758 samples, 5.85%)</title><rect x="22.2584%" y="213" width="5.8473%" height="15" fill="rgb(230,49,44)" fg:x="6692" fg:w="1758"/><text x="22.5084%" y="223.50">minecra..</text></g><g><title>minecraft`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (17 samples, 0.06%)</title><rect x="28.0492%" y="197" width="0.0565%" height="15" fill="rgb(229,67,23)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="207.50"></text></g><g><title>minecraft`wgpu_core::device::queue::prepare_staging_buffer (17 samples, 0.06%)</title><rect x="28.0492%" y="181" width="0.0565%" height="15" fill="rgb(249,83,47)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="191.50"></text></g><g><title>minecraft`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (17 samples, 0.06%)</title><rect x="28.0492%" y="165" width="0.0565%" height="15" fill="rgb(215,43,3)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="175.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce4dc (17 samples, 0.06%)</title><rect x="28.0492%" y="149" width="0.0565%" height="15" fill="rgb(238,154,13)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="159.50"></text></g><g><title>AGXMetal13_3`0x00000001f90ce63c (17 samples, 0.06%)</title><rect x="28.0492%" y="133" width="0.0565%" height="15" fill="rgb(219,56,2)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (17 samples, 0.06%)</title><rect x="28.0492%" y="117" width="0.0565%" height="15" fill="rgb(233,0,4)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="127.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (17 samples, 0.06%)</title><rect x="28.0492%" y="101" width="0.0565%" height="15" fill="rgb(235,30,7)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="111.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (17 samples, 0.06%)</title><rect x="28.0492%" y="85" width="0.0565%" height="15" fill="rgb(250,79,13)" fg:x="8433" fg:w="17"/><text x="28.2992%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (16 samples, 0.05%)</title><rect x="28.0526%" y="69" width="0.0532%" height="15" fill="rgb(211,146,34)" fg:x="8434" fg:w="16"/><text x="28.3026%" y="79.50"></text></g><g><title>IOKit`io_connect_method (16 samples, 0.05%)</title><rect x="28.0526%" y="53" width="0.0532%" height="15" fill="rgb(228,22,38)" fg:x="8434" fg:w="16"/><text x="28.3026%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (16 samples, 0.05%)</title><rect x="28.0526%" y="37" width="0.0532%" height="15" fill="rgb(235,168,5)" fg:x="8434" fg:w="16"/><text x="28.3026%" y="47.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (4 samples, 0.01%)</title><rect x="28.1257%" y="181" width="0.0133%" height="15" fill="rgb(221,155,16)" fg:x="8456" fg:w="4"/><text x="28.3757%" y="191.50"></text></g><g><title>minecraft`wgpu::Surface::get_current_texture (7 samples, 0.02%)</title><rect x="28.1191%" y="213" width="0.0233%" height="15" fill="rgb(215,215,53)" fg:x="8454" fg:w="7"/><text x="28.3691%" y="223.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (7 samples, 0.02%)</title><rect x="28.1191%" y="197" width="0.0233%" height="15" fill="rgb(223,4,10)" fg:x="8454" fg:w="7"/><text x="28.3691%" y="207.50"></text></g><g><title>minecraft`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (5 samples, 0.02%)</title><rect x="28.1424%" y="197" width="0.0166%" height="15" fill="rgb(234,103,6)" fg:x="8461" fg:w="5"/><text x="28.3924%" y="207.50"></text></g><g><title>minecraft`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (5 samples, 0.02%)</title><rect x="28.1424%" y="181" width="0.0166%" height="15" fill="rgb(227,97,0)" fg:x="8461" fg:w="5"/><text x="28.3924%" y="191.50"></text></g><g><title>minecraft`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::present (5 samples, 0.02%)</title><rect x="28.1424%" y="165" width="0.0166%" height="15" fill="rgb(234,150,53)" fg:x="8461" fg:w="5"/><text x="28.3924%" y="175.50"></text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (4 samples, 0.01%)</title><rect x="28.1457%" y="149" width="0.0133%" height="15" fill="rgb(228,201,54)" fg:x="8462" fg:w="4"/><text x="28.3957%" y="159.50"></text></g><g><title>minecraft`wgpu::SurfaceTexture::present (6 samples, 0.02%)</title><rect x="28.1424%" y="213" width="0.0200%" height="15" fill="rgb(222,22,37)" fg:x="8461" fg:w="6"/><text x="28.3924%" y="223.50"></text></g><g><title>minecraft`minecraft::renderer::Renderer::draw (1,907 samples, 6.34%)</title><rect x="21.8327%" y="229" width="6.3429%" height="15" fill="rgb(237,53,32)" fg:x="6564" fg:w="1907"/><text x="22.0827%" y="239.50">minecraf..</text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (86 samples, 0.29%)</title><rect x="42.3516%" y="213" width="0.2860%" height="15" fill="rgb(233,25,53)" fg:x="12733" fg:w="86"/><text x="42.6016%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (59 samples, 0.20%)</title><rect x="42.6376%" y="213" width="0.1962%" height="15" fill="rgb(210,40,34)" fg:x="12819" fg:w="59"/><text x="42.8876%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (407 samples, 1.35%)</title><rect x="42.8339%" y="213" width="1.3537%" height="15" fill="rgb(241,220,44)" fg:x="12878" fg:w="407"/><text x="43.0839%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (969 samples, 3.22%)</title><rect x="44.1876%" y="213" width="3.2230%" height="15" fill="rgb(235,28,35)" fg:x="13285" fg:w="969"/><text x="44.4376%" y="223.50">lib..</text></g><g><title>libsystem_malloc.dylib`_szone_free (260 samples, 0.86%)</title><rect x="47.4106%" y="213" width="0.8648%" height="15" fill="rgb(210,56,17)" fg:x="14254" fg:w="260"/><text x="47.6606%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (938 samples, 3.12%)</title><rect x="48.2754%" y="213" width="3.1199%" height="15" fill="rgb(224,130,29)" fg:x="14514" fg:w="938"/><text x="48.5254%" y="223.50">lib..</text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (152 samples, 0.51%)</title><rect x="54.6316%" y="197" width="0.5056%" height="15" fill="rgb(235,212,8)" fg:x="16425" fg:w="152"/><text x="54.8816%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (488 samples, 1.62%)</title><rect x="57.5753%" y="181" width="1.6231%" height="15" fill="rgb(223,33,50)" fg:x="17310" fg:w="488"/><text x="57.8253%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,476 samples, 8.24%)</title><rect x="51.3953%" y="213" width="8.2355%" height="15" fill="rgb(219,149,13)" fg:x="15452" fg:w="2476"/><text x="51.6453%" y="223.50">libsystem_m..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,351 samples, 4.49%)</title><rect x="55.1372%" y="197" width="4.4936%" height="15" fill="rgb(250,156,29)" fg:x="16577" fg:w="1351"/><text x="55.3872%" y="207.50">libsy..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (130 samples, 0.43%)</title><rect x="59.1984%" y="181" width="0.4324%" height="15" fill="rgb(216,193,19)" fg:x="17798" fg:w="130"/><text x="59.4484%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (75 samples, 0.25%)</title><rect x="59.6308%" y="213" width="0.2495%" height="15" fill="rgb(216,135,14)" fg:x="17928" fg:w="75"/><text x="59.8808%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (97 samples, 0.32%)</title><rect x="60.6386%" y="197" width="0.3226%" height="15" fill="rgb(241,47,5)" fg:x="18231" fg:w="97"/><text x="60.8886%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (24 samples, 0.08%)</title><rect x="63.8616%" y="181" width="0.0798%" height="15" fill="rgb(233,42,35)" fg:x="19200" fg:w="24"/><text x="64.1116%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (332 samples, 1.10%)</title><rect x="63.9415%" y="181" width="1.1043%" height="15" fill="rgb(231,13,6)" fg:x="19224" fg:w="332"/><text x="64.1915%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (205 samples, 0.68%)</title><rect x="66.9583%" y="165" width="0.6819%" height="15" fill="rgb(207,181,40)" fg:x="20131" fg:w="205"/><text x="67.2083%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,484 samples, 8.26%)</title><rect x="59.8803%" y="213" width="8.2621%" height="15" fill="rgb(254,173,49)" fg:x="18003" fg:w="2484"/><text x="60.1303%" y="223.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,159 samples, 7.18%)</title><rect x="60.9613%" y="197" width="7.1811%" height="15" fill="rgb(221,1,38)" fg:x="18328" fg:w="2159"/><text x="61.2113%" y="207.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (931 samples, 3.10%)</title><rect x="65.0457%" y="181" width="3.0966%" height="15" fill="rgb(206,124,46)" fg:x="19556" fg:w="931"/><text x="65.2957%" y="191.50">lib..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (151 samples, 0.50%)</title><rect x="67.6401%" y="165" width="0.5022%" height="15" fill="rgb(249,21,11)" fg:x="20336" fg:w="151"/><text x="67.8901%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (150 samples, 0.50%)</title><rect x="68.1424%" y="213" width="0.4989%" height="15" fill="rgb(222,201,40)" fg:x="20487" fg:w="150"/><text x="68.3924%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.13%)</title><rect x="68.6413%" y="213" width="0.1264%" height="15" fill="rgb(235,61,29)" fg:x="20637" fg:w="38"/><text x="68.8913%" y="223.50"></text></g><g><title>libsystem_platform.dylib`__bzero (46 samples, 0.15%)</title><rect x="68.7677%" y="213" width="0.1530%" height="15" fill="rgb(219,207,3)" fg:x="20675" fg:w="46"/><text x="69.0177%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (285 samples, 0.95%)</title><rect x="68.9207%" y="213" width="0.9479%" height="15" fill="rgb(222,56,46)" fg:x="20721" fg:w="285"/><text x="69.1707%" y="223.50"></text></g><g><title>minecraft`DYLD-STUB$$free (165 samples, 0.55%)</title><rect x="69.8686%" y="213" width="0.5488%" height="15" fill="rgb(239,76,54)" fg:x="21006" fg:w="165"/><text x="70.1186%" y="223.50"></text></g><g><title>minecraft`DYLD-STUB$$malloc (49 samples, 0.16%)</title><rect x="70.4174%" y="213" width="0.1630%" height="15" fill="rgb(231,124,27)" fg:x="21171" fg:w="49"/><text x="70.6674%" y="223.50"></text></g><g><title>minecraft`__rdl_alloc (33 samples, 0.11%)</title><rect x="70.5804%" y="213" width="0.1098%" height="15" fill="rgb(249,195,6)" fg:x="21220" fg:w="33"/><text x="70.8304%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (60 samples, 0.20%)</title><rect x="71.4153%" y="197" width="0.1996%" height="15" fill="rgb(237,174,47)" fg:x="21471" fg:w="60"/><text x="71.6653%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (50 samples, 0.17%)</title><rect x="71.6148%" y="197" width="0.1663%" height="15" fill="rgb(206,201,31)" fg:x="21531" fg:w="50"/><text x="71.8648%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (759 samples, 2.52%)</title><rect x="71.7811%" y="197" width="2.5245%" height="15" fill="rgb(231,57,52)" fg:x="21581" fg:w="759"/><text x="72.0311%" y="207.50">li..</text></g><g><title>libsystem_malloc.dylib`_szone_free (174 samples, 0.58%)</title><rect x="74.3057%" y="197" width="0.5787%" height="15" fill="rgb(248,177,22)" fg:x="22340" fg:w="174"/><text x="74.5557%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (154 samples, 0.51%)</title><rect x="77.8979%" y="181" width="0.5122%" height="15" fill="rgb(215,211,37)" fg:x="23420" fg:w="154"/><text x="78.1479%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (447 samples, 1.49%)</title><rect x="81.0211%" y="165" width="1.4868%" height="15" fill="rgb(241,128,51)" fg:x="24359" fg:w="447"/><text x="81.2711%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,454 samples, 8.16%)</title><rect x="74.8844%" y="197" width="8.1623%" height="15" fill="rgb(227,165,31)" fg:x="22514" fg:w="2454"/><text x="75.1344%" y="207.50">libsystem_m..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,393 samples, 4.63%)</title><rect x="78.4134%" y="181" width="4.6333%" height="15" fill="rgb(228,167,24)" fg:x="23575" fg:w="1393"/><text x="78.6634%" y="191.50">libsy..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (162 samples, 0.54%)</title><rect x="82.5079%" y="165" width="0.5388%" height="15" fill="rgb(228,143,12)" fg:x="24806" fg:w="162"/><text x="82.7579%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (160 samples, 0.53%)</title><rect x="83.0467%" y="197" width="0.5322%" height="15" fill="rgb(249,149,8)" fg:x="24968" fg:w="160"/><text x="83.2967%" y="207.50"></text></g><g><title>libsystem_platform.dylib`__bzero (48 samples, 0.16%)</title><rect x="83.5789%" y="197" width="0.1597%" height="15" fill="rgb(243,35,44)" fg:x="25128" fg:w="48"/><text x="83.8289%" y="207.50"></text></g><g><title>minecraft`core::ptr::drop_in_place&lt;minecraft::renderer::Object&gt; (4,669 samples, 15.53%)</title><rect x="70.6902%" y="213" width="15.5297%" height="15" fill="rgb(246,89,9)" fg:x="21253" fg:w="4669"/><text x="70.9402%" y="223.50">minecraft`core::ptr::dro..</text></g><g><title>libsystem_platform.dylib`_platform_memset (746 samples, 2.48%)</title><rect x="83.7386%" y="197" width="2.4813%" height="15" fill="rgb(233,213,13)" fg:x="25176" fg:w="746"/><text x="83.9886%" y="207.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (138 samples, 0.46%)</title><rect x="88.7843%" y="181" width="0.4590%" height="15" fill="rgb(233,141,41)" fg:x="26693" fg:w="138"/><text x="89.0343%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (13 samples, 0.04%)</title><rect x="92.1570%" y="165" width="0.0432%" height="15" fill="rgb(239,167,4)" fg:x="27707" fg:w="13"/><text x="92.4070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (515 samples, 1.71%)</title><rect x="92.2002%" y="165" width="1.7130%" height="15" fill="rgb(209,217,16)" fg:x="27720" fg:w="515"/><text x="92.4502%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (177 samples, 0.59%)</title><rect x="95.6794%" y="149" width="0.5887%" height="15" fill="rgb(219,88,35)" fg:x="28766" fg:w="177"/><text x="95.9294%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,529 samples, 8.41%)</title><rect x="88.3386%" y="197" width="8.4118%" height="15" fill="rgb(220,193,23)" fg:x="26559" fg:w="2529"/><text x="88.5886%" y="207.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,257 samples, 7.51%)</title><rect x="89.2433%" y="181" width="7.5071%" height="15" fill="rgb(230,90,52)" fg:x="26831" fg:w="2257"/><text x="89.4933%" y="191.50">libsystem_..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (853 samples, 2.84%)</title><rect x="93.9132%" y="165" width="2.8372%" height="15" fill="rgb(252,106,19)" fg:x="28235" fg:w="853"/><text x="94.1632%" y="175.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (145 samples, 0.48%)</title><rect x="96.2681%" y="149" width="0.4823%" height="15" fill="rgb(206,74,20)" fg:x="28943" fg:w="145"/><text x="96.5181%" y="159.50"></text></g><g><title>minecraft`minecraft::world::World::draw (20,694 samples, 68.83%)</title><rect x="28.1756%" y="229" width="68.8309%" height="15" fill="rgb(230,138,44)" fg:x="8471" fg:w="20694"/><text x="28.4256%" y="239.50">minecraft`minecraft::world::World::draw</text></g><g><title>minecraft`minecraft::world::cube_vertices (3,243 samples, 10.79%)</title><rect x="86.2199%" y="213" width="10.7866%" height="15" fill="rgb(235,182,43)" fg:x="25922" fg:w="3243"/><text x="86.4699%" y="223.50">minecraft`minecr..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.26%)</title><rect x="96.7504%" y="197" width="0.2561%" height="15" fill="rgb(242,16,51)" fg:x="29088" fg:w="77"/><text x="97.0004%" y="207.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (29,181 samples, 97.06%)</title><rect x="0.5289%" y="325" width="97.0597%" height="15" fill="rgb(248,9,4)" fg:x="159" fg:w="29181"/><text x="0.7789%" y="335.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>minecraft`winit::platform_impl::platform::observer::control_flow_end_handler (29,161 samples, 96.99%)</title><rect x="0.5954%" y="309" width="96.9932%" height="15" fill="rgb(210,31,22)" fg:x="179" fg:w="29161"/><text x="0.8454%" y="319.50">minecraft`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::AppState::cleared (29,161 samples, 96.99%)</title><rect x="0.5954%" y="293" width="96.9932%" height="15" fill="rgb(239,54,39)" fg:x="179" fg:w="29161"/><text x="0.8454%" y="303.50">minecraft`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (29,161 samples, 96.99%)</title><rect x="0.5954%" y="277" width="96.9932%" height="15" fill="rgb(230,99,41)" fg:x="179" fg:w="29161"/><text x="0.8454%" y="287.50">minecraft`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (29,161 samples, 96.99%)</title><rect x="0.5954%" y="261" width="96.9932%" height="15" fill="rgb(253,106,12)" fg:x="179" fg:w="29161"/><text x="0.8454%" y="271.50">minecraft`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event</text></g><g><title>minecraft`minecraft::main::_{{closure}} (29,160 samples, 96.99%)</title><rect x="0.5987%" y="245" width="96.9899%" height="15" fill="rgb(213,46,41)" fg:x="180" fg:w="29160"/><text x="0.8487%" y="255.50">minecraft`minecraft::main::_{{closure}}</text></g><g><title>minecraft`minecraft::world::cube_vertices (175 samples, 0.58%)</title><rect x="97.0065%" y="229" width="0.5821%" height="15" fill="rgb(215,133,35)" fg:x="29165" fg:w="175"/><text x="97.2565%" y="239.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (29,185 samples, 97.07%)</title><rect x="0.5222%" y="341" width="97.0730%" height="15" fill="rgb(213,28,5)" fg:x="157" fg:w="29185"/><text x="0.7722%" y="351.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (118 samples, 0.39%)</title><rect x="97.5952%" y="341" width="0.3925%" height="15" fill="rgb(215,77,49)" fg:x="29342" fg:w="118"/><text x="97.8452%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (118 samples, 0.39%)</title><rect x="97.5952%" y="325" width="0.3925%" height="15" fill="rgb(248,100,22)" fg:x="29342" fg:w="118"/><text x="97.8452%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (4 samples, 0.01%)</title><rect x="97.9943%" y="341" width="0.0133%" height="15" fill="rgb(208,67,9)" fg:x="29462" fg:w="4"/><text x="98.2443%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (29,313 samples, 97.50%)</title><rect x="0.5122%" y="357" width="97.4988%" height="15" fill="rgb(219,133,21)" fg:x="154" fg:w="29313"/><text x="0.7622%" y="367.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (29,332 samples, 97.56%)</title><rect x="0.4524%" y="373" width="97.5619%" height="15" fill="rgb(246,46,29)" fg:x="136" fg:w="29332"/><text x="0.7024%" y="383.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`PostEventToQueueInternal (7 samples, 0.02%)</title><rect x="98.0309%" y="309" width="0.0233%" height="15" fill="rgb(246,185,52)" fg:x="29473" fg:w="7"/><text x="98.2809%" y="319.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (6 samples, 0.02%)</title><rect x="98.0343%" y="293" width="0.0200%" height="15" fill="rgb(252,136,11)" fg:x="29474" fg:w="6"/><text x="98.2843%" y="303.50"></text></g><g><title>HIToolbox`KeyEventPostedObserver (6 samples, 0.02%)</title><rect x="98.0343%" y="277" width="0.0200%" height="15" fill="rgb(219,138,53)" fg:x="29474" fg:w="6"/><text x="98.2843%" y="287.50"></text></g><g><title>HIToolbox`TSMProcessRawKeyCode (6 samples, 0.02%)</title><rect x="98.0343%" y="261" width="0.0200%" height="15" fill="rgb(211,51,23)" fg:x="29474" fg:w="6"/><text x="98.2843%" y="271.50"></text></g><g><title>HIToolbox`TSMTranslateKeyEvent (6 samples, 0.02%)</title><rect x="98.0343%" y="245" width="0.0200%" height="15" fill="rgb(247,221,28)" fg:x="29474" fg:w="6"/><text x="98.2843%" y="255.50"></text></g><g><title>HIToolbox`TSMGetInputSourceProperty (4 samples, 0.01%)</title><rect x="98.0409%" y="229" width="0.0133%" height="15" fill="rgb(251,222,45)" fg:x="29476" fg:w="4"/><text x="98.2909%" y="239.50"></text></g><g><title>HIToolbox`islGetInputSourceProperty (4 samples, 0.01%)</title><rect x="98.0409%" y="213" width="0.0133%" height="15" fill="rgb(217,162,53)" fg:x="29476" fg:w="4"/><text x="98.2909%" y="223.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (10 samples, 0.03%)</title><rect x="98.0276%" y="325" width="0.0333%" height="15" fill="rgb(229,93,14)" fg:x="29472" fg:w="10"/><text x="98.2776%" y="335.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (29,347 samples, 97.61%)</title><rect x="0.4524%" y="389" width="97.6118%" height="15" fill="rgb(209,67,49)" fg:x="136" fg:w="29347"/><text x="0.7024%" y="399.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (14 samples, 0.05%)</title><rect x="98.0176%" y="373" width="0.0466%" height="15" fill="rgb(213,87,29)" fg:x="29469" fg:w="14"/><text x="98.2676%" y="383.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (14 samples, 0.05%)</title><rect x="98.0176%" y="357" width="0.0466%" height="15" fill="rgb(205,151,52)" fg:x="29469" fg:w="14"/><text x="98.2676%" y="367.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (14 samples, 0.05%)</title><rect x="98.0176%" y="341" width="0.0466%" height="15" fill="rgb(253,215,39)" fg:x="29469" fg:w="14"/><text x="98.2676%" y="351.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (4 samples, 0.01%)</title><rect x="98.0642%" y="357" width="0.0133%" height="15" fill="rgb(221,220,41)" fg:x="29483" fg:w="4"/><text x="98.3142%" y="367.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (4 samples, 0.01%)</title><rect x="98.0642%" y="341" width="0.0133%" height="15" fill="rgb(218,133,21)" fg:x="29483" fg:w="4"/><text x="98.3142%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (4 samples, 0.01%)</title><rect x="98.0642%" y="325" width="0.0133%" height="15" fill="rgb(221,193,43)" fg:x="29483" fg:w="4"/><text x="98.3142%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.01%)</title><rect x="98.0642%" y="309" width="0.0133%" height="15" fill="rgb(240,128,52)" fg:x="29483" fg:w="4"/><text x="98.3142%" y="319.50"></text></g><g><title>AppKit`_DPSNextEvent (29,368 samples, 97.68%)</title><rect x="0.4058%" y="437" width="97.6817%" height="15" fill="rgb(253,114,12)" fg:x="122" fg:w="29368"/><text x="0.6558%" y="447.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (29,363 samples, 97.67%)</title><rect x="0.4224%" y="421" width="97.6651%" height="15" fill="rgb(215,223,47)" fg:x="127" fg:w="29363"/><text x="0.6724%" y="431.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (29,362 samples, 97.66%)</title><rect x="0.4257%" y="405" width="97.6617%" height="15" fill="rgb(248,225,23)" fg:x="128" fg:w="29362"/><text x="0.6757%" y="415.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`_DropPendingBoost (7 samples, 0.02%)</title><rect x="98.0642%" y="389" width="0.0233%" height="15" fill="rgb(250,108,0)" fg:x="29483" fg:w="7"/><text x="98.3142%" y="399.50"></text></g><g><title>CoreFoundation`_CFRelease (7 samples, 0.02%)</title><rect x="98.0642%" y="373" width="0.0233%" height="15" fill="rgb(228,208,7)" fg:x="29483" fg:w="7"/><text x="98.3142%" y="383.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (29,395 samples, 97.77%)</title><rect x="0.3293%" y="453" width="97.7715%" height="15" fill="rgb(244,45,10)" fg:x="99" fg:w="29395"/><text x="0.5793%" y="463.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>dyld`start (29,497 samples, 98.11%)</title><rect x="0.0000%" y="613" width="98.1108%" height="15" fill="rgb(207,125,25)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>minecraft`main (29,497 samples, 98.11%)</title><rect x="0.0000%" y="597" width="98.1108%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="607.50">minecraft`main</text></g><g><title>minecraft`std::rt::lang_start_internal (29,497 samples, 98.11%)</title><rect x="0.0000%" y="581" width="98.1108%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="591.50">minecraft`std::rt::lang_start_internal</text></g><g><title>minecraft`std::rt::lang_start::_{{closure}} (29,497 samples, 98.11%)</title><rect x="0.0000%" y="565" width="98.1108%" height="15" fill="rgb(221,65,9)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="575.50">minecraft`std::rt::lang_start::_{{closure}}</text></g><g><title>minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace (29,497 samples, 98.11%)</title><rect x="0.0000%" y="549" width="98.1108%" height="15" fill="rgb(235,49,36)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="559.50">minecraft`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>minecraft`minecraft::main (29,497 samples, 98.11%)</title><rect x="0.0000%" y="533" width="98.1108%" height="15" fill="rgb(225,32,20)" fg:x="0" fg:w="29497"/><text x="0.2500%" y="543.50">minecraft`minecraft::main</text></g><g><title>minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size (29,442 samples, 97.93%)</title><rect x="0.1829%" y="517" width="97.9278%" height="15" fill="rgb(215,141,46)" fg:x="55" fg:w="29442"/><text x="0.4329%" y="527.50">minecraft`winit::platform_impl::platform::window::UnownedWindow::inner_size</text></g><g><title>minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (29,442 samples, 97.93%)</title><rect x="0.1829%" y="501" width="97.9278%" height="15" fill="rgb(250,160,47)" fg:x="55" fg:w="29442"/><text x="0.4329%" y="511.50">minecraft`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>minecraft`objc::rc::autorelease::autoreleasepool (29,442 samples, 97.93%)</title><rect x="0.1829%" y="485" width="97.9278%" height="15" fill="rgb(216,222,40)" fg:x="55" fg:w="29442"/><text x="0.4329%" y="495.50">minecraft`objc::rc::autorelease::autoreleasepool</text></g><g><title>AppKit`-[NSApplication run] (29,442 samples, 97.93%)</title><rect x="0.1829%" y="469" width="97.9278%" height="15" fill="rgb(234,217,39)" fg:x="55" fg:w="29442"/><text x="0.4329%" y="479.50">AppKit`-[NSApplication run]</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (48 samples, 0.16%)</title><rect x="98.1440%" y="597" width="0.1597%" height="15" fill="rgb(207,178,40)" fg:x="29507" fg:w="48"/><text x="98.3940%" y="607.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (5 samples, 0.02%)</title><rect x="98.3236%" y="517" width="0.0166%" height="15" fill="rgb(221,136,13)" fg:x="29561" fg:w="5"/><text x="98.5736%" y="527.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (4 samples, 0.01%)</title><rect x="98.3270%" y="501" width="0.0133%" height="15" fill="rgb(249,199,10)" fg:x="29562" fg:w="4"/><text x="98.5770%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (7 samples, 0.02%)</title><rect x="98.3236%" y="533" width="0.0233%" height="15" fill="rgb(249,222,13)" fg:x="29561" fg:w="7"/><text x="98.5736%" y="543.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (4 samples, 0.01%)</title><rect x="98.3536%" y="341" width="0.0133%" height="15" fill="rgb(244,185,38)" fg:x="29570" fg:w="4"/><text x="98.6036%" y="351.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (6 samples, 0.02%)</title><rect x="98.3502%" y="405" width="0.0200%" height="15" fill="rgb(236,202,9)" fg:x="29569" fg:w="6"/><text x="98.6002%" y="415.50"></text></g><g><title>Metal`MTLDispatchListApply (6 samples, 0.02%)</title><rect x="98.3502%" y="389" width="0.0200%" height="15" fill="rgb(250,229,37)" fg:x="29569" fg:w="6"/><text x="98.6002%" y="399.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (6 samples, 0.02%)</title><rect x="98.3502%" y="373" width="0.0200%" height="15" fill="rgb(206,174,23)" fg:x="29569" fg:w="6"/><text x="98.6002%" y="383.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (5 samples, 0.02%)</title><rect x="98.3536%" y="357" width="0.0166%" height="15" fill="rgb(211,33,43)" fg:x="29570" fg:w="5"/><text x="98.6036%" y="367.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (4 samples, 0.01%)</title><rect x="98.3769%" y="357" width="0.0133%" height="15" fill="rgb(245,58,50)" fg:x="29577" fg:w="4"/><text x="98.6269%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.01%)</title><rect x="98.3769%" y="341" width="0.0133%" height="15" fill="rgb(244,68,36)" fg:x="29577" fg:w="4"/><text x="98.6269%" y="351.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (5 samples, 0.02%)</title><rect x="98.3769%" y="373" width="0.0166%" height="15" fill="rgb(232,229,15)" fg:x="29577" fg:w="5"/><text x="98.6269%" y="383.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (7 samples, 0.02%)</title><rect x="98.3735%" y="389" width="0.0233%" height="15" fill="rgb(254,30,23)" fg:x="29576" fg:w="7"/><text x="98.6235%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (9 samples, 0.03%)</title><rect x="98.3702%" y="405" width="0.0299%" height="15" fill="rgb(235,160,14)" fg:x="29575" fg:w="9"/><text x="98.6202%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (23 samples, 0.08%)</title><rect x="98.3469%" y="501" width="0.0765%" height="15" fill="rgb(212,155,44)" fg:x="29568" fg:w="23"/><text x="98.5969%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (23 samples, 0.08%)</title><rect x="98.3469%" y="485" width="0.0765%" height="15" fill="rgb(226,2,50)" fg:x="29568" fg:w="23"/><text x="98.5969%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (23 samples, 0.08%)</title><rect x="98.3469%" y="469" width="0.0765%" height="15" fill="rgb(234,177,6)" fg:x="29568" fg:w="23"/><text x="98.5969%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (23 samples, 0.08%)</title><rect x="98.3469%" y="453" width="0.0765%" height="15" fill="rgb(217,24,9)" fg:x="29568" fg:w="23"/><text x="98.5969%" y="463.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (22 samples, 0.07%)</title><rect x="98.3502%" y="437" width="0.0732%" height="15" fill="rgb(220,13,46)" fg:x="29569" fg:w="22"/><text x="98.6002%" y="447.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (22 samples, 0.07%)</title><rect x="98.3502%" y="421" width="0.0732%" height="15" fill="rgb(239,221,27)" fg:x="29569" fg:w="22"/><text x="98.6002%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (7 samples, 0.02%)</title><rect x="98.4001%" y="405" width="0.0233%" height="15" fill="rgb(222,198,25)" fg:x="29584" fg:w="7"/><text x="98.6501%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (24 samples, 0.08%)</title><rect x="98.3469%" y="533" width="0.0798%" height="15" fill="rgb(211,99,13)" fg:x="29568" fg:w="24"/><text x="98.5969%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (24 samples, 0.08%)</title><rect x="98.3469%" y="517" width="0.0798%" height="15" fill="rgb(232,111,31)" fg:x="29568" fg:w="24"/><text x="98.5969%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (358 samples, 1.19%)</title><rect x="98.4633%" y="469" width="1.1908%" height="15" fill="rgb(245,82,37)" fg:x="29603" fg:w="358"/><text x="98.7133%" y="479.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (358 samples, 1.19%)</title><rect x="98.4633%" y="453" width="1.1908%" height="15" fill="rgb(227,149,46)" fg:x="29603" fg:w="358"/><text x="98.7133%" y="463.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (358 samples, 1.19%)</title><rect x="98.4633%" y="437" width="1.1908%" height="15" fill="rgb(218,36,50)" fg:x="29603" fg:w="358"/><text x="98.7133%" y="447.50"></text></g><g><title>IOKit`IOConnectCallMethod (358 samples, 1.19%)</title><rect x="98.4633%" y="421" width="1.1908%" height="15" fill="rgb(226,80,48)" fg:x="29603" fg:w="358"/><text x="98.7133%" y="431.50"></text></g><g><title>IOKit`io_connect_method (358 samples, 1.19%)</title><rect x="98.4633%" y="405" width="1.1908%" height="15" fill="rgb(238,224,15)" fg:x="29603" fg:w="358"/><text x="98.7133%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (357 samples, 1.19%)</title><rect x="98.4667%" y="389" width="1.1874%" height="15" fill="rgb(241,136,10)" fg:x="29604" fg:w="357"/><text x="98.7167%" y="399.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (363 samples, 1.21%)</title><rect x="98.4500%" y="485" width="1.2074%" height="15" fill="rgb(208,32,45)" fg:x="29599" fg:w="363"/><text x="98.7000%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (407 samples, 1.35%)</title><rect x="98.3170%" y="549" width="1.3537%" height="15" fill="rgb(207,135,9)" fg:x="29559" fg:w="407"/><text x="98.5670%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (373 samples, 1.24%)</title><rect x="98.4301%" y="533" width="1.2406%" height="15" fill="rgb(206,86,44)" fg:x="29593" fg:w="373"/><text x="98.6801%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (372 samples, 1.24%)</title><rect x="98.4334%" y="517" width="1.2373%" height="15" fill="rgb(245,177,15)" fg:x="29594" fg:w="372"/><text x="98.6834%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (371 samples, 1.23%)</title><rect x="98.4367%" y="501" width="1.2340%" height="15" fill="rgb(206,64,50)" fg:x="29595" fg:w="371"/><text x="98.6867%" y="511.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (4 samples, 0.01%)</title><rect x="99.6574%" y="485" width="0.0133%" height="15" fill="rgb(234,36,40)" fg:x="29962" fg:w="4"/><text x="99.9074%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (408 samples, 1.36%)</title><rect x="98.3170%" y="565" width="1.3571%" height="15" fill="rgb(213,64,8)" fg:x="29559" fg:w="408"/><text x="98.5670%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (470 samples, 1.56%)</title><rect x="98.1141%" y="613" width="1.5633%" height="15" fill="rgb(210,75,36)" fg:x="29498" fg:w="470"/><text x="98.3641%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (413 samples, 1.37%)</title><rect x="98.3037%" y="597" width="1.3737%" height="15" fill="rgb(229,88,21)" fg:x="29555" fg:w="413"/><text x="98.5537%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (412 samples, 1.37%)</title><rect x="98.3070%" y="581" width="1.3704%" height="15" fill="rgb(252,204,47)" fg:x="29556" fg:w="412"/><text x="98.5570%" y="591.50"></text></g><g><title>SkyLight`CGSConnectionByID (4 samples, 0.01%)</title><rect x="99.7173%" y="421" width="0.0133%" height="15" fill="rgb(208,77,27)" fg:x="29980" fg:w="4"/><text x="99.9673%" y="431.50"></text></g><g><title>SkyLight`(anonymous namespace)::KeyEventLog::getLogString (4 samples, 0.01%)</title><rect x="99.7306%" y="405" width="0.0133%" height="15" fill="rgb(221,76,26)" fg:x="29984" fg:w="4"/><text x="99.9806%" y="415.50"></text></g><g><title>SkyLight`CGSEventLogEvent (7 samples, 0.02%)</title><rect x="99.7306%" y="421" width="0.0233%" height="15" fill="rgb(225,139,18)" fg:x="29984" fg:w="7"/><text x="99.9806%" y="431.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (4 samples, 0.01%)</title><rect x="99.7539%" y="405" width="0.0133%" height="15" fill="rgb(230,137,11)" fg:x="29991" fg:w="4"/><text x="100.0039%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (4 samples, 0.01%)</title><rect x="99.7539%" y="389" width="0.0133%" height="15" fill="rgb(212,28,1)" fg:x="29991" fg:w="4"/><text x="100.0039%" y="399.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (4 samples, 0.01%)</title><rect x="99.7672%" y="405" width="0.0133%" height="15" fill="rgb(248,164,17)" fg:x="29995" fg:w="4"/><text x="100.0172%" y="415.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (46 samples, 0.15%)</title><rect x="99.7539%" y="421" width="0.1530%" height="15" fill="rgb(222,171,42)" fg:x="29991" fg:w="46"/><text x="100.0039%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (38 samples, 0.13%)</title><rect x="99.7805%" y="405" width="0.1264%" height="15" fill="rgb(243,84,45)" fg:x="29999" fg:w="38"/><text x="100.0305%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (38 samples, 0.13%)</title><rect x="99.7805%" y="389" width="0.1264%" height="15" fill="rgb(252,49,23)" fg:x="29999" fg:w="38"/><text x="100.0305%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (38 samples, 0.13%)</title><rect x="99.7805%" y="373" width="0.1264%" height="15" fill="rgb(215,19,7)" fg:x="29999" fg:w="38"/><text x="100.0305%" y="383.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (64 samples, 0.21%)</title><rect x="99.6973%" y="469" width="0.2129%" height="15" fill="rgb(238,81,41)" fg:x="29974" fg:w="64"/><text x="99.9473%" y="479.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (59 samples, 0.20%)</title><rect x="99.7140%" y="453" width="0.1962%" height="15" fill="rgb(210,199,37)" fg:x="29979" fg:w="59"/><text x="99.9640%" y="463.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (58 samples, 0.19%)</title><rect x="99.7173%" y="437" width="0.1929%" height="15" fill="rgb(244,192,49)" fg:x="29980" fg:w="58"/><text x="99.9673%" y="447.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (70 samples, 0.23%)</title><rect x="99.6873%" y="517" width="0.2328%" height="15" fill="rgb(226,211,11)" fg:x="29971" fg:w="70"/><text x="99.9373%" y="527.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (70 samples, 0.23%)</title><rect x="99.6873%" y="501" width="0.2328%" height="15" fill="rgb(236,162,54)" fg:x="29971" fg:w="70"/><text x="99.9373%" y="511.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (67 samples, 0.22%)</title><rect x="99.6973%" y="485" width="0.2229%" height="15" fill="rgb(220,229,9)" fg:x="29974" fg:w="67"/><text x="99.9473%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (71 samples, 0.24%)</title><rect x="99.6873%" y="533" width="0.2362%" height="15" fill="rgb(250,87,22)" fg:x="29971" fg:w="71"/><text x="99.9373%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (19 samples, 0.06%)</title><rect x="99.9235%" y="533" width="0.0632%" height="15" fill="rgb(239,43,17)" fg:x="30042" fg:w="19"/><text x="100.1735%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (18 samples, 0.06%)</title><rect x="99.9268%" y="517" width="0.0599%" height="15" fill="rgb(231,177,25)" fg:x="30043" fg:w="18"/><text x="100.1768%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (18 samples, 0.06%)</title><rect x="99.9268%" y="501" width="0.0599%" height="15" fill="rgb(219,179,1)" fg:x="30043" fg:w="18"/><text x="100.1768%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (18 samples, 0.06%)</title><rect x="99.9268%" y="485" width="0.0599%" height="15" fill="rgb(238,219,53)" fg:x="30043" fg:w="18"/><text x="100.1768%" y="495.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (93 samples, 0.31%)</title><rect x="99.6840%" y="549" width="0.3093%" height="15" fill="rgb(232,167,36)" fg:x="29970" fg:w="93"/><text x="99.9340%" y="559.50"></text></g><g><title>all (30,065 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(244,19,51)" fg:x="0" fg:w="30065"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (97 samples, 0.32%)</title><rect x="99.6774%" y="613" width="0.3226%" height="15" fill="rgb(224,6,22)" fg:x="29968" fg:w="97"/><text x="99.9274%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (97 samples, 0.32%)</title><rect x="99.6774%" y="597" width="0.3226%" height="15" fill="rgb(224,145,5)" fg:x="29968" fg:w="97"/><text x="99.9274%" y="607.50"></text></g><g><title>AppKit`_NSEventThread (97 samples, 0.32%)</title><rect x="99.6774%" y="581" width="0.3226%" height="15" fill="rgb(234,130,49)" fg:x="29968" fg:w="97"/><text x="99.9274%" y="591.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (96 samples, 0.32%)</title><rect x="99.6807%" y="565" width="0.3193%" height="15" fill="rgb(254,6,2)" fg:x="29969" fg:w="96"/><text x="99.9307%" y="575.50"></text></g></svg></svg>